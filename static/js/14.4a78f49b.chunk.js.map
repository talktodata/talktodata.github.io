{"version":3,"sources":["../node_modules/axios/lib/utils.js","../node_modules/antd/es/_util/reactNode.js","axios/config.js","constant/FactType.js","constant/ChartType.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/cancel/Cancel.js","axios/api.js","../node_modules/antd/es/_util/type.js","constant/FieldType.js","../node_modules/reselect/es/index.js","tool/distance.js","tool/hcluster.js","tool/factAggRule.js","tool/factAggregation.js","tool/tree.js","selector/story.js","../node_modules/axios/index.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","pages/EditPage/Dashboard/index.js","tool/fact2vis/getSuitableBreakdownList.js","tool/fact2vis/datafilter.js","tool/fact2vis/helper.js","tool/fact2vis/fact2visAllRule.js","tool/fact2vis/fact2visRule.js","tool/fact2vis/getSupportedChartTypes.js","tool/fact2vis/Chart.js","tool/fact2vis/fact2vis.js","action/questionAction.js","action/dataAction.js","action/storyAction.js","selector/question.js","sentencer/fact-templates/association.js","sentencer/fact-templates/categorization.js","sentencer/fact-templates/difference.js","sentencer/fact-templates/distribution.js","sentencer/fact-templates/extreme.js","sentencer/fact-templates/outlier.js","sentencer/fact-templates/proportion.js","sentencer/fact-templates/rank.js","sentencer/fact-templates/trend.js","sentencer/fact-templates/value.js","sentencer/fact-templates/index.js","constant/AggregationType.js","sentencer/index.js","tool/helper.js","pages/EditPage/Dashboard/Layout/ChartCard/AnsweredFacts.js","components/ErrorView/ErrorView.js","pages/EditPage/Dashboard/Layout/layout.js","pages/EditPage/Dashboard/dashboard.js"],"names":["bind","require","toString","Object","prototype","isArray","val","call","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","forEach","obj","fn","i","l","length","key","hasOwnProperty","module","exports","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","slice","arguments","extend","a","b","thisArg","trim","str","replace","stripBOM","content","charCodeAt","isValidElement","React","cloneElement","element","props","replacement","replaceElement","uploadPrefix","generationUrlPrefix","config","url","uploadData","share","fetch","factScoring","generate","candidateQuestions","VALUE","TREND","CATEGORIZATION","DIFFERENCE","PROPORTION","DISTRIBUTION","RANK","ASSOCIATION","EXTREME","OUTLIER","JUXTAPOSITION","AREA_CHART","VERTICAL_BAR_CHART","VERTICAL_DIFFERENCE_BAR_CHART","VERTICAL_DIFFERENCE_ARROW_CHART","HORIZONTAL_BAR_CHART","PROGRESS_BAR_CHART","STACKED_BAR_CHART","ISOTYPE_BAR_CHART","PROPORTION_ISOTYPE_CHART","COLOR_FILLING_MAP","BUBBLE_CHART","TEXT_CHART","LINE_CHART","STACKED_LINE_CHART","RING_CHART","HALF_RING_CHART","PIE_CHART","SCATTER_PLOT","TREE_MAP","BUBBLE_MAP","args","Array","apply","utils","encode","encodeURIComponent","params","paramsSerializer","serializedParams","parts","v","toISOString","JSON","stringify","push","join","hashmarkIndex","indexOf","value","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","process","getDefaultAdapter","transformRequest","data","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","method","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","Promise","resolve","reject","requestData","requestHeaders","type","request","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","open","toUpperCase","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","Error","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","keys","filter","Cancel","this","formData","reslove","axios","catch","getQuestions","generatePDF","param","tuple","_len","_key","NUMERICAL","CATEGORICAL","TEMPORAL","GEOGRAPHICAL","defaultEqualityCheck","areArgumentsShallowlyEqual","equalityCheck","prev","next","getDependencies","funcs","dependencies","every","dep","dependencyTypes","map","createSelector","memoize","memoizeOptions","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","selector","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","factSimilarity","f1","f2","s2","s3","s1","m1","measure","x","field","m2","m_intersection","includes","m_longer","s4","subspace1fields","subspace","subspace2fields","subspace_intersection","subspace_longer","s5","g1","groupby","g2","g_intersection","g_longer","focus1","focus","focus2","focus_intersection","focus_longer","factDistance","HierarchicalClustering","distance","linkage","threshold","Infinity","cluster","items","snapshotPeriod","snapshotCb","clusters","dists","mins","index","size","j","dist","merged","mergeClosest","minKey","min","c1","c2","left","right","splice","ci","key1","key2","factAggRules","storyAggregation","original_facts","aggregationLevel","facts","aggregated","aggregatedFact","doubleNodes","getLeafNodes","tree","nodes","leftLeafNodes","rightLeafNodes","snapshot","snapshotCallback","hcluster","sort","aggregationCount","parseInt","aggFacts","aggFact","firstIndex","secondIndex","factAggregation","rule","compoundFact","_","cloneDeep","compoundType","compoundChart","ChartType","score","chart","eqSet","Set","as","bs","has","fileName","state","story","title","schema","relations","maxStoryLength","resultCoverage","rewardWeight","generateProgress","originFacts","storyParameter","information","chartDiversity","timeLimit","Axios","mergeConfig","createInstance","defaultConfig","context","instance","create","instanceConfig","CancelToken","isCancel","all","promises","spread","default","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","getUri","handlers","use","eject","id","h","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","normalizedName","name","isAxiosError","toJSON","description","number","lineNumber","columnNumber","stack","write","expires","path","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","requestedURL","test","relativeURL","ignoreDuplicateOf","parsed","split","line","substr","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","executor","TypeError","resolvePromise","token","c","callback","arr","connect","cachedQA","isUpdateLayout","editedTitle","dispatch","dataAction","generateStory","coverage","storyAction","updateProgress","totalLength","currentLength","updateQuestion","question","questionAction","saveCachedDecomposedQA","QA","updateCovertType","covertType","userAction","updateOperation","operateState","editTitle","Dashboard","getSuitableBreakdownList","factType","chartType","suitableBreakdownList","fact2visAllRules","fact","breakdownSets","breakdownType","add","breakdownList","from","s","datafilter","filteredData","sub","isValid","FactType","customizeFact","newFact","assign","groupbyList","measureList","gbValueList","getFieldValue","encoding","aggregate","aggregatedRows","getAggregatedRows","measureField","max","reduce","extremeFocus","extremeValue","newOrder","y","d","newOrderValue","n","posQ3","posQ1","decimalQ3","decimalQ1","Q3","Q1","Low","Up","outlierIndex","groupbyFieldList","getMaxRows","rawData","d3","entries","values","aggregation","calculateData","sumData","fill","sumRows","getSumRows","getAverageRows","getMinRows","countData","countRows","getCountRows","fieldName","FieldType","fact2visRules","getSupportedChartTypes","supportedChartTypes","isEdit","breakDown","rules","rang","Chart","spec","container","autovis","AutoVis","load","preProps","vega_w","width","height","style","display","alignItems","justifyContent","Component","getChoice","Math","round","random","getFactChartType","shema","getvischartype","fact2chart","specData","containerId","vegalite","console","log","specChart","duration","showSuggestion","specNew","ActionType","UPDATE_QUESTION","SAVE_CACHED_QA","UPLOAD_DATA","GENERATE_STORY","UPDATE_PROGRESS","templates","pickFactTemplate","association","categorization","difference","distribution","extreme","outlier","proportion","rank","trend","floor","sentence","template","SUM","MAX","MIN","AVG","COUNT","plur","convertAggregation","aggType","AggregationType","NONE","convertMeasure","convertGroupby","gb","gbWords","gbWordIndex","plurWord","formatNum","num","floatNum","intNum","toFixed","substring","counter","genFactSubspace","hightlightItem","script","parameter","srtEndIndex","srtStartIndex","newScript","hightlight","generatedScript","parameter1","parameter2","parameter3","visSmall","visNodes","Map","captionNodes","renderLayout","AnsweredFacts","layoutNode","createRef","onResize","setTimeout","updateTreeMapLayout","current","clientWidth","clientHeight","QAID","TreemapSize","preWidth","preHeight","forceUpdate","updateTreemapSize","batchUpdateVis","svgTransformer","newWidth","newHeight","get","visNode","captionNode","visWidth","visHeight","captionH","x0","x1","y0","y1","updateAVis","scale","visChart","children","onmouseenter","onmouseleave","_isValidate","_renderedFacts","renderNum","count","cachedFact","visCaptionH","theFact","findIndex","setState","weightAdapter","columnNum","innerNum","weightTable","significance","change","event","getTreemap","tile","ratio","padding","sum","getSize","setRef","set","setCaptionRef","endEdit","visId","innerHTML","deleteCard","newCachedQA","parentId","visBox","renderData","leaves","LayoutView","_fact","Number","parseFloat","parameterList","focusValue","genFactSentence","position","top","className","onClick","ref","contentEditable","suppressContentEditableWarning","onBlur","dangerouslySetInnerHTML","__html","layout","ErrorView","initDone","intl","PureComponent","subTitleNodes","titleRef","setFactId","uuidv4","fullscreen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","reorder","columns","cols","out","col","_val","_nodes","setSubTitleRef","endTitleEdit","newtTitle","export","print","getTitle","askedQuestion","titleValue","decomposedQA","loading","TitleView","SubTitleView","subQustion","newStr","borderColor","columnCount","getData","file_name","model","api","addParams","constructGroupBy","breakdown","getFakeScript","subQuestion","getFakeFocus","nextProps","tip"],"mappings":"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","file":"static/js/14.4a78f49b.chunk.js","sourcesContent":["'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","import * as React from 'react';\nvar isValidElement = React.isValidElement;\nexport { isValidElement };\nexport function replaceElement(element, replacement, props) {\n  if (!isValidElement(element)) return replacement;\n  return /*#__PURE__*/React.cloneElement(element, typeof props === 'function' ? props(element.props || {}) : props);\n}\nexport function cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}","//let calliopeService = 'calliope-service.idvxlab.com:8004';\nlet calliopeService = 'talk-api.idvxlab.com:8006';\n\nlet uploadPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeService}` : 'http://localhost:6028';//todo \n//let uploadPrefix = `https://${calliopeService}`\nlet generationUrlPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeService}` : 'http://localhost:6030';\n//let generationUrlPrefix = `https://${calliopeService}`\n\n\nconst config = {\n    url: {\n        //upload\n        uploadPrefix: uploadPrefix,\n        uploadData: `${uploadPrefix}/upload`,\n        share: `${uploadPrefix}/share`,\n        fetch: `${uploadPrefix}/data/share`,\n        //story generation\n        factScoring: `${generationUrlPrefix}/fact`,\n        generate: `${generationUrlPrefix}/generate`,\n        candidateQuestions: `https://${calliopeService}/column2questions`,\n    }\n}\nexport default config","export default {\n    VALUE: 'value',\n    TREND: 'trend',\n    CATEGORIZATION: 'categorization',\n    DIFFERENCE: 'difference',\n    PROPORTION: 'proportion',\n    DISTRIBUTION: 'distribution',\n    RANK: 'rank',\n    ASSOCIATION: 'association',\n    EXTREME: 'extreme',\n    OUTLIER: 'outlier'\n}","export default {\n    JUXTAPOSITION: 'juxtaposition',\n    AREA_CHART: 'Area Chart',\n    VERTICAL_BAR_CHART: 'Vertical Bar Chart',\n    VERTICAL_DIFFERENCE_BAR_CHART: 'Vertical Difference Bar Chart',\n    VERTICAL_DIFFERENCE_ARROW_CHART: 'Vertical Difference Arrow Chart',\n    HORIZONTAL_BAR_CHART: 'Horizontal Bar Chart',\n    PROGRESS_BAR_CHART: 'Progress Bar Chart',\n    STACKED_BAR_CHART: 'Stacked Bar Chart',\n    ISOTYPE_BAR_CHART: 'Isotype Bar Chart',\n    PROPORTION_ISOTYPE_CHART: 'Proportion Isotype Chart',\n    COLOR_FILLING_MAP: 'Color Filling Map',\n    BUBBLE_CHART: 'Bubble Chart',\n    TEXT_CHART: 'Text Chart',\n    LINE_CHART: 'Line Chart',\n    STACKED_LINE_CHART: 'Stacked Line Chart',\n    RING_CHART: 'Ring Chart',\n    HALF_RING_CHART: 'Half Ring Chart',\n    PIE_CHART: 'Pie Chart',\n    SCATTER_PLOT: 'Scatter Plot',\n    TREE_MAP: 'Treemap',\n    BUBBLE_MAP: 'Bubblemap'\n}","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    if (\n      (utils.isBlob(requestData) || utils.isFile(requestData)) &&\n      requestData.type\n    ) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = unescape(encodeURIComponent(config.auth.password)) || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","import config from '@/axios/config';\nimport axios from 'axios';\n\nexport async function uploadData(formData) {\n    return new Promise((reslove, reject) => {\n        axios({\n            method: \"post\",\n            url: `${config.url.uploadData}`,\n            config: {\n                \"headers\": {\n                    'Content-Type': 'multipart/form-data' //application/json; charset=utf-8\n                },\n            },\n            data: formData\n        }).then((response) => {\n            if (response.status >= 400) {\n                reject();\n            } else if (response.status === 200 || response.status === 201 || response.status === 204) {\n                reslove(response.data);\n            } else {\n                reject();\n            }\n        }).catch(error => {\n            reject();\n            //  message.error('error message');\n        })\n    })\n}\n\n\nexport function generate(data) {\n    return axios({\n        method: \"post\",\n        url: `${config.url.generate}`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        },\n        data: data\n    })\n}\n\nexport function getQuestions(data) {\n    return axios({\n        method: \"post\",\n        url: `${config.url.candidateQuestions}`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        },\n        data: data\n    })\n}\nexport function factScoring(filename, fact, method) {\n    return axios({\n        \"method\": \"POST\",\n        \"url\": config.url.factScoring,\n        \"headers\": {\n            \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        \"data\": {\n            \"file_name\": filename,\n            \"fact\": fact,\n            \"method\": method,\n        }\n    })\n}\n\nexport async function shareStory(jsonstring) {\n    return new Promise((reslove, reject) => {\n        axios({\n            method: \"post\",\n            url: `${config.url.share}`,\n            config: {\n                \"headers\": {\n                    'Content-Type': 'application/json; charset=utf-8'\n                },\n            },\n            data: {\n                \"share_json\": jsonstring\n            }\n        }).then((response) => {\n            if (response.status >= 400) {\n                reject();\n            } else if (response.status === 200 || response.status === 201 || response.status === 204) {\n                reslove(response.data);\n            } else {\n                reject();\n            }\n        }).catch(error => {\n            reject();\n            //  message.error('error message');\n        })\n    })\n}\n\nexport async function fetchStory(id) {\n    return axios({\n        method: \"get\",\n        \"url\": `${config.url.fetch}/${id}.json`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        }\n    })\n}\n/*****\n *技术栈：\n ssr(后端渲染)，koa(koa-views)：模板渲染，渲染出要生成pdf的页面)\n node.js 生成pdf插件 puppeteer：将渲染的页面生成PDF\n koa-send：将生成的PDF返回给前端页面下载 \n * \n data是后端用于渲染页面的数据\n */\nexport function generatePDF(data) {\n    return axios({\n        method: 'post',\n        url: `/generatePDF`,\n        param: {},\n        data: data\n    })\n}\n","// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport var tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\nexport var tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};","export default {\n    NUMERICAL: 'numerical',\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEOGRAPHICAL: 'geographical',\n}","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","export const euclidean = function(v1, v2) {\n    var total = 0;\n    for (var i = 0; i < v1.length; i++) {\n       total += Math.pow(v2[i] - v1[i], 2);      \n    }\n    return Math.sqrt(total);\n}\n\nexport const manhattan = function(v1, v2) {\n   var total = 0;\n   for (var i = 0; i < v1.length ; i++) {\n      total += Math.abs(v2[i] - v1[i]);      \n   }\n   return total;\n}\n\nexport const factSimilarity = function(f1, f2) {\n   // 1. fact\n   let s1 = f1.type === f2.type ? 1 : 0;\n\n   // 2. measure\n   let s2\n   let m1 = f1.measure.map(x=>x.field);\n   let m2 = f2.measure.map(x=>x.field);\n   if (m1.length === 0 && m2.length === 0) {\n      s2 = 1 // no measure\n   } else {\n      let m_intersection = m1.filter(value => m2.includes(value));\n      let m_longer = m1.length > m2.length ? m1 : m2;\n      s2 = m_intersection.length / m_longer.length;\n   }\n\n   // 3. subspace\n   let s3\n   let subspace1fields = f1.subspace.map(x=>x.field);\n   let subspace2fields = f2.subspace.map(x=>x.field);\n   if (subspace1fields.length === 0 && subspace2fields.length === 0) {\n      s3 = 1 // subspace is whole data\n   } else {\n      let subspace_intersection = subspace1fields.filter(value => subspace2fields.includes(value));\n      let subspace_longer = subspace1fields.length > subspace2fields.length ? subspace1fields : subspace2fields;\n      s3 = subspace_intersection.length / subspace_longer.length;\n   }\n\n   // 4. groupby\n   let s4;\n   let g1 = f1.groupby;\n   let g2 = f2.groupby;\n   if (g1.length === 0 && g2.length === 0) {\n      s4 = 1;\n   } else {\n      let g_intersection = g1.filter(value => g2.includes(value));\n      let g_longer = g1.length > g2.length ? g1 : g2;\n      s4 = g_intersection.length / g_longer.length;\n   }\n   \n   // 5. focus\n   let s5;\n   let focus1 = f1.focus.map(x=>x.value);\n   let focus2 = f2.focus.map(x=>x.value);\n   if (focus1.length === 0 && focus2.length === 0) {\n      s5 = 0; // no focus\n   } else {\n      let focus_intersection = focus1.filter(value => focus2.includes(value))\n      let focus_longer = focus1.length > focus2.length ? focus1 : focus2\n      s5 = focus_intersection.length / focus_longer.length\n   }\n\n   let similarity = 0.2*s1 + 0.2*s2 + 0.2*s3 + 0.2*s4 + 0.2*s5;\n   return similarity;\n}\n\nexport const factDistance = function(f1, f2) {\n   return 1 - factSimilarity(f1, f2)\n}","// reference: https://github.com/harthur/clustering\nimport {factDistance} from './distance';\n\nconst HierarchicalClustering = function(distance, linkage, threshold) {\n    this.distance = distance;\n    this.linkage = linkage;\n    this.threshold = threshold === undefined ? Infinity : threshold;\n}\n\nHierarchicalClustering.prototype = {\n    cluster : function(items, snapshotPeriod, snapshotCb) {\n        this.clusters = [];\n        this.dists = [];  // distances between each pair of clusters\n        this.mins = []; // closest cluster for each cluster\n        this.index = []; // keep a hash of all clusters by key\n        \n        for (let i = 0; i < items.length; i++) {\n            let cluster = {\n                value: items[i],\n                key: i,\n                index: i,\n                size: 1\n            };\n            this.clusters[i] = cluster;\n            this.index[i] = cluster;\n            this.dists[i] = [];\n            this.mins[i] = 0;\n        }\n\n        for (let i = 0; i < this.clusters.length; i++) {\n            for (let j = 0; j <= i; j++) {\n                let dist = (i === j) ? Infinity : \n                this.distance(this.clusters[i].value, this.clusters[j].value);\n                this.dists[i][j] = dist;\n                this.dists[j][i] = dist;\n\n                if (dist < this.dists[i][this.mins[i]]) {\n                this.mins[i] = j;               \n                }\n            }\n        }\n\n        let merged = this.mergeClosest();\n        let i = 0;\n        while (merged) {\n            if (snapshotCb && (i++ % snapshotPeriod) === 0) {\n            snapshotCb(this.clusters);           \n            }\n            merged = this.mergeClosest();\n        }\n        \n        this.clusters.forEach(function(cluster) {\n            // clean up metadata used for clustering\n            delete cluster.key;\n            delete cluster.index;\n        });\n\n        return this.clusters;\n    },\n\n    mergeClosest: function() {\n        // find two closest clusters from cached mins\n        let minKey = 0, min = Infinity;\n        for (let i = 0; i < this.clusters.length; i++) {\n            let key = this.clusters[i].key,\n                dist = this.dists[key][this.mins[key]];\n            if (dist < min) {\n                minKey = key;\n                min = dist;\n            }\n        }\n        if (min >= this.threshold) {\n            return false;         \n        }\n\n        let c1 = this.index[minKey],\n            c2 = this.index[this.mins[minKey]];\n\n        // merge two closest clusters\n        let merged = {\n            left: c1,\n            right: c2,\n            key: c1.key,\n            size: c1.size + c2.size\n        };\n\n        this.clusters[c1.index] = merged;\n        this.clusters.splice(c2.index, 1);\n        this.index[c1.key] = merged;\n\n        // update distances with new merged cluster\n        for (let i = 0; i < this.clusters.length; i++) {\n            let ci = this.clusters[i];\n            let dist;\n            if (c1.key === ci.key) {\n                dist = Infinity;            \n            }\n            else if (this.linkage === \"single\") {\n                dist = this.dists[c1.key][ci.key];\n                if (this.dists[c1.key][ci.key] > this.dists[c2.key][ci.key]) {\n                dist = this.dists[c2.key][ci.key];\n                }\n            }\n            else if (this.linkage === \"complete\") {\n                dist = this.dists[c1.key][ci.key];\n                if (this.dists[c1.key][ci.key] < this.dists[c2.key][ci.key]) {\n                dist = this.dists[c2.key][ci.key];              \n                }\n            }\n            else if (this.linkage === \"average\") {\n                dist = (this.dists[c1.key][ci.key] * c1.size\n                    + this.dists[c2.key][ci.key] * c2.size) / (c1.size + c2.size);\n            }\n            else {\n                dist = this.distance(ci.value, c1.value);            \n            }\n\n            this.dists[c1.key][ci.key] = this.dists[ci.key][c1.key] = dist;\n        }\n\n        \n        // update cached mins\n        for (let i = 0; i < this.clusters.length; i++) {\n            let key1 = this.clusters[i].key;        \n            if (this.mins[key1] === c1.key || this.mins[key1] === c2.key) {\n                let min = key1;\n                for (let j = 0; j < this.clusters.length; j++) {\n                let key2 = this.clusters[j].key;\n                if (this.dists[key1][key2] < this.dists[key1][min]) {\n                    min = key2;                  \n                }\n                }\n                this.mins[key1] = min;\n            }\n            this.clusters[i].index = i;\n        }\n        \n        // clean up metadata used for clustering\n        delete c1.key; delete c2.key;\n        delete c1.index; delete c2.index;\n\n        return true;\n    }\n    }\n\nexport const hcluster = function(items, linkage, threshold, snapshot, snapshotCallback) {\n    linkage = linkage || \"average\";\n    let clusters = (new HierarchicalClustering(factDistance, linkage, threshold))\n                   .cluster(items, snapshot, snapshotCallback);\n       \n    if (threshold === undefined) {\n       return clusters[0]; // all clustered into one\n    }\n    return clusters;\n}","export const factAggRules = [\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Stacked Bar Chart\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"difference\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"Horizontal Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"rank\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"distribution\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"difference\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"difference\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Horizontal Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"rank\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Horizontal Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"rank\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"distribution\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"extreme\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"outlier\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"trend\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"Horizontal Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"rank\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"extreme\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme+outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Line Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"outlier\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme+outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Line Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"difference\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"trend\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Line Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"Line Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Stacked Line Chart\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  }\n]","import _ from 'lodash';\nimport {hcluster} from './hcluster';\nimport {getLeafNodes} from './tree';\nimport {factSimilarity} from './distance';\nimport {factAggRules} from './factAggRule';\nimport ChartType from '../constant/ChartType';\n\nexport const storyAggregation = function(original_facts, aggregationLevel) {\n    let facts = original_facts.slice();\n    for (let index = 0; index < facts.length; index++) {\n        facts[index].index = index;\n        facts[index].aggregated = false;\n        facts[index].aggregatedFact = null;\n    }\n    // Step 1. construct a hierachical cluster tree\n    let htree = hcluster(facts);\n    // Step 2. get all single leaf and double leaves\n    let nodes = getLeafNodes(htree);\n    // Step 3. filter double leaves\n    let doubleNodes = nodes.filter(x=>x.length>1);\n    // Step 4. rank according to fact similarity\n    doubleNodes.sort(function(a, b){return factSimilarity(b[0], b[1]) - factSimilarity(a[0], a[1])});\n    let aggregationCount = parseInt((doubleNodes.length+1) * aggregationLevel)\n    let aggFacts = doubleNodes.slice(0, aggregationCount);\n    for (const aggFact of aggFacts) {\n        let firstIndex = aggFact[0].index < aggFact[1].index? aggFact[0].index:aggFact[1].index;\n        let secondIndex = aggFact[0].index > aggFact[1].index? aggFact[0].index:aggFact[1].index;\n        facts[firstIndex] = factAggregation(facts[firstIndex], facts[secondIndex])\n        facts[secondIndex].aggregated = true;\n        facts[secondIndex].aggregatedFact = null;\n    }\n    return facts;\n}\n\nexport const factAggregation = function(f1, f2) {\n    let rule = factAggRules.filter(x=>(x['Fact Type 1']===f1.type&&x['Fact Type 2']===f2.type))[0]\n    let compoundFact = _.cloneDeep(f1);\n    compoundFact.aggregated = true;\n    compoundFact.aggregatedFact = _.cloneDeep(f2)\n    compoundFact.compoundType = [f1.type, f2.type];\n    compoundFact.compoundChart = ChartType.JUXTAPOSITION;\n    compoundFact.score += compoundFact.aggregatedFact.score;\n    // Step 1. check rule is juxtaposition or not\n    if (rule.chart === ChartType.JUXTAPOSITION) {\n        return compoundFact;\n    }\n    // Step 2. process stacked chart\n    if (rule.chart === ChartType.STACKED_BAR_CHART) {\n        compoundFact.compoundChart = ChartType.STACKED_BAR_CHART;\n        return compoundFact;\n    }\n    if (rule.chart === ChartType.STACKED_LINE_CHART) {\n        compoundFact.compoundChart = ChartType.STACKED_LINE_CHART;\n        return compoundFact;\n    }\n\n    // Step 3. check equal rule\n    if (rule['Measure'] === \"equal\") {\n        let measure1 = new Set(f1.measure.map(x=>x[\"field\"]));\n        let measure2 = new Set(f2.measure.map(x=>x[\"field\"]));\n        if (!eqSet(measure1, measure2)) {\n            return compoundFact;\n        }\n    }\n    if (rule['Subspace'] === \"equal\") {\n        let subspace1 = new Set(f1.subspace.map(x=>x[\"field\"]+\"++\"+x[\"value\"]));\n        let subspace2 = new Set(f2.subspace.map(x=>x[\"field\"]+\"++\"+x[\"value\"]));\n        if (!eqSet(subspace1, subspace2)) {\n            return compoundFact;\n        }\n    }\n    if (rule['Groupby'] === \"equal\") {\n        let groupby1 = new Set(f1.groupby);\n        let groupby2 = new Set(f2.groupby);\n        if (!eqSet(groupby1, groupby2)) {\n            return compoundFact;\n        }\n    }\n    if (rule['Focus'] === \"equal\") {\n        let focus1 = new Set(f1.focus.map(x=>x[\"field\"]+\"++\"+x[\"value\"]));\n        let focus2 = new Set(f2.focus.map(x=>x[\"field\"]+\"++\"+x[\"value\"]));\n        if (!eqSet(focus1, focus2)) {\n            return compoundFact;\n        }\n    }\n    // Step 4. fill fact\n    compoundFact.compoundChart = rule['Chart'];\n    if (rule['Measure'] !== \"equal\" && rule['Measure'] !== \"\") {\n        if (f1.type === rule['Measure']) {\n            compoundFact.measure = f1.measure;\n        } else {\n            compoundFact.measure = f2.measure;\n        }\n    }\n    if (rule['Subspace'] !== \"equal\" && rule['Subspace'] !== \"\") {\n        if (f1.type === rule['Subspace']) {\n            compoundFact.subspace = f1.subspace;\n        } else {\n            compoundFact.subspace = f2.subspace;\n        }\n    }\n    if (rule['Groupby'] !== \"equal\" && rule['Groupby'] !== \"\") {\n        if (f1.type === rule['Groupby']) {\n            compoundFact.groupby = f1.groupby;\n        } else {\n            compoundFact.groupby = f2.groupby;\n        }\n    }\n    if (rule['Focus'] !== \"equal\" && rule['Focus'] !== \"\") {\n        if (f1.type === rule['Focus']) {\n            compoundFact.focus = f1.focus;\n        } else {\n            compoundFact.focus = f2.focus;\n        }\n    }\n    \n    return compoundFact;\n}\n\nfunction eqSet(as, bs) {\n    if (as.size !== bs.size) return false;\n    for (var a of as) if (!bs.has(a)) return false;\n    return true;\n}","export const getLeafNodes = (tree) => {\n    let nodes = []\n    if (!tree) {\n        return nodes\n    }\n    if (tree.size > 2) {\n        let leftLeafNodes = getLeafNodes(tree.left);\n        let rightLeafNodes = getLeafNodes(tree.right);\n        nodes.push(...leftLeafNodes);\n        nodes.push(...rightLeafNodes);\n    } else if (tree.size === 2) {\n        nodes.push([tree.left.value, tree.right.value]);\n    } else {\n        nodes.push([tree.value]);\n    }\n    return nodes;\n}","import { createSelector } from 'reselect';\nimport { storyAggregation } from '../tool/factAggregation';\n\n// data\nexport const fileName = state => state.story.fileName;\nexport const title = state => state.story.title;\nexport const data = state => state.story.data;\nexport const schema = state => state.story.schema;\n// story\nconst originFacts = state => state.story.facts;\nexport const relations = state => state.story.relations;\nexport const method = state => state.story.method;\nexport const maxStoryLength = state => state.story.maxStoryLength;\nexport const chartDiversity = state => state.story.chartDiversity;\nexport const information = state => state.story.information;\nexport const timeLimit = state => state.story.timeLimit;\nexport const resultCoverage = state => state.story.resultCoverage;\nexport const aggregationLevel = state => state.story.aggregationLevel;\nexport const rewardWeight = state => state.story.rewardWeight;\nexport const historyStory = state => state.story.historyStory;\nexport const generateProgress = state => state.story.generateProgress;\n\n\nexport const facts = createSelector(\n    originFacts,\n    aggregationLevel,\n    function (originFacts, aggregationLevel) {\n        return storyAggregation(originFacts, aggregationLevel)\n    }\n)\n\n\nexport const storyParameter = createSelector(\n    maxStoryLength,\n    information,\n    chartDiversity,\n    timeLimit,\n    function (maxStoryLength, information, chartDiversity, timeLimit) {\n        return {\n            maxStoryLength: maxStoryLength,\n            information: information,\n            chartDiversity: chartDiversity,\n            timeLimit: timeLimit,\n        }\n    }\n)\n\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","import { connect } from 'react-redux';\nimport { fileName, schema, relations, storyParameter, maxStoryLength, data, resultCoverage, aggregationLevel, facts, rewardWeight, title, generateProgress } from '@/selector/story';\nimport { cachedQA, isUpdateLayout, editedTitle } from '@/selector/question';\nimport * as dataAction from '@/action/dataAction';\nimport * as storyAction from '@/action/storyAction';\nimport * as userAction from '@/action/userAction';\nimport * as questionAction from '@/action/questionAction';\n\nimport Dashboard from './dashboard';\n\nconst mapStateToProps = (state) => ({\n    schema: schema(state),\n    // facts: facts(state),\n    relations: relations(state),\n    data: data(state),\n    title: title(state),\n    resultCoverage: resultCoverage(state),\n    fileName: fileName(state),\n    storyParameter: storyParameter(state),\n    maxStoryLength: maxStoryLength(state),\n    rewardWeight: rewardWeight(state),\n    aggregationLevel: aggregationLevel(state),\n    generateProgress: generateProgress(state),\n    cachedQA: cachedQA(state),\n    isUpdateLayout: isUpdateLayout(state),\n    editedTitle: editedTitle(state)\n})\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        //data\n        uploadData: (fileName, schema, data) => dispatch(dataAction.uploadData(fileName, schema, data)),\n        //story\n        generateStory: (facts, relations, coverage) => dispatch(storyAction.generateStory(facts, relations, coverage)),\n        updateProgress: (totalLength, currentLength) => dispatch(storyAction.updateProgress(totalLength, currentLength)),\n        //question\n        updateQuestion: (question) => dispatch(questionAction.updateQuestion(question)),\n        saveCachedDecomposedQA: (QA) => dispatch(questionAction.saveCachedDecomposedQA(QA)),\n        //user\n        updateCovertType: (covertType) => dispatch(userAction.updateCovertType(covertType)),\n        updateOperation: (operateState) => dispatch(userAction.updateOperation(operateState)),\n        editTitle: (title) => dispatch(userAction.editTitle(title)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import { fact2visAllRules } from './fact2visAllRule';\n\nconst getSuitableBreakdownList = (factType, chartType, schema) => {\n    //acording to factType ---> filter\n    let suitableBreakdownList = fact2visAllRules.filter(x => x.fact === factType);\n\n    //if has choosed chartType ---> filter\n    if (chartType) {\n        suitableBreakdownList = suitableBreakdownList.filter(x => x.chart === chartType);\n    }\n    if (suitableBreakdownList.length === 0) return [];\n    let breakdownSets = new Set();\n    suitableBreakdownList.forEach(x => {\n        x.breakdownType.forEach(type => {\n            breakdownSets.add(type)\n        })\n    })\n    let breakdownList = Array.from(breakdownSets);\n    //console.log(\"suitableBreakdownList\", breakdownList)\n    let suitableSchema = schema.filter(s => {\n        return breakdownList.indexOf(s.type) !== -1\n    })\n    // suitableSchema = suitableSchema.map(shema => {\n    //     return shema.field\n    // })\n    //console.log(\"suitableSchema\", suitableSchema)\n    return suitableSchema;\n};\nexport default getSuitableBreakdownList;","const datafilter = (data, subspace) => {\n    let filteredData = data;\n    for (const sub of subspace) {\n        filteredData = filteredData.filter((x)=>x[sub.field]===sub.value)\n    }\n    return filteredData\n}\n\nexport default datafilter;","import FactType from '@/constant/FactType'\nimport getSuitableBreakdownList from './getSuitableBreakdownList';\nimport datafilter from './datafilter';\nimport * as d3 from 'd3';\n// import _ from 'lodash';\n\n// chart valid\nexport const isValid = function (fact) {\n    let isValid = false;\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            if (fact.measure.length === 2)\n                isValid = true\n            break;\n\n        case FactType.CATEGORIZATION:\n            if (fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.DIFFERENCE:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length >= 2)\n                isValid = true\n            break;\n\n        case FactType.DISTRIBUTION:\n            if (fact.measure.length && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.EXTREME:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.OUTLIER:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.PROPORTION:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.RANK:\n            if (fact.measure.length && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.TREND:\n            if (fact.measure.length && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.VALUE:\n            if (fact.measure.length)\n                isValid = true\n            break;\n\n        default:\n            break;\n    }\n    return isValid\n}\n\n/***\n * 清空不必要的fact属性\n ***/\nexport const customizeFact = function (fact, schema, data) {\n    let newFact = Object.assign({}, fact)\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            newFact.focus = [];\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                const measureList = schema.filter(key => key['type'] === \"numerical\");\n                if (newFact.measure.length === 0 && measureList.length > 0) {\n                    newFact.measure = [{ \"field\": measureList[0].field, \"aggregate\": \"count\" }];\n                }\n                if (newFact.measure.length === 1) {\n                    newFact.measure.push({ \"field\": 'COUNT', \"aggregate\": \"count\" });\n                }\n            }\n            break;\n\n        case FactType.CATEGORIZATION:\n            newFact.measure = []\n            newFact.focus = []\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n            }\n            break;\n\n        case FactType.DIFFERENCE:\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema),\n                    gbValueList = getFieldValue(data, fact.groupby);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                /***** 设默认为第1、2条，并且更新到fact中 *****/\n                if (!newFact.focus.length) {\n                    newFact.focus = [{\n                        field: newFact.groupby[0],\n                        value: gbValueList[0],\n                    },\n                    {\n                        field: newFact.groupby[0],\n                        value: gbValueList[1],\n                    }\n                    ]\n                }\n            }\n            break;\n\n        case FactType.DISTRIBUTION:\n            newFact.focus = []\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n            }\n            break;\n\n        case FactType.EXTREME:\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                // aggregation\n                if (newFact.measure.length && newFact.groupby.length) {\n                    let encoding = {}\n                    encoding['y'] = {};\n                    encoding['y']['field'] = newFact.measure[0].field;\n                    encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                    encoding['x'] = {};\n                    encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let measureField = newFact.measure[0]['field'];\n                    let max = aggregatedRows.reduce((a, b) => (a[measureField] > b[measureField]) ? a : b);\n\n                    /***** 设默认为max，并且更新到fact中 *****/\n                    if (!newFact.focus.length) {\n                        newFact.focus = [{\n                            field: newFact.groupby[0],\n                            value: max[newFact.groupby[0]],\n                            extremeFocus: 'max',\n                            extremeValue: max[newFact.measure[0].field]\n                        }]\n                    }\n                }\n            }\n            break;\n\n        case FactType.OUTLIER:\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                // aggregation\n                if (newFact.measure.length && newFact.groupby.length) {\n                    let encoding = {}\n                    encoding['y'] = {};\n                    encoding['y']['field'] = newFact.measure[0].field;\n                    encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                    encoding['x'] = {};\n                    encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let newOrder = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.x.field]; })\n                    let newOrderValue = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.y.field]; })\n\n                    let n = newOrderValue.length\n                    // 整数部分\n                    let posQ3 = parseInt((n - 1) * 0.25)\n                    let posQ1 = parseInt((n - 1) * 0.75)\n                    // 小数部分\n                    let decimalQ3 = (n - 1) * 0.25 - posQ3\n                    let decimalQ1 = (n - 1) * 0.75 - posQ1\n                    let Q3 = newOrderValue[posQ3] + (newOrderValue[posQ3 + 1] - newOrderValue[posQ3]) * decimalQ3\n                    let Q1 = newOrderValue[posQ1] + (newOrderValue[posQ1 + 1] - newOrderValue[posQ1]) * decimalQ1\n\n                    let Low = Q1 - 1.5 * (Q3 - Q1)\n                    let Up = Q3 + 1.5 * (Q3 - Q1)\n                    let outlierIndex = []\n                    newOrderValue.forEach((d, i) => {\n                        if (d > Up || d < Low) {\n                            outlierIndex.push(i)\n                        }\n                    });\n\n                    /***** 设默认为outlier，并且更新到fact中 *****/\n                    if (!newFact.focus.length && outlierIndex.length) {\n                        newFact.focus = [{\n                            field: fact.groupby[0],\n                            value: newOrder[outlierIndex[0]],\n                        }]\n                    }\n                }\n            }\n            break;\n\n        case FactType.PROPORTION:\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                if (newFact.measure.length && newFact.groupby.length) {\n                    // aggregation\n                    let encoding = {}\n                    encoding['y'] = {};\n                    encoding['y']['field'] = newFact.measure[0].field;\n                    encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                    encoding['x'] = {};\n                    encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let measureField = newFact.measure[0]['field'];\n                    let max = aggregatedRows.reduce((a, b) => (a[measureField] > b[measureField]) ? a : b)\n\n                    /***** 设默认为max，并且更新到fact中 *****/\n                    if (!newFact.focus.length) {\n                        newFact.focus = [{\n                            field: newFact.groupby[0],\n                            value: max[newFact.groupby[0]],\n                        }]\n                    }\n                }\n            }\n            break;\n\n        case FactType.RANK:\n            newFact.focus = []\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(newFact.type, newFact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                // if (newFact.measure.length && newFact.groupby.length) {\n                //     // aggregation\n                //     let encoding = {}\n                //     encoding['y'] = {};\n                //     encoding['y']['field'] = newFact.measure[0].field;\n                //     encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                //     encoding['x'] = {};\n                //     encoding['x']['field'] = newFact.groupby[0];\n                //     let filteredData = datafilter(data, newFact.subspace)\n                //     let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                //     // filter gbValueList\n                //     let newOrder = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.x.field]; })\n\n                //     /***** 设默认为前3，并且更新到fact中 *****/\n\n                //     let focus = []\n                //     newOrder.forEach((d, i) => {\n                //         if (i < 3) {\n                //             focus.push({ field: fact.groupby[0], value: d })\n                //         }\n                //     });\n                //     if(!_.isEqual(focus, newFact.focus)){\n                //         newFact.focus = focus;\n                //     }\n                // }\n            }\n            break;\n\n        case FactType.TREND:\n            newFact.focus = [];\n            if (schema && data) {\n                let groupbyList = schema.filter(key => key['type'] === \"temporal\")\n                const groupbyFieldList = groupbyList.map((d) => d.field);\n                if (groupbyList.length === 0) {\n                    newFact.groupby = []\n                } else if (newFact.groupby.length === 0 || groupbyFieldList.indexOf(newFact.groupby[0]) === -1) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n            }\n            break;\n\n        case FactType.VALUE:\n            newFact.groupby = []\n            newFact.focus = []\n            if (schema && data) {\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n            }\n            break;\n\n        default:\n            break;\n    }\n    return newFact\n}\n\n// fact valid for score to update(RANK/PROPORTION/OUTLIER/DIFFERENCE)\n//NO USE FOR A MOMENT!!!!!\nexport const isFactValid = function (_fact) {\n    let fact = Object.assign({}, _fact)\n    let isFactValid = false;\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            if (fact.measure.length === 2 && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.CATEGORIZATION:\n            if (fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.DIFFERENCE:\n            if (fact.measure && fact.groupby && fact.focus.length >= 2)\n                isFactValid = true\n            break;\n\n        case FactType.DISTRIBUTION:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.EXTREME:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.OUTLIER:\n            if (fact.measure && fact.groupby && fact.focus.length)\n                isFactValid = true\n            break;\n\n        case FactType.PROPORTION:\n            if (fact.measure && fact.groupby && fact.focus.length)\n                isFactValid = true\n            break;\n\n        case FactType.RANK:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length >= 3)\n                isFactValid = true\n            break;\n\n        case FactType.TREND:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.VALUE:\n            if (fact.measure)\n                isFactValid = true\n            break;\n\n        default:\n            break;\n    }\n    return isFactValid\n}\n\nconst getCountRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let countData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(() => {\n            countData[i] += 1\n        })\n        let countRows = Object.assign({}, d.values[0])\n        countRows['COUNT'] = countData[i]\n        return countRows\n    });\n    return data;\n}\n\nconst getMinRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let data = calculateData.map(function (d) {\n        let index = d3.scan(d.values, function (a, b) {\n            if (a[encoding.y.field] && b[encoding.y.field])\n                return a[encoding.y.field] - b[encoding.y.field];\n        });\n        if (index >= 0) {\n            return d.values[index]\n        } else {\n            return d.values[0]\n        }\n    });\n    return data;\n}\n\nconst getMaxRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let data = calculateData.map(function (d, i) {\n        let index = d3.scan(d.values, function (a, b) {\n            if (a[encoding.y.field] && b[encoding.y.field])\n                return b[encoding.y.field] - a[encoding.y.field];\n        });\n        if (index >= 0) {\n            return d.values[index]\n        } else {\n            return d.values[0];\n        }\n    });\n    return data;\n}\n\nconst getSumRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let sumData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(d => {\n            sumData[i] += d[encoding.y.field]\n        })\n        let sumRows = Object.assign({}, d.values[0])\n        sumRows[encoding.y.field] = sumData[i]\n        return sumRows\n    });\n    return data;\n}\n\nconst getAverageRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let sumData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(d => {\n            sumData[i] += d[encoding.y.field]\n        })\n        let sumRows = Object.assign({}, d.values[0])\n        sumRows[encoding.y.field] = sumData[i] / d.values.length;\n        return sumRows;\n    });\n    return data;\n}\n\nconst getAggregatedRows = (rawData, encoding) => {\n    let data;\n    switch (encoding.y.aggregation) {\n        case 'sum':\n            data = getSumRows(rawData, encoding);\n            break;\n        case 'avg':\n            data = getAverageRows(rawData, encoding);\n            break;\n        case 'max':\n            data = getMaxRows(rawData, encoding);\n            break;\n        case 'min':\n            data = getMinRows(rawData, encoding);\n            break;\n        case 'count':\n            data = getCountRows(rawData, encoding)\n            break;\n\n        default:\n            data = getMaxRows(rawData, encoding);\n            break;\n    }\n    return data;\n}\n\nconst getFieldValue = (rawData, fieldName) => {\n    if (fieldName)\n        return Array.from(new Set(rawData.map(d => d[fieldName])));\n    else return []\n}","import FactType from '@/constant/FactType';\nimport ChartType from '@/constant/ChartType';\nimport FieldType from '@/constant/FieldType';\n//权重\nexport const fact2visAllRules = [\n    //association \n    {\n        \"fact\": FactType.ASSOCIATION,\n        \"chart\": ChartType.SCATTER_PLOT,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL, FieldType.GEOGRAPHICAL]\n    },\n    //outlier\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL, FieldType.GEOGRAPHICAL],\n        //\"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     \"rang\": [6, 9]\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //extreme\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL, FieldType.GEOGRAPHICAL],\n        //\"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //proportion\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PROGRESS_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL, FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.RING_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PIE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL, FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     \"rang\": [0, 9]\n    // },\n\n    //rank\n    {\n        \"fact\": FactType.RANK,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL, FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.LINE_CHART,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    //distribution\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     \"rang\": [6, 10000]\n    // },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n        //\"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.PIE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    //difference\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     // \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.PIE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL, FieldType.TEMPORAL],\n    },\n    // //categorization\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 10000]\n    // },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n       // \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 9]\n    // },\n    //trend\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.AREA_CHART,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     //\"rang\": [0, 9],\n    //     \"breakdownType\": [FieldType.TEMPORAL, FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    //     \"rang\": [0, 9],\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"rang\": [6, 9],\n    //     \"breakdownType\": [FieldType.TEMPORAL, FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.SCATTER_PLOT,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    //value\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [],\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    //     \"breakdownType\": [],\n    // },\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        // \"rang\": [0, 9],\n        //\"breakdownType\": [FieldType.TEMPORAL, FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [],\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [],\n    // }\n]","import FactType from '@/constant/FactType';\nimport ChartType from '@/constant/ChartType';\nimport FieldType from '@/constant/FieldType';\n//权重\nexport const fact2visRules = [\n    //association \n    {\n        \"fact\": FactType.ASSOCIATION,\n        \"chart\": ChartType.SCATTER_PLOT,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL, FieldType.GEOGRAPHICAL]\n    },\n    //outlier\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.CATEGORICAL],\n    //     // \"rang\": [0, 9]\n    // },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    //     // \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    //     // \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    // \"rang\": [6, 9]\n    // },\n    //extreme\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n        // \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //proportion\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PROGRESS_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.RING_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PIE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //\"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.TEXT_CHART,\n    // },\n\n    //rank\n    {\n        \"fact\": FactType.RANK,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.LINE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    //distribution\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 10000]\n    // },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n       // \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.PIE_CHART,\n    // },\n    // //difference\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.PIE_CHART,\n    // },\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL,FieldType.TEMPORAL],\n    },\n    //categorization\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 10000]\n    // },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n        //\"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 9]\n    // },\n    //trend\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.AREA_CHART,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //\"rang\": [6, 9]\n    // },\n\n    //value\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [],\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    // },\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n    },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    // }\n]","import {\n    fact2visRules\n} from './fact2visRule';\nimport {\n    fact2visAllRules\n} from './fact2visAllRule';\nimport FieldType from '@/constant/FieldType';\n\n/****\n * 过滤规则： 根据fact.type 和 breakDown.type 筛选支持的图表\n * 其中isEdit===false表示生成阶段，生成阶段优先在推荐规则中过滤，如果找不到，会在全部支持的规则中过滤\n *     isEdit===ture表示编辑阶段，在全部支持的规则中过滤\n */\n\nconst getSupportedChartTypes = (fact, schema, isEdit = false) => {  \n    \n    let breakDown = schema.filter(s => s[\"field\"] === fact.groupby[0])[0];\n    let supportedChartTypes;\n    let rules = isEdit ? fact2visAllRules : fact2visRules;//fact2visRules是推荐规则 \n    supportedChartTypes = rules.filter(x => x.fact === fact.type);\n    if (breakDown) {\n        supportedChartTypes = supportedChartTypes.filter(x => x.breakdownType.indexOf(breakDown.type) !== -1);\n        if (breakDown.type === FieldType.CATEGORICAL && breakDown.values) {\n            supportedChartTypes = supportedChartTypes.filter(x => {\n                if (!x.rang) {\n                    return true\n                } else {\n                    return breakDown.values.length >= x.rang[0] && breakDown.values.length <= x.rang[1]\n                }\n            });\n        }\n        /*******important**** 找不到推荐的图表，就用可以支持的图表显示*****/\n        if (supportedChartTypes.length === 0 && !isEdit) {\n            supportedChartTypes = getSupportedChartTypes(fact, schema, true)\n        }\n        /*******important the end *********/\n    }\n    //console.log(\"supportedChartTypes\", supportedChartTypes)\n    return supportedChartTypes;\n};\nexport default getSupportedChartTypes;","import React, { Component } from 'react';\nimport { AutoVis } from \"calliope-chart\";\n\nexport default class Chart extends Component {\n\n    componentDidMount() {\n        const { id } = this.props.spec.chart;\n        let spec = this.props.spec;\n        let container = id ? `#vischart_${id}` : \"#demo-chart\";\n        this.autovis = new AutoVis();\n        this.autovis = new AutoVis();\n        this.autovis.container(container);\n        this.autovis.load(spec);\n        this.autovis.generate();\n    }\n\n    componentDidUpdate(preProps) {\n        const { id } = this.props.spec.chart;\n        let spec = this.props.spec;\n        let container = id ? `#vischart_${id}` : \"#demo-chart\";\n        this.autovis = new AutoVis();\n        this.autovis = new AutoVis();\n        this.autovis.container(container);\n        this.autovis.load(spec);\n        this.autovis.generate();\n    }\n\n    render() {\n        let height = 640, width = 640;\n        if (this.props.spec.chart) {\n            let { size, type } = this.props.spec.chart;\n            if (type === 'vegalite') {\n                let vega_w = this.props.spec.chart.width,\n                    vega_h = this.props.spec.chart.height;\n                height = vega_h * 0.5\n                width = vega_w * 0.5\n            } else {\n                switch (size) {\n                    case 'wide':\n                        height = 220;\n                        width = 560;\n                        break;\n                    case 'middle':\n                        height = 200;\n                        width = 360;\n                        break;\n                    case 'small':\n                        height = 150;\n                        width = 235;\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n\n        }\n        //console.log(\"render\", width, height);\n        const { id } = this.props.spec.chart ? this.props.spec.chart : { id: \"demo-chart\" };\n        return (\n            // <div id='frame'\n            //     style={{\n            //         // marginLeft: 60,\n            //         // marginTop: 60,\n            //         height: height,\n            //         width: width,\n            //         borderStyle: 'solid',\n            //         borderWidth: 1,\n            //         borderColor: 'red'\n            //     }}\n            // >\n            //     <div id={id ? `vischart_${id}` : 'demo-chart'} style={{ height: height, width: width }} />\n            // </div>\n            <div id={id ? `vischart_${id}` : 'demo-chart'} style={{ height: \"640\", width: \"640\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }} />\n        )\n    }\n}\n","import React from 'react';\nimport ChartType from '@/constant/ChartType';\nimport getSupportedChartTypes from './getSupportedChartTypes';\nimport Chart from './Chart';\nimport { isValid, customizeFact } from './helper';\nimport _ from 'lodash';\n\nexport const facts2charts = (facts, shema, chartDiversity = 0) => {\n    for (let i = 0; i < facts.length; i++) {\n        let supportedChartTypes = getSupportedChartTypes(shema, facts[i]);\n        let choiceCount = parseInt((supportedChartTypes.length + 1) * chartDiversity);\n        let choicedChartTypes = supportedChartTypes.slice(0, choiceCount + 1);\n        facts[i].chart = choicedChartTypes[Math.floor(Math.random() * choicedChartTypes.length)].chart;\n    }\n    return facts\n}\nexport const getChoice = (length) => {\n    let choice = Math.round(Math.random() * (length - 1));\n    return choice;\n}\n\n\nexport const getFactChartType = (shema, fact, choice = 0) => {\n    let supportedChartTypes = getSupportedChartTypes(fact, shema);\n    if (supportedChartTypes.length === 0) return null;\n    return supportedChartTypes[getChoice(supportedChartTypes.length)].chart;\n}\n\nconst getvischartype = (chart) => {\n    let chartType = chart;\n    switch (chart) {\n        case ChartType.AREA_CHART:\n            chartType = \"areachart\";\n            break;\n        case ChartType.BUBBLE_CHART:\n            chartType = \"bubblechart\";\n            break;\n        case ChartType.COLOR_FILLING_MAP:\n            chartType = \"filledmap\";\n            break;\n        case ChartType.BUBBLE_MAP:\n            chartType = \"bubblemap\";\n            break;\n        case ChartType.HALF_RING_CHART:\n            chartType = \"donutchart\";\n            break;\n        case ChartType.HORIZONTAL_BAR_CHART:\n            chartType = \"horizentalbarchart\";\n            break;\n\n        case ChartType.VERTICAL_BAR_CHART:\n        case ChartType.STACKED_BAR_CHART:\n        case ChartType.VERTICAL_DIFFERENCE_BAR_CHART:\n        case ChartType.ISOTYPE_BAR_CHART:\n        case ChartType.VERTICAL_DIFFERENCE_ARROW_CHART:\n            chartType = \"verticalbarchart\"\n            break;\n        case ChartType.LINE_CHART:\n        case ChartType.STACKED_LINE_CHART:\n            chartType = \"linechart\";\n            break;\n        case ChartType.PROPORTION_ISOTYPE_CHART:\n        case ChartType.PIE_CHART:\n            chartType = \"piechart\";\n            break;\n        case ChartType.PROGRESS_BAR_CHART:\n            chartType = \"progresschart\";\n            break;\n        case ChartType.RING_CHART:\n            chartType = \"donutchart\";\n            break;\n        case ChartType.SCATTER_PLOT:\n            chartType = \"scatterplot\";\n            break;\n        case ChartType.TEXT_CHART:\n            chartType = \"textchart\";\n            break;\n        case ChartType.TREE_MAP:\n            chartType = \"treemap\";\n            break;\n        default:\n            break;\n    }\n    return chartType;\n}\n\nexport const fact2chart = function (specData, containerId, fact, data, size, vegalite) {\n    if (!fact.chart || fact.chart === \"\") {\n        fact.chart = getFactChartType(specData.schema, fact);//针对生成页面的chart\n    }\n\n    let chart = fact.chart;\n\n    if (chart === ChartType.ISOTYPE_BAR_CHART) {\n        fact.chart = ChartType.VERTICAL_BAR_CHART;\n    }\n    fact = customizeFact(fact);//important\n\n    if (!fact.chart || !isValid(fact)) {\n        console.log(\"no valid\", fact)\n        return null;\n    }\n\n    let specChart = {\n        id: containerId,\n        size: size,\n        type: getvischartype(chart),\n        style: \"business\",\n        duration: 0,\n        showSuggestion: false,//显示图表Unsupported,\n        ...vegalite //add vegalite spec\n    }\n\n    specData = {\n        ...specData,\n        values: data,\n    }\n    let specNew = {\n        data: specData,\n        fact: fact,\n        chart: specChart,\n    }\n    //console.log(\"specNew\", fact.chart, specNew);\n\n    return <Chart spec={_.cloneDeep(specNew)} />\n}\n","import ActionType from './type';\n\nexport const updateQuestion = (question) => ({\n    type: ActionType.UPDATE_QUESTION,\n    question\n})\n\nexport const saveCachedDecomposedQA = (QA) => ({\n    type: ActionType.SAVE_CACHED_QA,\n    cachedQA:QA\n})","import ActionType from './type';\n\n\n\nexport const uploadData = (fileName, schema, data) => ({\n    type: ActionType.UPLOAD_DATA,\n    fileName,\n    schema,\n    data\n})\nexport const connectData = (fileName, schema, data) => ({\n    type: ActionType.CONNECT_DATA,\n    fileName,\n    schema,\n    data\n})\nexport const changeData = (fileName) => ({\n    type: ActionType.CHANGE_DATA,\n    fileName,\n})\n\nexport const visualizeData = (visData) => ({\n    type: ActionType.VISUALIZE_DATA,\n    visData\n})\n","import ActionType from './type';\n\nexport const selectFact = (index) => ({\n    type: ActionType.SELECT_FACT,\n    index\n})\n\nexport const changeMethod = (method) => ({\n    type: ActionType.CHANGE_METHOD,\n    method,\n})\n\nexport const setStoryParameter = (maxStoryLength, information, chartDiversity, timeLimit) => ({\n    type: ActionType.SET_STORY_PARAMETER,\n    maxStoryLength,\n    information,\n    chartDiversity,\n    timeLimit,\n})\n\nexport const setRewardWeight = (logicality, diversity, integrity) => ({\n    type: ActionType.SET_REWARD_WEIGHT,\n    logicality,\n    diversity,\n    integrity,\n})\n\nexport const setAggregationLevel = (level) => ({\n    type: ActionType.SET_AGGREGATION_LEVEL,\n    level,\n})\n\nexport const generateStory = (facts, relations, coverage) => ({\n    type: ActionType.GENERATE_STORY,\n    facts,\n    relations,\n    coverage,\n})\nexport const updateProgress = (totalLength, currentLength) => (\n    {\n        type: ActionType.UPDATE_PROGRESS,\n        totalLength,\n        currentLength\n    }\n)\nexport const exportPdf = (isExportPdf) => (\n    {\n        type: ActionType.EXPORT_PDF,\n        isExportPdf\n    }\n)\nexport const changeTitle = (title) => ({\n    type: ActionType.CHANGE_TITLE,\n    title,\n})\nexport const updateCommentStoryInfo = (facts, relations, data, schema, title, fileName, storyParameter, aggregationLevel, resultCoverage) => ({\n    type: ActionType.UPDATE_COMMENT_STORY_INFO,\n    facts,\n    relations,\n    data,\n    schema,\n    title,\n    storyParameter,\n    aggregationLevel,\n    resultCoverage,\n    fileName\n})\nexport const updateUUID = (uuid) => ({\n    type: ActionType.UPDATE_UUID,\n    uuid,\n})\n","export const question = state => state.question.question;\nexport const cachedQA = state => state.question.cachedQA;\nexport const isUpdateLayout = state => state.question.isUpdateLayout;\nexport const editedTitle = state => state.question.editedTitle;","const templates = [\n    {\n        'id': 0,\n        'template': 'The Pearson correlation between the {{measure1}} and the {{measure2}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the Pearson correlation coefficient between the {{measure1}} and the {{measure2}} is {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, the {{measure1}} is correlated with the {{measure2}} and the Person correlation is {{parameter}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, there are {{parameter}} {{groupby}}s: {{no.1}}, {{no.2}}, {{no.3}}, and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the data are grouped into {{parameter}} {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}, among which {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The data contain {{parameter}} {{groupby}}s when {{subspace}}, which are {{no.1}}, {{no.2}}, {{no.3}}. {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The difference between {{focus1}} and {{focus2}} regarding to their {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{focus1}} and {{focus2}}\\'s difference on the {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'A comparison between {{focus1}} and {{focus2}} on their {{agg}} {{measure}} shows the difference is {{parameter}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'Given {{subspace}}, the {{focus}} value of the {{agg}} {{measure}} is {{parameter[1]}} when the {{groupby}} is {{parameter[0]}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{focus}} {{agg}} {{measure}} value over {{groupby}}s is {{parameter[1]}} when the {{groupby}} is {{parameter[0]}} given {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'Among all {{groupby}}s, {{parameter[0]}} has the {{focus}} {{agg}} {{measure}} value, which is {{parameter[1]}}, when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{agg}} {{measure}} of {{focus}} is an outlier when compared with that of other {{groupby}}s when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{focus}}\\'s {{agg}} {{measure}} is anomalously different from other {{groupby}}s\\' {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'Among various {{groupby}}s, the {{agg}} {{measure}} of {{focus}} is an anomaly when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{focus}} accounts for {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{focus}} makes up {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{focus}}\\'s {{agg}} {{measure}} takes {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'In the {{agg}} {{measure}} ranking of different {{groupby}}s,  the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}}, when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The ranking list of the {{groupby}}s ordered by their {{agg}} {{measure}} when {{subspace}}, in which the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When sorting the {{groupby}}s in order based on their {{agg}} {{measure}}, the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The trend of the {{agg}} {{measure}} over {{groupby}}s is {{parameter}} when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{agg}} {{measure}} over {{groupby}}s shows a/an {{parameter}} trend when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{agg}} {{measure}} over {{groupby}}s is {{parameter}} when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the value of the {{agg}} {{measure}} is {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{agg}} {{measure}} value is {{parameter}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","import FactType from '../../constant/FactType';\nimport association from './association';\nimport categorization from './categorization';\nimport difference from './difference';\nimport distribution from './distribution';\nimport extreme from './extreme';\nimport outlier from './outlier';\nimport proportion from './proportion';\nimport rank from './rank';\nimport trend from './trend';\nimport value from './value';\n\nconst templateCount = 3;\n\nconst pickFactTemplate = function(type, id=-1) {\n    // pick randomly when id == -1\n    let templates = []\n    switch (type) {\n        case FactType.ASSOCIATION:\n            templates = association;\n            break;\n\n        case FactType.CATEGORIZATION:\n            templates = categorization;\n            break;\n\n        case FactType.DIFFERENCE:\n            templates = difference;\n            break;\n\n        case FactType.DISTRIBUTION:\n            templates = distribution;\n            break;\n\n        case FactType.EXTREME:\n            templates = extreme;\n            break;\n\n        case FactType.OUTLIER:\n            templates = outlier;\n            break;\n\n        case FactType.PROPORTION:\n            templates = proportion;\n            break;\n\n        case FactType.RANK:\n            templates = rank;\n            break;\n\n        case FactType.TREND:\n            templates = trend;\n            break;\n\n        case FactType.VALUE:\n            templates = value;\n            break;\n    \n        default:\n            break;\n    }\n    if (id === -1) {\n        id = Math.floor(Math.random() * 10)%templateCount\n    }\n    let sentence = '';\n    try {\n        sentence = templates[id].template;\n    }\n    catch(error) {\n        console.error(error);\n        console.log('wrong id:'+id)\n    }\n    return sentence;\n}\n\nexport default pickFactTemplate;","export default {\n    SUM: 'sum',\n    MAX: 'max',\n    MIN: 'min',\n    AVG: 'avg',\n    COUNT: 'count',\n    // NONE: 'none'\n}","import pickFactTemplate from './fact-templates';\nimport pickRelationTemplate from './relation-templates';\nimport FactType from '@/constant/FactType'\nimport { isValid } from '@/tool/fact2vis/helper'\nimport AggregationType from '@/constant/AggregationType'\nimport _ from 'lodash'\n\nconst plur = require('plur');\nconst convertAggregation = function (aggType) {\n    switch (aggType) {\n        case AggregationType.SUM:\n            return 'total'\n\n        case AggregationType.MAX:\n            return 'maximum'\n\n        case AggregationType.MIN:\n            return 'minimum'\n\n        case AggregationType.AVG:\n            return 'average'\n\n        case AggregationType.COUNT:\n            return 'count'\n\n        case AggregationType.NONE:\n            return ''\n\n        default:\n            return ''\n    }\n}\n\nconst convertMeasure = function (measure) {\n    if (measure.aggregate === \"count\") return \"\"\n    else return measure.field.toLowerCase();\n}\n\nconst convertGroupby = function (groupby, param = 'single') {\n    let gb = groupby[0]\n\n    if (param === 'single')\n        return gb.toLowerCase()\n    else if (param === 'plural') {\n        if (gb.indexOf(' of ') !== -1) {\n            let gbWords = gb.split(\" \")\n            let gbWordIndex = gbWords.indexOf(\"of\") - 1\n            if (gbWordIndex > -1) {\n                let plurWord = plur(gbWords[gbWordIndex], 2)\n                return gb.replace(gbWords[gbWordIndex], plurWord)\n            }\n        } else\n            return plur(gb, 2).toLowerCase()\n    }\n}\n\n// for value/difference/categorization\nexport const formatNum = function (num) {\n    num = (num || 0).toString();\n    let number = 0,\n        floatNum = '',\n        intNum = '';\n    if (num.indexOf('.') > 0) {\n        num = num.toFixed(2)\n        number = num.indexOf('.');\n        floatNum = num.substr(number);\n        intNum = num.substring(0, number);\n    } else {\n        intNum = num;\n    }\n    let result = [],\n        counter = 0;\n    intNum = intNum.split('');\n\n    for (let i = intNum.length - 1; i >= 0; i--) {\n        counter++;\n        result.unshift(intNum[i]);\n        if (!(counter % 3) && i !== 0) { result.unshift(','); }\n    }\n    return result.join('') + floatNum || '';\n}\n\nconst genFactSubspace = function (fact, template) {\n    let subspace = '';\n    if (fact.subspace.length) {\n        fact.subspace.map((key, i) => { return subspace += `${i === 0 ? ' ' : ' and '}the ${key.field} is ${key.value}` })\n        template = template.replace(\"{{subspace}}\", subspace);\n    } else {\n        template = template.replace(\", when {{subspace}}\", '');\n        template = template.replace(\" when {{subspace}}\", '');\n        template = template.replace(\" in case of {{subspace}}\", '');\n        template = template.replace(\" given {{subspace}}\", '');\n        template = template.replace(\"When {{subspace}}, \", '');\n        template = template.replace(\"Given {{subspace}}, \", '');\n        template = template.replace(\"In case of {{subspace}}, \", '');\n    }\n    return template\n}\n\nexport const genFactSentence = function (_fact) {\n    if (!isValid(_fact))\n        return ''\n    let fact = _.cloneDeep(_fact)\n    let template = pickFactTemplate(fact.type);\n    let aggregate = AggregationType.NONE;\n    if (fact.measure.length > 0) {\n        aggregate = fact.measure[0].aggregate;\n    }\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            template = template.replace(\"{{measure1}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure2}}\", convertMeasure(fact.measure[1]));\n            template = template.replace(\"{{agg1}}\", convertAggregation(fact.measure[0].aggregate));\n            template = template.replace(\"{{agg2}}\", convertAggregation(fact.measure[1].aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter !== '') {\n                template = template.replace(\"{{parameter}}\", formatNum(Number.parseFloat(fact.parameter).toFixed(3)));\n            }\n            break;\n\n        case FactType.CATEGORIZATION:\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter.length) {\n                template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                let parameterList = ''\n                fact.parameter.forEach((d, i) => {\n                    parameterList += `${i === 0 ? '' : ','} ${d}`\n                });\n                template = template.replace(\"{{no.1}}, {{no.2}}, {{no.3}}\", parameterList);\n                // template = template.replace(\"{{no.1}}\", fact.parameter[0]);\n                // template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                // if (fact.parameter.length === 3) {\n                //     template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                // } else if (fact.parameter.length > 3) {\n                //     template = template.replace(\"{{no.3}}\", fact.parameter[2] + ', etc');\n                // } else if (fact.parameter.length === 2) {\n                //     template = template.replace(\", {{no.3}}\", '');\n                // }\n            }\n            if (fact.focus.length) {\n                if (template.indexOf(\". {{focus}}\") > -1) {\n                    let focusValue = fact.focus[0].value.slice(0, 1).toUpperCase() + fact.focus[0].value.slice(1)\n                    template = template.replace(\"{{focus}}\", focusValue);\n                } else {\n                    template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                }\n            } else {\n                template = template.replace(\", and {{focus}} needs to pay attention\", \"\");\n                template = template.replace(\", among which {{focus}} needs to pay attention\", \"\");\n                template = template.replace(\". {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.DIFFERENCE:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            if (fact.focus.length >= 2) {\n                template = template.replace(\"{{focus1}}\", fact.focus[0].value);\n                template = template.replace(\"{{focus2}}\", fact.focus[1].value);\n            }\n            template = genFactSubspace(fact, template)\n            if (fact.parameter !== '') template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n            break;\n\n        case FactType.DISTRIBUTION:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) {\n                template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            } else {\n                template = template.replace(\" and {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.EXTREME:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) {\n                if (fact.focus[0].extremeFocus !== undefined && fact.focus[0].extremeValue !== undefined) {\n                    if (fact.focus[0].extremeFocus === 'min') { template = template.replace(\"{{focus}}\", 'minimum'); }\n                    else { template = template.replace(\"{{focus}}\", 'maximum'); }\n                    template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                    template = template.replace(\"{{parameter[1]}}\", formatNum(Math.round(fact.parameter[1] * 100) / 100));\n\n                } else if (fact.parameter.length) {\n                    if (fact.parameter[0] === 'min') { template = template.replace(\"{{focus}}\", 'minimum'); }\n                    else { template = template.replace(\"{{focus}}\", 'maximum'); }\n                    template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                    template = template.replace(\"{{parameter[1]}}\", formatNum(fact.parameter[1]));\n                }\n            }\n            break;\n\n        case FactType.OUTLIER:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            break;\n\n        case FactType.PROPORTION:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            if (fact.parameter) template = template.replace(\"{{parameter}}\", fact.parameter);\n            break;\n\n        case FactType.RANK:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter.length >= 3) {\n                template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                template = template.replace(\"{{no.1}}\", fact.parameter[0]);\n                template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                if (fact.parameter.length === 3) {\n                    template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                } else if (fact.parameter.length > 3) {\n                    template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                } else if (fact.parameter.length === 2) {\n                    template = template.replace(\", {{no.3}}\", '');\n                }\n            } else {\n                template = ''\n            }\n            break;\n\n        case FactType.TREND:\n        \n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter) {\n                template = template.replace(\"{{parameter}}\", fact.parameter);\n                if (fact.parameter === 'increasing') {\n                    template = template.replace(\"a/an\", 'an');\n                } else {\n                    template = template.replace(\"a/an\", 'a');\n                }\n            }\n            if (fact.focus.length) {\n                template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            } else {\n                template = template.replace(\" and the value of {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.VALUE:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            if (fact.parameter !== '') template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n            break;\n\n        default:\n            break;\n    }\n    template = template.slice(0, 1).toUpperCase() + template.slice(1)\n    return template;\n}\n\n\nexport const genStoryText = function (facts, relations) {\n    let template;\n    let storyText = '';\n    let pairLength = parseInt(facts.length / 2)\n    //console.log(\"relations\", facts, relations)\n    for (let i = 0; i < pairLength; i++) {\n        if (facts[i]) {\n            template = pickRelationTemplate(relations[i * 2 + 1])\n            // template = template.replace(\"{{Sentence A}}\", facts[i * 2].script());\n            // template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].script());\n            template = template.replace(\"{{Sentence A}}\", facts[i * 2].generatedScript);\n            template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].generatedScript);\n            storyText += template + ' '\n        }\n    }\n    if (facts.length % 2) {\n        //storyText += facts[facts.length - 1].script()\n        storyText += facts[facts.length - 1].generatedScript\n    }\n    //console.log(\"storyText\", storyText)\n    return storyText\n}\n\nexport const genSubtitle = function (fact) {\n    let title;\n    if (!isValid(fact))\n        return ''\n\n    title = 'The ' + fact.type\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            title += ' of ' + fact.measure[0].field + ' and ' + fact.measure[1].field\n            break;\n        case FactType.CATEGORIZATION:\n            // title += ' of ' + fact.groupby[0]\n            title = fact.groupby[0]\n            break;\n\n        case FactType.DIFFERENCE:\n            title += ' between ' + fact.focus[0].value + ' and ' + fact.focus[1].value\n            break;\n        case FactType.DISTRIBUTION:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.EXTREME:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.OUTLIER:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.PROPORTION:\n            title += ' of ' + fact.focus[0].value\n            break;\n        case FactType.RANK:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.TREND:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.VALUE:\n            title = 'The ' + convertAggregation(fact.measure[0].aggregate) + ' ' + fact.measure[0].field\n            break;\n        default:\n            break;\n    }\n    if (fact.subspace.length) {\n        let subspace = '';\n        fact.subspace.map((key, i) => { return subspace += ` in ${key.value}` })\n        title += subspace;\n    }\n\n    return title;\n}\n\nexport const genTitle = function (fileName) {\n    let title;\n    switch (fileName) {\n        case 'CarSales.csv':\n            title = 'Car Sales'\n            break;\n\n        case 'nCoV2020.csv':\n            title = 'COVID-19'\n            break;\n\n        case 'deadstartup.csv':\n            title = 'Startup Failures'\n            break;\n\n        default:\n            if (fileName.indexOf('.') > 0) {\n                let number = fileName.indexOf('.');\n                // let csv = fileName.substr(number);\n                title = fileName.substring(0, number);\n            } else {\n                title = fileName\n            }\n            break;\n    }\n    return title\n}","import FactType from '@/constant/FactType'\nimport { isValid } from './fact2vis/helper'\nimport { formatNum } from '../sentencer/index'\n\nexport const genTitle = function (fileName) {\n    let title;\n    switch (fileName) {\n        case 'CarSales.csv':\n            title = 'Car Sales'\n            break;\n\n        case 'nCoV2020.csv':\n            title = 'COVID-19'\n            break;\n\n        case 'deadstartup.csv':\n            title = 'Startup Failures'\n            break;\n\n        default:\n            if (fileName.indexOf('.') > 0) {\n                let number = fileName.indexOf('.');\n                // let csv = fileName.substr(number);\n                title = fileName.substring(0, number);\n            } else {\n                title = fileName\n            }\n            break;\n    }\n    return title\n}\nconst isEndWithS = (letter) => {\n    if (letter === 's') return true\n    return false\n}\n\nconst hightlightItem = function (script, parameter) {\n    if (script.indexOf(parameter) === -1) return script\n    let srtEndIndex = script.indexOf(parameter) + parameter.length;\n\n    if (isEndWithS(script.substring(srtEndIndex, srtEndIndex + 1))) {\n        srtEndIndex = srtEndIndex + 1 //include s \n    }\n    let srtStartIndex = script.indexOf(parameter);\n    let newScript = script.substring(0, srtEndIndex) + \"</i></span>\" + script.substring(srtEndIndex);\n    newScript = newScript.substring(0, srtStartIndex) + '<span class=\"hightlight\"><i>'+ newScript.substring(srtStartIndex);\n    return newScript\n}\n\nexport const hightlight = function (fact) {\n    if (!isValid(fact))\n        return ''\n    // console.log(\"fact.parameter\", fact);\n    // if (!fact.parameter)\n    //     return fact.generatedScript\n\n    let script = fact.generatedScript\n    // script = hightlightItem(fact.generatedScript, fact.type)\n    // if (fact.breakdown && fact.breakdown[0]) {\n    //     script = hightlightItem(script, fact.breakdown[0].field)\n    // }\n    // if (fact.measure && fact.measure[0]) {\n    //     script = hightlightItem(script, fact.measure[0].field)\n    // }\n\n    // if (fact.subspace && fact.subspace[0]) {\n    //     script = hightlightItem(script, fact.subspace[0].field)\n    // }\n\n    let parameter\n    let newScript\n\n    switch (fact.type) {\n        // TODO: NO template parameter\n        case FactType.ASSOCIATION:\n            newScript = script\n            break;\n\n        case FactType.RANK:\n            let parameter1 = fact.parameter[0];\n            let parameter2 = fact.parameter[1];\n            let parameter3 = fact.parameter[2];\n            newScript = hightlightItem(script, parameter1)\n            if (parameter2) newScript = hightlightItem(newScript, parameter2)\n            if (parameter2 && parameter3) newScript = hightlightItem(newScript, parameter3)\n            break;\n\n        case FactType.VALUE:\n            newScript = hightlightItem(script, fact.measure[0].field.toLowerCase())\n            newScript = hightlightItem(newScript, formatNum(fact.parameter))\n            break;\n\n        case FactType.DIFFERENCE:\n            newScript = hightlightItem(script, fact.measure[0].field.toLowerCase())\n            newScript = hightlightItem(newScript, formatNum(fact.parameter))\n            break;\n        // case FactType.DIFFERENCE:\n        //     parameter = formatNum(fact.parameter);\n        //     newScript = hightlightItem(script, parameter)\n        //  \n        case FactType.RANK:\n            newScript = hightlightItem(script, 'decreasing')\n            break;\n\n        // TODO: NO template parameter\n        case FactType.OUTLIER:\n            newScript = script\n            break;\n        case FactType.EXTREME:\n        case FactType.OUTLIER:\n            newScript = hightlightItem(script, 'maximum')\n            if (fact.parameter[1]) newScript = hightlightItem(newScript, formatNum(fact.parameter[1]))\n            break;\n\n        case FactType.DISTRIBUTION:\n            newScript = script\n            break;\n\n        case FactType.CATEGORIZATION:\n            parameter = fact.parameter.length.toString();\n            newScript = hightlightItem(script, parameter)\n            break;\n\n        default:\n            parameter = fact.parameter;\n            newScript = hightlightItem(script, parameter)\n            break;\n    }\n    return newScript\n}\n\nexport const genSubtitle = function (fact) {\n    let title;\n    if (!isValid(fact))\n        return ''\n\n    title = 'The ' + fact.type\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            title += ' of ' + fact.measure[0].field + ' and ' + fact.measure[1].field\n            break;\n        case FactType.CATEGORIZATION:\n            title += ' of ' + fact.groupby[0]\n            break;\n\n        case FactType.DIFFERENCE:\n            title += ' between ' + fact.focus[0].value + ' and ' + fact.focus[1].value\n            break;\n        case FactType.DISTRIBUTION:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.EXTREME:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.OUTLIER:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.PROPORTION:\n            title += ' of ' + fact.focus[0].value\n            break;\n        case FactType.RANK:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.TREND:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.VALUE:\n            title += ' of ' + fact.focus[0].value\n            break;\n        default:\n            break;\n    }\n    if (fact.subspace.length) {\n        let subspace = '';\n        fact.subspace.map((key, i) => { return subspace += ` in ${key.value}` })\n        title += subspace;\n    }\n\n    return title;\n}","import React, { Component } from 'react'\nimport { fact2chart } from '@/tool/fact2vis/fact2vis'\nimport { genFactSentence } from '@/sentencer/index'\nimport { hightlight } from '@/tool/helper'\nimport * as d3 from 'd3'\nimport _ from 'lodash';\nimport './AnsweredFacts.less'\n\n\nlet testLayout = [1, 2, 3, 4, 5]\nconst defaultNum = testLayout[4]\n\nconst visSmall = {\n    // width: '235',\n    width: '200',\n    height: '150'\n}\n\nlet visNodes = new Map()\nlet captionNodes = new Map()\nconst maxNum = 5;\nlet renderLayout = null\nlet debounceTimer = null\nexport default class AnsweredFacts extends Component {\n\n    layoutNode = React.createRef()\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            renderNum: defaultNum,\n            count: maxNum,\n            clientWidth: 0,\n            clientHeight: 0,\n            facts: this.props.facts\n        }\n        this.visBox = React.createRef()\n        this.TreemapSize = new Array(this.props.columnNum).fill({\n            preWidth: 0,\n            preHeight: 0\n        })\n    }\n    componentDidMount() {\n        this.updateTreeMapLayout()\n        this.onResize()\n    }\n\n    componentDidUpdate() {\n        this.updateTreeMapLayout()\n    }\n\n    onResize = () => {\n        window.addEventListener('resize', () => {\n            if (debounceTimer) clearTimeout(debounceTimer)\n            setTimeout(() => {\n                this.updateTreeMapLayout()\n            }, 300)\n        })\n    }\n\n    updateTreeMapLayout = () => {\n        //updateTreeMapLayout    \n        if (this.layoutNode.current) {\n            const { clientWidth, clientHeight } = this.layoutNode.current\n            const { QAID } = this.props\n            let { preWidth, preHeight } = this.TreemapSize[QAID]\n\n            if ((clientWidth !== 0 && preWidth !== clientWidth) || (preHeight !== clientHeight && clientHeight !== 0)) {\n                this.forceUpdate()\n                this.updateTreemapSize(QAID, clientWidth, clientHeight) //update cache\n            }\n        }\n        this.batchUpdateVis()\n        this.svgTransformer()\n    }\n\n    updateTreemapSize = (id, newWidth, newHeight) => {\n        this.TreemapSize[id].preWidth = newWidth\n        this.TreemapSize[id].preHeight = newHeight\n    }\n    batchUpdateVis = () => {\n        let { facts } = this.props\n        facts.map((fact, index) => {\n            if (!visNodes.get(fact.id) || !captionNodes.get(fact.id)) return fact\n\n            let visNode = visNodes.get(fact.id).current\n            let captionNode = captionNodes.get(fact.id).current\n            let visWidth = 0, visHeight = 0\n            let captionH = 0;\n\n            if (captionNode) {\n                captionH = captionNode.clientHeight\n            }\n            if (renderLayout && renderLayout[index]) {\n                let { x0, x1, y0, y1 } = renderLayout[index]\n                visWidth = x1 - x0\n                visHeight = y1 - y0 - captionH\n            }\n            if (visWidth === 0 || visHeight === 0) return fact\n\n            if (visNode) {\n                this.svgTransformer(visNode, visWidth, visHeight)\n            }\n            this.updateAVis(fact, visWidth, visHeight, captionH)\n            return fact\n        })\n    }\n\n    svgTransformer = (visNode, visWidth, visHeight) => {\n        if (visNode) {\n            // let scaleX = visWidth / 640,\n            //     scaleY = visHeight / 640;\n            let scale = Math.min(visWidth, visHeight) / 640\n            let marginRotio = 0.9\n            // console.log(_node, scaleX, scaleY);\n            let visChart = visNode.children && visNode.children[0]\n            //visChart && visChart.setAttribute(\"style\", `transform:scale(${scaleX * marginRotio},${scaleY * marginRotio})`)\n            if (visChart) {\n                visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio})`)\n                visChart.onmouseenter = () => {\n                    const { isEdit } = this.props\n                    visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio});border:${isEdit ? '1px dashed grey' : ''}`)\n                }\n                visChart.onmouseleave = () => {\n                    visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio})`)\n                }\n            }\n        }\n    }\n\n    _isValidate = (visWidth, visHeight) => {\n        if ((visWidth && visWidth < visSmall.width) || (visHeight && visHeight < visSmall.height)) {\n            return false\n        }\n        return true\n    }\n    _renderedFacts = (facts) => {\n        const { renderNum, count } = this.state\n        return facts.slice(0, renderNum >= count ? count : renderNum)\n    }\n\n    updateAVis = (cachedFact, visWidth, visHeight, visCaptionH) => {\n        let { width, height, captionH } = cachedFact //get by cache\n        //console.log(\"updateAVis\", cachedFact.id, width, visWidth, height, visHeight);\n\n        if (width !== visWidth || height !== visHeight || captionH !== visCaptionH) {\n            const { facts } = this.props\n            let theFact = facts[facts.findIndex(d => d.id === cachedFact.id)]\n            theFact.width = visWidth\n            theFact.height = visHeight\n            theFact.captionH = visCaptionH\n            //console.log(cachedFact.id, visWidth, visHeight, visCaptionH);\n\n            this.setState({\n                facts\n            })\n        }\n    }\n\n    weightAdapter = (data, columnNum) => {\n        let innerNum = data.children.length\n        let weightTable = []\n        switch (columnNum) {\n            case 1:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [3, 1.2, 0.8]\n                }\n                break;\n            case 2:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [4, 3]\n                } else if (innerNum === 3) {\n                    weightTable = [6, 3, 2]\n                }\n                break;\n            case 3:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [3, 1.2, 0.8]\n                }\n                break;\n            case 4:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [4, 3, 2]\n                }\n                break;\n            default:\n                break;\n        }\n        return {\n            \"children\": data.children.map((fact, index) => {\n                return {\n                    ...fact,\n                    significance: weightTable[index]\n                }\n            })\n        }\n    }\n\n    change = (event) => {\n        this.setState({\n            renderNum: event.target.value\n        })\n    }\n\n    getTreemap = (width, height, data) => {\n        let treemap = d3.treemap()\n            .tile(d3.treemapResquarify.ratio(1))\n            .size([width, height])\n            .padding(3)\n            .round(true)\n            (d3.hierarchy(data)\n                .sum(d => d.significance)\n            )\n        return treemap\n    }\n\n    sort = (data) => {\n        return data.sort((a, b) => b.significance - a.significance)\n    }\n\n    getSize = () => {\n        return \"large\"\n    }\n\n    setRef = (id) => {\n        visNodes.set(id, React.createRef())\n        return visNodes.get(id)\n    }\n    setCaptionRef = (id) => {\n        captionNodes.set(id, React.createRef())\n        return captionNodes.get(id)\n    }\n    endEdit = (visId, fact, index) => {\n        let captionNode = captionNodes.get(visId).current\n        const { cachedQA } = this.props\n        let QAId = parseInt(fact.id.split('QA')[0])\n        cachedQA[QAId].facts[index].script = captionNode.innerHTML\n        this.props.saveCachedDecomposedQA(cachedQA)\n    }\n\n    deleteCard = (fact, index) => {\n        let { cachedQA } = this.props\n        let newCachedQA = _.cloneDeep(cachedQA)\n        let parentId = parseInt(fact.id.split('QA')[0])\n        newCachedQA[parentId] && newCachedQA[parentId].facts.splice(index, 1)\n        if (newCachedQA[parentId] && newCachedQA[parentId].facts.length === 0) {\n            newCachedQA.splice(parentId, 1)\n        }\n        this.props.saveCachedDecomposedQA(newCachedQA)\n    }\n\n    render() {\n\n        let { facts, data, schema, columnNum, isEdit, QAID } = this.props\n        let { preWidth, preHeight } = this.TreemapSize[QAID] ? this.TreemapSize[QAID] : { preWidth: 0, preHeight: 0 }\n\n        let renderData = {\n            children: this._renderedFacts(this.sort(facts))\n        }\n\n        renderLayout = this.getTreemap(preWidth, preHeight, this.weightAdapter(renderData, columnNum)).leaves()\n\n        const LayoutView = ({ index, fact, x, y, width, height }) => {\n\n            let vegalite = {\n                // type: \"vegalite\",\n                // height: fact.height - 100,\n                // width: fact.width - 100,\n                height: 640,\n                width: 640,\n            }\n\n            let script = fact.script ? fact.script : genFactSentence(fact) || \" \"\n            fact.generatedScript = script\n\n            return (\n                <div style={{ position: 'absolute', left: x, top: y, width: width, height: height }}>\n                    <div className='chart-card'>\n                        {\n                            isEdit && <div className='delete' onClick={() => this.deleteCard(fact, index)}></div>\n                        }\n                        <div className='wrapper'>\n                            <div className='vis-box' style={{ height: `calc(100% - ${fact.captionH}px)` }}>\n                                <div className='bound-box' id={fact.id} ref={this.setRef(fact.id)}>\n                                    {\n                                        fact2chart({ schema }, fact.id, fact, data, this.getSize(), { ...vegalite })\n                                    }\n                                </div>\n                            </div>\n                            <div className='caption' contentEditable={isEdit} suppressContentEditableWarning ref={this.setCaptionRef(fact.id, index)} onBlur={() => this.endEdit(fact.id, fact, index)}\n                                //title={script}\n                                dangerouslySetInnerHTML={{ __html: hightlight(fact) }}\n                            ></div>\n                        </div>\n                    </div>\n                </div >)\n        }\n\n\n        return (\n            <div className='inner-auto-layout' ref={this.layoutNode} >\n                {\n                    renderLayout && renderLayout.map((layout, key) => {\n                        return <LayoutView\n                            key={key}\n                            index={key}\n                            fact={layout.data}\n                            x={layout.x0}\n                            y={layout.y0}\n                            width={layout.x1 - layout.x0}\n                            height={layout.y1 - layout.y0}\n                        />\n                    })\n                }\n            </div >\n        )\n    }\n}","import React, { PureComponent } from 'react'\nimport './ErrorView.less'\n\nexport default class ErrorView extends PureComponent {\n\n    render() {\n        const { initDone, intl } = this.props\n        return (\n            <div className='ErrorView'>\n                <div />\n                <p>{initDone && intl.get('empty')}</p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport AnsweredFacts from '../Layout/ChartCard/AnsweredFacts'\nimport ErrorView from '@/components/ErrorView/ErrorView'\nimport uuidv4 from 'uuid/v4';\nimport _ from 'lodash'\nimport './layout.less'\n\n// const defaultNum = 1\n// const defaultSubNum = 5\n\nlet subTitleNodes = new Map()\n\nexport default class LayoutView extends Component {\n    titleRef = React.createRef();\n    // state = {\n    //     num: this.props.decomposedQA.length,\n    //     subNum: defaultSubNum\n    // }\n    // change = (event) => {\n    //     this.setState({\n    //         num: event.target.value\n    //     })\n    // }\n    // subchange = (event) => {\n    //     this.setState({\n    //         subNum: event.target.value\n    //     })\n    // }\n\n    setFactId = (facts, index) => {\n        let _facts = _.cloneDeep(facts).map(fact => {\n            return {\n                ...fact,\n                id: `${index}QA${uuidv4()}`\n            }\n        })\n        return _facts\n    }\n\n    fullscreen = () => {\n        let element = document.documentElement;\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {   // 兼容火狐\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {    // 兼容谷歌\n            element.webkitRequestFullscreen();\n        } else if (element.msRequestFullscreen) {   // 兼容IE\n            element.msRequestFullscreen();\n        }\n    }\n    //re-order the array so the \"cards\" read left-right\n    reorder = (arr, columns) => {\n        const cols = columns;\n        const out = [];\n        let col = 0;\n        while (col < cols) {\n            for (let i = 0; i < arr.length; i += cols) {\n                let _val = arr[i + col];\n                if (_val !== undefined)\n                    out.push(_val);\n            }\n            col++;\n        }\n        return out\n    }\n    endEdit = (index) => {\n        let _nodes = subTitleNodes.get(index).current\n        if (_nodes) {\n            let { cachedQA } = this.props\n            cachedQA[index].question = _nodes.innerHTML\n            this.props.saveCachedDecomposedQA(cachedQA)\n        }\n    }\n    setSubTitleRef = (index) => {\n        subTitleNodes.set(index, React.createRef())\n        return subTitleNodes.get(index)\n    }\n\n    endTitleEdit = () => {\n        let _nodes = this.titleRef.current\n        if (_nodes) {\n            let newtTitle = _nodes.innerHTML\n            if (newtTitle !== this.props.editedTitle) {\n                this.props.editTitle(newtTitle)\n            }\n        }\n    }\n    export = () => {\n        window.print()\n    }\n    getTitle = () => {\n        const { askedQuestion, editedTitle } = this.props\n        let titleValue = editedTitle ? editedTitle : askedQuestion\n        return titleValue.slice(0, 1).toUpperCase() + titleValue.slice(1)\n    }\n    render() {\n        const { initDone, intl, isEdit, decomposedQA, loading } = this.props\n        if (!decomposedQA) return null\n        // const { num, subNum } = this.state\n        // decomposedQA = decomposedQA.slice(0, num).map(QA => {\n        //     return {\n        //         ...QA,\n        //         facts: QA.facts.slice(0, subNum)\n        //     }\n        // })\n\n        const TitleView = () => {\n            return <div className='title'>\n                <h1 contentEditable={isEdit}\n                    title={this.getTitle()}\n                    suppressContentEditableWarning\n                    onBlur={() => this.endTitleEdit()}\n                    ref={this.titleRef}>{`${this.getTitle() || (initDone && intl.get(\"inputHint\"))}`}</h1>\n                <div className='fullscreen_icon' onClick={this.fullscreen}></div>\n                <div className='export_icon' onClick={this.export}></div>\n            </div>\n        }\n\n        const SubTitleView = ({ index, subQustion, isEdit }) => {\n            let newStr = subQustion.slice(0, 1).toUpperCase() + subQustion.slice(1)\n            return <div className='sub-title-box'>\n                <div className='right-box'>\n                    <div className={newStr === this.getTitle() ? 'right-top hightlight' : 'right-top default'}></div>\n                </div>\n                <div className='sub-title' style={{ borderColor: newStr === this.getTitle() ? '#F19C0F' : '#A1AEB9' }}>\n                    <div className={newStr === this.getTitle() ? 'index hightlight' : 'index default'}>{index + 1}</div>\n                    <h1 contentEditable={isEdit}\n                        suppressContentEditableWarning\n                        title={`${newStr}`}\n                        onBlur={() => this.endEdit(index)} ref={this.setSubTitleRef(index)}>{`${newStr}`}</h1>\n                </div>\n                {/* <div className='divider'></div> */}\n            </div >\n        }\n        // console.log(\"decomposedQA\", decomposedQA);\n        let columns = decomposedQA.length === 4 ? 2 : decomposedQA.length\n        return (\n            <div className='large-size-screen'>\n                <TitleView {...this.props} />\n                {/* <div className='test'>\n                    View\n                    <select onChange={this.change} defaultValue={defaultNum}>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                    </select>\n                </div>\n                <div className='sub_test'>\n                    subView\n                    <select onChange={this.subchange} defaultValue={defaultSubNum}>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                        <option value='5'>5</option>\n                    </select>\n                </div> */}\n                <div className='auto-layout' style={{ columnCount: columns }}>\n                    <div className='dec1'></div>\n                    <div className='dec2'></div>\n                    {\n                        decomposedQA.length > 0 ? this.reorder(decomposedQA, columns).map((QA, index) => {\n                            return (\n                                <div className='subView' key={QA.id} style={{ height: decomposedQA.length === 4 ? \"calc(50% - 15px)\" : \"100%\", width: \"100%\" }}>\n                                    <div className='d1'></div>\n                                    <div className='d2'></div>\n                                    {\n                                        decomposedQA.length > 1 && <SubTitleView index={QA.id} subQustion={QA.question} isEdit={isEdit} />\n                                    }\n                                    <AnsweredFacts QAID={index} facts={this.setFactId(QA.facts, index)} columnNum={decomposedQA.length} {...this.props} />\n                                </div>\n                            )\n                        })\n                            :\n                            !loading && <ErrorView initDone={initDone, intl} intl={intl} />\n                    }\n                </div>\n            </div >\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Spin } from 'antd';\nimport LayoutView from './Layout/layout'\nimport { getFactChartType } from '@/tool/fact2vis/fact2vis';\n// import BlankView from './blank'\n// import demoResponse from '../assets/json/demoResponse'\nimport * as api from '@/axios/api'\nimport './dashboard.less'\n\n\nexport default class Dashboard extends Component {\n\n    state = {\n        question: this.props.question,\n        decomposedQA: [],\n        loading: false,\n        isUpdateLayout: this.props.isUpdateLayout\n    }\n\n    componentDidMount() {\n        // this.setState({\n        //     decomposedQA: this.addParams(demoResponse.story),\n        // })\n        const { cachedQA, question } = this.props\n        if (cachedQA) {\n            this.setState({\n                decomposedQA: cachedQA\n            })\n        } else {\n            this.getData(question)\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.question !== this.state.question) {\n            this.setState({\n                question: nextProps.question\n            })\n            this.getData(nextProps.question)\n        } else {\n            const { cachedQA } = nextProps\n            if (!cachedQA) return null\n            this.setState({\n                decomposedQA: cachedQA\n            })\n        }\n    }\n\n    getData = async (question) => {\n        const { fileName } = this.props\n        let data = {\n            file_name: fileName,\n            question,\n            model: ''\n        }\n        this.setState({\n            loading: true\n        })\n        this.props.updateQuestion(question)\n        let response = await api.generate(data)\n        if (!response.data || response.data === 'talk-generator error') {\n            this.setState({\n                loading: false,\n                decomposedQA: []\n            })\n            return\n        }\n        let decomposedQA = this.addParams(response.data.story)\n        this.setState({\n            loading: false,\n            decomposedQA\n        })\n        this.props.saveCachedDecomposedQA(decomposedQA)\n    }\n\n    constructGroupBy = (breakdown) => {\n        return breakdown.map(d => d.field)\n    }\n    getFakeScript = (subQuestion, index) => {\n        let script = ''\n        //carsales\n        if (subQuestion === 'in which category has the highest sales and which the lowest ') {\n            script = 'in which category has the highest sales and which the lowest '\n        } else if (subQuestion === 'sales has an overall value of sales over year ') {\n            script = 'sales has an overall value of sales over year '\n        } else if (subQuestion === 'sales have an overall value of sales ') {\n            script = 'sales have an overall value of sales '\n        }\n\n        let caption;\n        if (subQuestion === 'Does any brand sell a lot but has a decreasing trend') {\n            caption = [\"caption1\", \"caption2\", \"caption3\"]\n            script = caption[index]\n        } else if (subQuestion === 'which brand has the highest sales and which brand has the lowest sales ') {\n            caption = [\"caption1\", \"caption2\", \"caption3\"]\n            script = caption[index]\n        } else if (subQuestion === 'which brand has an increasing trend of sales over brand ') {\n            caption = [\"caption1\", \"caption2\", \"caption3\"]\n            script = caption[index]\n        }\n        return script\n    }\n    getFakeFocus = (subQuestion, index, focus) => {\n        if (subQuestion === 'which brand has the highest sales and which brand has the lowest sales ') {\n            focus[0][\"value\"] = 'Ford'\n        }\n        if (subQuestion === 'which brand has the highest sales and which has the lowest ') {\n            focus[0][\"value\"] = 'Ford'\n        }\n        \n        if (subQuestion === 'in which category has the highest sales and which the lowest ') {\n            focus[0][\"value\"] = 'SUV'\n        }\n        return focus\n    }\n    addParams = (story) => {\n        return story.map((d, id) => {\n            return {\n                question: d.question,\n                id,\n                facts: d.facts.map(fact => {\n                    if (!fact.chart || fact.chart === \"\") {\n                        fact.groupby = this.constructGroupBy(fact.breakdown)\n                        fact.chart = getFactChartType(this.props.schema, fact);\n                    }\n                    return {\n                        ...fact,\n                        groupby: fact.breakdown[0] ? [fact.breakdown[0].field] : [],\n                        //script: this.getFakeScript(d.question, id),\n                        focus: this.getFakeFocus(d.question, id, fact.focus)\n                    }\n                })\n            }\n        })\n    }\n    render() {\n        const { decomposedQA, question, loading } = this.state\n        const { initDone, intl } = this.props\n\n        return (\n            <div className='Dashboard spin-center'>\n                {\n                    loading && <Spin tip={initDone && intl.get(\"Coverting\")} ></Spin>\n                }\n                <LayoutView\n                    loading={loading}\n                    askedQuestion={question}\n                    decomposedQA={decomposedQA}\n                    {...this.props} />\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}