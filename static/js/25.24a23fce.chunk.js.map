{"version":3,"sources":["../node_modules/axios/lib/utils.js","../node_modules/antd/es/_util/reactNode.js","axios/config.js","constant/FactType.js","constant/ChartType.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/cancel/Cancel.js","axios/api.js","../node_modules/antd/es/_util/type.js","constant/FieldType.js","../node_modules/axios/index.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","tool/fact2vis/getSuitableBreakdownList.js","tool/fact2vis/datafilter.js","tool/fact2vis/helper.js","tool/fact2vis/fact2visAllRule.js","tool/fact2vis/fact2visRule.js","tool/fact2vis/getSupportedChartTypes.js","tool/fact2vis/Chart.js","tool/fact2vis/fact2vis.js","sentencer/fact-templates/association.js","sentencer/fact-templates/categorization.js","sentencer/fact-templates/difference.js","sentencer/fact-templates/distribution.js","sentencer/fact-templates/extreme.js","sentencer/fact-templates/outlier.js","sentencer/fact-templates/proportion.js","sentencer/fact-templates/rank.js","sentencer/fact-templates/trend.js","sentencer/fact-templates/value.js","sentencer/fact-templates/index.js","constant/AggregationType.js","sentencer/index.js","tool/helper.js","pages/EditPage/Dashboard/Layout/ChartCard/AnsweredFacts.js","components/ErrorView/ErrorView.js","pages/EditPage/Dashboard/Layout/layout.js","pages/EditPage/Dashboard/dashboard.js"],"names":["bind","require","toString","Object","prototype","isArray","val","call","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","forEach","obj","fn","i","l","length","key","hasOwnProperty","module","exports","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","slice","arguments","extend","a","b","thisArg","trim","str","replace","stripBOM","content","charCodeAt","isValidElement","React","cloneElement","element","props","replacement","replaceElement","uploadPrefix","generationUrlPrefix","config","url","uploadData","share","fetch","factScoring","generate","candidateQuestions","VALUE","TREND","CATEGORIZATION","DIFFERENCE","PROPORTION","DISTRIBUTION","RANK","ASSOCIATION","EXTREME","OUTLIER","JUXTAPOSITION","AREA_CHART","VERTICAL_BAR_CHART","VERTICAL_DIFFERENCE_BAR_CHART","VERTICAL_DIFFERENCE_ARROW_CHART","HORIZONTAL_BAR_CHART","PROGRESS_BAR_CHART","STACKED_BAR_CHART","ISOTYPE_BAR_CHART","PROPORTION_ISOTYPE_CHART","COLOR_FILLING_MAP","BUBBLE_CHART","TEXT_CHART","LINE_CHART","STACKED_LINE_CHART","RING_CHART","HALF_RING_CHART","PIE_CHART","SCATTER_PLOT","TREE_MAP","BUBBLE_MAP","args","Array","apply","utils","encode","encodeURIComponent","params","paramsSerializer","serializedParams","parts","v","toISOString","JSON","stringify","push","join","hashmarkIndex","indexOf","value","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","process","getDefaultAdapter","transformRequest","data","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","method","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","Promise","resolve","reject","requestData","requestHeaders","type","request","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","open","toUpperCase","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","Error","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","keys","filter","Cancel","this","formData","reslove","axios","catch","getQuestions","generatePDF","param","tuple","_len","_key","NUMERICAL","CATEGORICAL","TEMPORAL","GEOGRAPHICAL","Axios","mergeConfig","createInstance","defaultConfig","context","instance","create","instanceConfig","CancelToken","isCancel","all","promises","spread","default","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","getUri","handlers","use","eject","id","h","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","normalizedName","name","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","stack","write","expires","path","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","requestedURL","test","relativeURL","ignoreDuplicateOf","parsed","split","line","substr","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","executor","TypeError","resolvePromise","token","c","callback","arr","getSuitableBreakdownList","factType","chartType","schema","suitableBreakdownList","fact2visAllRules","x","fact","chart","breakdownSets","Set","breakdownType","add","breakdownList","from","s","datafilter","subspace","filteredData","sub","field","isValid","FactType","measure","groupby","focus","customizeFact","newFact","assign","groupbyList","measureList","gbValueList","getFieldValue","encoding","aggregate","aggregatedRows","getAggregatedRows","measureField","max","reduce","extremeFocus","extremeValue","newOrder","sort","y","map","d","newOrderValue","n","posQ3","parseInt","posQ1","decimalQ3","decimalQ1","Q3","Q1","Low","Up","outlierIndex","groupbyFieldList","getMaxRows","rawData","d3","entries","index","values","aggregation","calculateData","sumData","fill","sumRows","getSumRows","getAverageRows","getMinRows","countData","countRows","getCountRows","fieldName","ChartType","FieldType","fact2visRules","getSupportedChartTypes","supportedChartTypes","isEdit","breakDown","rules","rang","Chart","spec","container","autovis","AutoVis","load","preProps","size","vega_w","width","height","style","display","alignItems","justifyContent","Component","getChoice","Math","round","random","getFactChartType","shema","getvischartype","fact2chart","specData","containerId","vegalite","console","log","specChart","duration","showSuggestion","specNew","_","cloneDeep","templates","pickFactTemplate","association","categorization","difference","distribution","extreme","outlier","proportion","rank","trend","floor","sentence","template","SUM","MAX","MIN","AVG","COUNT","plur","convertAggregation","aggType","AggregationType","NONE","convertMeasure","convertGroupby","gb","gbWords","gbWordIndex","plurWord","formatNum","num","floatNum","intNum","toFixed","substring","counter","genFactSubspace","hightlightItem","script","parameter","srtEndIndex","srtStartIndex","newScript","hightlight","generatedScript","parameter1","parameter2","parameter3","visSmall","visNodes","Map","captionNodes","renderLayout","AnsweredFacts","layoutNode","createRef","onResize","setTimeout","updateTreeMapLayout","current","clientWidth","clientHeight","QAID","TreemapSize","preWidth","preHeight","forceUpdate","updateTreemapSize","batchUpdateVis","svgTransformer","newWidth","newHeight","facts","get","visNode","captionNode","visWidth","visHeight","captionH","x0","x1","y0","y1","updateAVis","scale","min","visChart","children","onmouseenter","onmouseleave","_isValidate","_renderedFacts","state","renderNum","count","cachedFact","visCaptionH","theFact","findIndex","setState","weightAdapter","columnNum","innerNum","weightTable","significance","change","event","getTreemap","tile","ratio","padding","sum","getSize","setRef","set","setCaptionRef","endEdit","visId","cachedQA","innerHTML","saveCachedDecomposedQA","deleteCard","newCachedQA","parentId","splice","visBox","renderData","leaves","LayoutView","_fact","Number","parseFloat","parameterList","focusValue","genFactSentence","position","left","top","className","onClick","ref","contentEditable","suppressContentEditableWarning","onBlur","dangerouslySetInnerHTML","__html","layout","ErrorView","initDone","intl","PureComponent","subTitleNodes","titleRef","setFactId","uuidv4","fullscreen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","reorder","columns","cols","out","col","_val","_nodes","question","setSubTitleRef","endTitleEdit","newtTitle","editedTitle","editTitle","export","print","getTitle","askedQuestion","titleValue","decomposedQA","loading","TitleView","title","SubTitleView","subQustion","newStr","borderColor","columnCount","QA","Dashboard","isUpdateLayout","getData","file_name","model","updateQuestion","api","addParams","story","constructGroupBy","breakdown","getFakeScript","subQuestion","getFakeFocus","nextProps","tip"],"mappings":"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","file":"static/js/25.24a23fce.chunk.js","sourcesContent":["'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","import * as React from 'react';\nvar isValidElement = React.isValidElement;\nexport { isValidElement };\nexport function replaceElement(element, replacement, props) {\n  if (!isValidElement(element)) return replacement;\n  return /*#__PURE__*/React.cloneElement(element, typeof props === 'function' ? props(element.props || {}) : props);\n}\nexport function cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}","//let calliopeService = 'calliope-service.idvxlab.com:8004';\nlet calliopeService = 'talk-api.idvxlab.com:8006';\n\nlet uploadPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeService}` : 'http://localhost:6028';//todo \n//let uploadPrefix = `https://${calliopeService}`\nlet generationUrlPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeService}` : 'http://localhost:6030';\n//let generationUrlPrefix = `https://${calliopeService}`\n\n\nconst config = {\n    url: {\n        //upload\n        uploadPrefix: uploadPrefix,\n        uploadData: `${uploadPrefix}/upload`,\n        share: `${uploadPrefix}/share`,\n        fetch: `${uploadPrefix}/data/share`,\n        //story generation\n        factScoring: `${generationUrlPrefix}/fact`,\n        generate: `${generationUrlPrefix}/generate`,\n        candidateQuestions: `https://${calliopeService}/column2questions`,\n    }\n}\nexport default config","export default {\n    VALUE: 'value',\n    TREND: 'trend',\n    CATEGORIZATION: 'categorization',\n    DIFFERENCE: 'difference',\n    PROPORTION: 'proportion',\n    DISTRIBUTION: 'distribution',\n    RANK: 'rank',\n    ASSOCIATION: 'association',\n    EXTREME: 'extreme',\n    OUTLIER: 'outlier'\n}","export default {\n    JUXTAPOSITION: 'juxtaposition',\n    AREA_CHART: 'Area Chart',\n    VERTICAL_BAR_CHART: 'Vertical Bar Chart',\n    VERTICAL_DIFFERENCE_BAR_CHART: 'Vertical Difference Bar Chart',\n    VERTICAL_DIFFERENCE_ARROW_CHART: 'Vertical Difference Arrow Chart',\n    HORIZONTAL_BAR_CHART: 'Horizontal Bar Chart',\n    PROGRESS_BAR_CHART: 'Progress Bar Chart',\n    STACKED_BAR_CHART: 'Stacked Bar Chart',\n    ISOTYPE_BAR_CHART: 'Isotype Bar Chart',\n    PROPORTION_ISOTYPE_CHART: 'Proportion Isotype Chart',\n    COLOR_FILLING_MAP: 'Color Filling Map',\n    BUBBLE_CHART: 'Bubble Chart',\n    TEXT_CHART: 'Text Chart',\n    LINE_CHART: 'Line Chart',\n    STACKED_LINE_CHART: 'Stacked Line Chart',\n    RING_CHART: 'Ring Chart',\n    HALF_RING_CHART: 'Half Ring Chart',\n    PIE_CHART: 'Pie Chart',\n    SCATTER_PLOT: 'Scatter Plot',\n    TREE_MAP: 'Treemap',\n    BUBBLE_MAP: 'Bubblemap'\n}","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    if (\n      (utils.isBlob(requestData) || utils.isFile(requestData)) &&\n      requestData.type\n    ) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = unescape(encodeURIComponent(config.auth.password)) || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","import config from '@/axios/config';\nimport axios from 'axios';\n\nexport async function uploadData(formData) {\n    return new Promise((reslove, reject) => {\n        axios({\n            method: \"post\",\n            url: `${config.url.uploadData}`,\n            config: {\n                \"headers\": {\n                    'Content-Type': 'multipart/form-data' //application/json; charset=utf-8\n                },\n            },\n            data: formData\n        }).then((response) => {\n            if (response.status >= 400) {\n                reject();\n            } else if (response.status === 200 || response.status === 201 || response.status === 204) {\n                reslove(response.data);\n            } else {\n                reject();\n            }\n        }).catch(error => {\n            reject();\n            //  message.error('error message');\n        })\n    })\n}\n\n\nexport function generate(data) {\n    return axios({\n        method: \"post\",\n        url: `${config.url.generate}`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        },\n        data: data\n    })\n}\n\nexport function getQuestions(data) {\n    return axios({\n        method: \"post\",\n        url: `${config.url.candidateQuestions}`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        },\n        data: data\n    })\n}\nexport function factScoring(filename, fact, method) {\n    return axios({\n        \"method\": \"POST\",\n        \"url\": config.url.factScoring,\n        \"headers\": {\n            \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        \"data\": {\n            \"file_name\": filename,\n            \"fact\": fact,\n            \"method\": method,\n        }\n    })\n}\n\nexport async function shareStory(jsonstring) {\n    return new Promise((reslove, reject) => {\n        axios({\n            method: \"post\",\n            url: `${config.url.share}`,\n            config: {\n                \"headers\": {\n                    'Content-Type': 'application/json; charset=utf-8'\n                },\n            },\n            data: {\n                \"share_json\": jsonstring\n            }\n        }).then((response) => {\n            if (response.status >= 400) {\n                reject();\n            } else if (response.status === 200 || response.status === 201 || response.status === 204) {\n                reslove(response.data);\n            } else {\n                reject();\n            }\n        }).catch(error => {\n            reject();\n            //  message.error('error message');\n        })\n    })\n}\n\nexport async function fetchStory(id) {\n    return axios({\n        method: \"get\",\n        \"url\": `${config.url.fetch}/${id}.json`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        }\n    })\n}\n/*****\n *技术栈：\n ssr(后端渲染)，koa(koa-views)：模板渲染，渲染出要生成pdf的页面)\n node.js 生成pdf插件 puppeteer：将渲染的页面生成PDF\n koa-send：将生成的PDF返回给前端页面下载 \n * \n data是后端用于渲染页面的数据\n */\nexport function generatePDF(data) {\n    return axios({\n        method: 'post',\n        url: `/generatePDF`,\n        param: {},\n        data: data\n    })\n}\n","// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport var tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\nexport var tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};","export default {\n    NUMERICAL: 'numerical',\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEOGRAPHICAL: 'geographical',\n}","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","import { fact2visAllRules } from './fact2visAllRule';\n\nconst getSuitableBreakdownList = (factType, chartType, schema) => {\n    //acording to factType ---> filter\n    let suitableBreakdownList = fact2visAllRules.filter(x => x.fact === factType);\n\n    //if has choosed chartType ---> filter\n    if (chartType) {\n        suitableBreakdownList = suitableBreakdownList.filter(x => x.chart === chartType);\n    }\n    if (suitableBreakdownList.length === 0) return [];\n    let breakdownSets = new Set();\n    suitableBreakdownList.forEach(x => {\n        x.breakdownType.forEach(type => {\n            breakdownSets.add(type)\n        })\n    })\n    let breakdownList = Array.from(breakdownSets);\n    //console.log(\"suitableBreakdownList\", breakdownList)\n    let suitableSchema = schema.filter(s => {\n        return breakdownList.indexOf(s.type) !== -1\n    })\n    // suitableSchema = suitableSchema.map(shema => {\n    //     return shema.field\n    // })\n    //console.log(\"suitableSchema\", suitableSchema)\n    return suitableSchema;\n};\nexport default getSuitableBreakdownList;","const datafilter = (data, subspace) => {\n    let filteredData = data;\n    for (const sub of subspace) {\n        filteredData = filteredData.filter((x)=>x[sub.field]===sub.value)\n    }\n    return filteredData\n}\n\nexport default datafilter;","import FactType from '@/constant/FactType'\nimport getSuitableBreakdownList from './getSuitableBreakdownList';\nimport datafilter from './datafilter';\nimport * as d3 from 'd3';\n// import _ from 'lodash';\n\n// chart valid\nexport const isValid = function (fact) {\n    let isValid = false;\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            if (fact.measure.length === 2)\n                isValid = true\n            break;\n\n        case FactType.CATEGORIZATION:\n            if (fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.DIFFERENCE:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length >= 2)\n                isValid = true\n            break;\n\n        case FactType.DISTRIBUTION:\n            if (fact.measure.length && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.EXTREME:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.OUTLIER:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.PROPORTION:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length)\n                isValid = true\n            break;\n\n        case FactType.RANK:\n            if (fact.measure.length && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.TREND:\n            if (fact.measure.length && fact.groupby.length)\n                isValid = true\n            break;\n\n        case FactType.VALUE:\n            if (fact.measure.length)\n                isValid = true\n            break;\n\n        default:\n            break;\n    }\n    return isValid\n}\n\n/***\n * 清空不必要的fact属性\n ***/\nexport const customizeFact = function (fact, schema, data) {\n    let newFact = Object.assign({}, fact)\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            newFact.focus = [];\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                const measureList = schema.filter(key => key['type'] === \"numerical\");\n                if (newFact.measure.length === 0 && measureList.length > 0) {\n                    newFact.measure = [{ \"field\": measureList[0].field, \"aggregate\": \"count\" }];\n                }\n                if (newFact.measure.length === 1) {\n                    newFact.measure.push({ \"field\": 'COUNT', \"aggregate\": \"count\" });\n                }\n            }\n            break;\n\n        case FactType.CATEGORIZATION:\n            newFact.measure = []\n            newFact.focus = []\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n            }\n            break;\n\n        case FactType.DIFFERENCE:\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema),\n                    gbValueList = getFieldValue(data, fact.groupby);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                /***** 设默认为第1、2条，并且更新到fact中 *****/\n                if (!newFact.focus.length) {\n                    newFact.focus = [{\n                        field: newFact.groupby[0],\n                        value: gbValueList[0],\n                    },\n                    {\n                        field: newFact.groupby[0],\n                        value: gbValueList[1],\n                    }\n                    ]\n                }\n            }\n            break;\n\n        case FactType.DISTRIBUTION:\n            newFact.focus = []\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n            }\n            break;\n\n        case FactType.EXTREME:\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                // aggregation\n                if (newFact.measure.length && newFact.groupby.length) {\n                    let encoding = {}\n                    encoding['y'] = {};\n                    encoding['y']['field'] = newFact.measure[0].field;\n                    encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                    encoding['x'] = {};\n                    encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let measureField = newFact.measure[0]['field'];\n                    let max = aggregatedRows.reduce((a, b) => (a[measureField] > b[measureField]) ? a : b);\n\n                    /***** 设默认为max，并且更新到fact中 *****/\n                    if (!newFact.focus.length) {\n                        newFact.focus = [{\n                            field: newFact.groupby[0],\n                            value: max[newFact.groupby[0]],\n                            extremeFocus: 'max',\n                            extremeValue: max[newFact.measure[0].field]\n                        }]\n                    }\n                }\n            }\n            break;\n\n        case FactType.OUTLIER:\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                // aggregation\n                if (newFact.measure.length && newFact.groupby.length) {\n                    let encoding = {}\n                    encoding['y'] = {};\n                    encoding['y']['field'] = newFact.measure[0].field;\n                    encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                    encoding['x'] = {};\n                    encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let newOrder = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.x.field]; })\n                    let newOrderValue = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.y.field]; })\n\n                    let n = newOrderValue.length\n                    // 整数部分\n                    let posQ3 = parseInt((n - 1) * 0.25)\n                    let posQ1 = parseInt((n - 1) * 0.75)\n                    // 小数部分\n                    let decimalQ3 = (n - 1) * 0.25 - posQ3\n                    let decimalQ1 = (n - 1) * 0.75 - posQ1\n                    let Q3 = newOrderValue[posQ3] + (newOrderValue[posQ3 + 1] - newOrderValue[posQ3]) * decimalQ3\n                    let Q1 = newOrderValue[posQ1] + (newOrderValue[posQ1 + 1] - newOrderValue[posQ1]) * decimalQ1\n\n                    let Low = Q1 - 1.5 * (Q3 - Q1)\n                    let Up = Q3 + 1.5 * (Q3 - Q1)\n                    let outlierIndex = []\n                    newOrderValue.forEach((d, i) => {\n                        if (d > Up || d < Low) {\n                            outlierIndex.push(i)\n                        }\n                    });\n\n                    /***** 设默认为outlier，并且更新到fact中 *****/\n                    if (!newFact.focus.length && outlierIndex.length) {\n                        newFact.focus = [{\n                            field: fact.groupby[0],\n                            value: newOrder[outlierIndex[0]],\n                        }]\n                    }\n                }\n            }\n            break;\n\n        case FactType.PROPORTION:\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(fact.type, fact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                if (newFact.measure.length && newFact.groupby.length) {\n                    // aggregation\n                    let encoding = {}\n                    encoding['y'] = {};\n                    encoding['y']['field'] = newFact.measure[0].field;\n                    encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                    encoding['x'] = {};\n                    encoding['x']['field'] = newFact.groupby[0];\n                    let filteredData = datafilter(data, newFact.subspace)\n                    let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                    // filter gbValueList\n                    let measureField = newFact.measure[0]['field'];\n                    let max = aggregatedRows.reduce((a, b) => (a[measureField] > b[measureField]) ? a : b)\n\n                    /***** 设默认为max，并且更新到fact中 *****/\n                    if (!newFact.focus.length) {\n                        newFact.focus = [{\n                            field: newFact.groupby[0],\n                            value: max[newFact.groupby[0]],\n                        }]\n                    }\n                }\n            }\n            break;\n\n        case FactType.RANK:\n            newFact.focus = []\n            if (schema && data) {\n                const groupbyList = getSuitableBreakdownList(newFact.type, newFact.chart, schema);\n                if (newFact.groupby.length === 0 && groupbyList.length > 0) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n                // if (newFact.measure.length && newFact.groupby.length) {\n                //     // aggregation\n                //     let encoding = {}\n                //     encoding['y'] = {};\n                //     encoding['y']['field'] = newFact.measure[0].field;\n                //     encoding['y']['aggregation'] = newFact.measure[0].aggregate;\n                //     encoding['x'] = {};\n                //     encoding['x']['field'] = newFact.groupby[0];\n                //     let filteredData = datafilter(data, newFact.subspace)\n                //     let aggregatedRows = getAggregatedRows(filteredData, encoding);\n                //     // filter gbValueList\n                //     let newOrder = aggregatedRows.sort(function (a, b) { return b[encoding.y.field] - a[encoding.y.field]; }).map(function (d) { return d[encoding.x.field]; })\n\n                //     /***** 设默认为前3，并且更新到fact中 *****/\n\n                //     let focus = []\n                //     newOrder.forEach((d, i) => {\n                //         if (i < 3) {\n                //             focus.push({ field: fact.groupby[0], value: d })\n                //         }\n                //     });\n                //     if(!_.isEqual(focus, newFact.focus)){\n                //         newFact.focus = focus;\n                //     }\n                // }\n            }\n            break;\n\n        case FactType.TREND:\n            newFact.focus = [];\n            if (schema && data) {\n                let groupbyList = schema.filter(key => key['type'] === \"temporal\")\n                const groupbyFieldList = groupbyList.map((d) => d.field);\n                if (groupbyList.length === 0) {\n                    newFact.groupby = []\n                } else if (newFact.groupby.length === 0 || groupbyFieldList.indexOf(newFact.groupby[0]) === -1) {\n                    newFact.groupby = [groupbyList[0].field];\n                }\n\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n            }\n            break;\n\n        case FactType.VALUE:\n            newFact.groupby = []\n            newFact.focus = []\n            if (schema && data) {\n                if (newFact.measure.length === 0) {\n                    newFact.measure = [{ \"field\": 'COUNT', \"aggregate\": \"count\" }];\n                }\n            }\n            break;\n\n        default:\n            break;\n    }\n    return newFact\n}\n\n// fact valid for score to update(RANK/PROPORTION/OUTLIER/DIFFERENCE)\n//NO USE FOR A MOMENT!!!!!\nexport const isFactValid = function (_fact) {\n    let fact = Object.assign({}, _fact)\n    let isFactValid = false;\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            if (fact.measure.length === 2 && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.CATEGORIZATION:\n            if (fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.DIFFERENCE:\n            if (fact.measure && fact.groupby && fact.focus.length >= 2)\n                isFactValid = true\n            break;\n\n        case FactType.DISTRIBUTION:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.EXTREME:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.OUTLIER:\n            if (fact.measure && fact.groupby && fact.focus.length)\n                isFactValid = true\n            break;\n\n        case FactType.PROPORTION:\n            if (fact.measure && fact.groupby && fact.focus.length)\n                isFactValid = true\n            break;\n\n        case FactType.RANK:\n            if (fact.measure.length && fact.groupby.length && fact.focus.length >= 3)\n                isFactValid = true\n            break;\n\n        case FactType.TREND:\n            if (fact.measure && fact.groupby)\n                isFactValid = true\n            break;\n\n        case FactType.VALUE:\n            if (fact.measure)\n                isFactValid = true\n            break;\n\n        default:\n            break;\n    }\n    return isFactValid\n}\n\nconst getCountRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let countData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(() => {\n            countData[i] += 1\n        })\n        let countRows = Object.assign({}, d.values[0])\n        countRows['COUNT'] = countData[i]\n        return countRows\n    });\n    return data;\n}\n\nconst getMinRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let data = calculateData.map(function (d) {\n        let index = d3.scan(d.values, function (a, b) {\n            if (a[encoding.y.field] && b[encoding.y.field])\n                return a[encoding.y.field] - b[encoding.y.field];\n        });\n        if (index >= 0) {\n            return d.values[index]\n        } else {\n            return d.values[0]\n        }\n    });\n    return data;\n}\n\nconst getMaxRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let data = calculateData.map(function (d, i) {\n        let index = d3.scan(d.values, function (a, b) {\n            if (a[encoding.y.field] && b[encoding.y.field])\n                return b[encoding.y.field] - a[encoding.y.field];\n        });\n        if (index >= 0) {\n            return d.values[index]\n        } else {\n            return d.values[0];\n        }\n    });\n    return data;\n}\n\nconst getSumRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let sumData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(d => {\n            sumData[i] += d[encoding.y.field]\n        })\n        let sumRows = Object.assign({}, d.values[0])\n        sumRows[encoding.y.field] = sumData[i]\n        return sumRows\n    });\n    return data;\n}\n\nconst getAverageRows = (rawData, encoding) => {\n    let calculateData = d3.nest().key(d => d[encoding.x.field]).entries(rawData);\n    let sumData = new Array(calculateData.length).fill(0);\n    let data = calculateData.map(function (d, i) {\n        d.values.forEach(d => {\n            sumData[i] += d[encoding.y.field]\n        })\n        let sumRows = Object.assign({}, d.values[0])\n        sumRows[encoding.y.field] = sumData[i] / d.values.length;\n        return sumRows;\n    });\n    return data;\n}\n\nconst getAggregatedRows = (rawData, encoding) => {\n    let data;\n    switch (encoding.y.aggregation) {\n        case 'sum':\n            data = getSumRows(rawData, encoding);\n            break;\n        case 'avg':\n            data = getAverageRows(rawData, encoding);\n            break;\n        case 'max':\n            data = getMaxRows(rawData, encoding);\n            break;\n        case 'min':\n            data = getMinRows(rawData, encoding);\n            break;\n        case 'count':\n            data = getCountRows(rawData, encoding)\n            break;\n\n        default:\n            data = getMaxRows(rawData, encoding);\n            break;\n    }\n    return data;\n}\n\nconst getFieldValue = (rawData, fieldName) => {\n    if (fieldName)\n        return Array.from(new Set(rawData.map(d => d[fieldName])));\n    else return []\n}","import FactType from '@/constant/FactType';\nimport ChartType from '@/constant/ChartType';\nimport FieldType from '@/constant/FieldType';\n//权重\nexport const fact2visAllRules = [\n    //association \n    {\n        \"fact\": FactType.ASSOCIATION,\n        \"chart\": ChartType.SCATTER_PLOT,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL, FieldType.GEOGRAPHICAL]\n    },\n    //outlier\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL, FieldType.GEOGRAPHICAL],\n        //\"rang\": [0, 9]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     \"rang\": [6, 9]\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //extreme\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL, FieldType.GEOGRAPHICAL],\n        //\"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //proportion\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PROGRESS_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL, FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.RING_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PIE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL, FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     \"rang\": [0, 9]\n    // },\n\n    //rank\n    {\n        \"fact\": FactType.RANK,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL, FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.LINE_CHART,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    //distribution\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     \"rang\": [6, 10000]\n    // },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n        //\"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.PIE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    //difference\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    //     // \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.PIE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL, FieldType.TEMPORAL],\n    },\n    // //categorization\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 10000]\n    // },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n       // \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 9]\n    // },\n    //trend\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.AREA_CHART,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     //\"rang\": [0, 9],\n    //     \"breakdownType\": [FieldType.TEMPORAL, FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    //     \"rang\": [0, 9],\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"rang\": [6, 9],\n    //     \"breakdownType\": [FieldType.TEMPORAL, FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.SCATTER_PLOT,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    //value\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [],\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    //     \"breakdownType\": [],\n    // },\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        // \"rang\": [0, 9],\n        //\"breakdownType\": [FieldType.TEMPORAL, FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [],\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [],\n    // }\n]","import FactType from '@/constant/FactType';\nimport ChartType from '@/constant/ChartType';\nimport FieldType from '@/constant/FieldType';\n//权重\nexport const fact2visRules = [\n    //association \n    {\n        \"fact\": FactType.ASSOCIATION,\n        \"chart\": ChartType.SCATTER_PLOT,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL, FieldType.GEOGRAPHICAL]\n    },\n    //outlier\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.CATEGORICAL],\n    //     // \"rang\": [0, 9]\n    // },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    {\n        \"fact\": FactType.OUTLIER,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL]\n    },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    //     // \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    //     // \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.OUTLIER,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    // \"rang\": [6, 9]\n    // },\n    //extreme\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n        // \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    {\n        \"fact\": FactType.EXTREME,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.EXTREME,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    //proportion\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PROGRESS_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.RING_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    {\n        \"fact\": FactType.PROPORTION,\n        \"chart\": ChartType.PIE_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //\"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.PROPORTION,\n    //     \"chart\": ChartType.TEXT_CHART,\n    // },\n\n    //rank\n    {\n        \"fact\": FactType.RANK,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n    },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.RANK,\n    //     \"chart\": ChartType.LINE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL, FieldType.TEMPORAL],\n    // },\n    //distribution\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.AREA_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 10000]\n    // },\n    {\n        \"fact\": FactType.DISTRIBUTION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n       // \"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    // },\n    // {\n    //     \"fact\": FactType.DISTRIBUTION,\n    //     \"chart\": ChartType.PIE_CHART,\n    // },\n    // //difference\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    // },\n    // {\n    //     \"fact\": FactType.DIFFERENCE,\n    //     \"chart\": ChartType.PIE_CHART,\n    // },\n    {\n        \"fact\": FactType.DIFFERENCE,\n        \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL,FieldType.TEMPORAL],\n    },\n    //categorization\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    //     \"breakdownType\": [FieldType.GEOGRAPHICAL],\n    // },\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.TREE_MAP,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 10000]\n    // },\n    {\n        \"fact\": FactType.CATEGORIZATION,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n        \"breakdownType\": [FieldType.CATEGORICAL, FieldType.GEOGRAPHICAL],\n        //\"rang\": [0, 9]\n    },\n    // {\n    //     \"fact\": FactType.CATEGORIZATION,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //     \"breakdownType\": [FieldType.CATEGORICAL],\n    //     \"rang\": [6, 9]\n    // },\n    //trend\n    {\n        \"fact\": FactType.TREND,\n        \"chart\": ChartType.LINE_CHART,\n        \"breakdownType\": [FieldType.TEMPORAL],\n    },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.AREA_CHART,\n    //     \"breakdownType\": [FieldType.TEMPORAL],\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.VERTICAL_BAR_CHART,\n    //     \"rang\": [0, 9]\n    // },\n    // {\n    //     \"fact\": FactType.TREND,\n    //     \"chart\": ChartType.BUBBLE_CHART,\n    //\"rang\": [6, 9]\n    // },\n\n    //value\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.TEXT_CHART,\n    //     \"breakdownType\": [],\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.HORIZONTAL_BAR_CHART,\n    // },\n    {\n        \"fact\": FactType.VALUE,\n        \"chart\": ChartType.VERTICAL_BAR_CHART,\n    },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.BUBBLE_MAP,\n    // },\n    // {\n    //     \"fact\": FactType.VALUE,\n    //     \"chart\": ChartType.COLOR_FILLING_MAP,\n    // }\n]","import {\n    fact2visRules\n} from './fact2visRule';\nimport {\n    fact2visAllRules\n} from './fact2visAllRule';\nimport FieldType from '@/constant/FieldType';\n\n/****\n * 过滤规则： 根据fact.type 和 breakDown.type 筛选支持的图表\n * 其中isEdit===false表示生成阶段，生成阶段优先在推荐规则中过滤，如果找不到，会在全部支持的规则中过滤\n *     isEdit===ture表示编辑阶段，在全部支持的规则中过滤\n */\n\nconst getSupportedChartTypes = (fact, schema, isEdit = false) => {  \n    \n    let breakDown = schema.filter(s => s[\"field\"] === fact.groupby[0])[0];\n    let supportedChartTypes;\n    let rules = isEdit ? fact2visAllRules : fact2visRules;//fact2visRules是推荐规则 \n    supportedChartTypes = rules.filter(x => x.fact === fact.type);\n    if (breakDown) {\n        supportedChartTypes = supportedChartTypes.filter(x => x.breakdownType.indexOf(breakDown.type) !== -1);\n        if (breakDown.type === FieldType.CATEGORICAL && breakDown.values) {\n            supportedChartTypes = supportedChartTypes.filter(x => {\n                if (!x.rang) {\n                    return true\n                } else {\n                    return breakDown.values.length >= x.rang[0] && breakDown.values.length <= x.rang[1]\n                }\n            });\n        }\n        /*******important**** 找不到推荐的图表，就用可以支持的图表显示*****/\n        if (supportedChartTypes.length === 0 && !isEdit) {\n            supportedChartTypes = getSupportedChartTypes(fact, schema, true)\n        }\n        /*******important the end *********/\n    }\n    //console.log(\"supportedChartTypes\", supportedChartTypes)\n    return supportedChartTypes;\n};\nexport default getSupportedChartTypes;","import React, { Component } from 'react';\nimport { AutoVis } from \"calliope-chart\";\n\nexport default class Chart extends Component {\n\n    componentDidMount() {\n        const { id } = this.props.spec.chart;\n        let spec = this.props.spec;\n        let container = id ? `#vischart_${id}` : \"#demo-chart\";\n        this.autovis = new AutoVis();\n        this.autovis = new AutoVis();\n        this.autovis.container(container);\n        this.autovis.load(spec);\n        this.autovis.generate();\n    }\n\n    componentDidUpdate(preProps) {\n        const { id } = this.props.spec.chart;\n        let spec = this.props.spec;\n        let container = id ? `#vischart_${id}` : \"#demo-chart\";\n        this.autovis = new AutoVis();\n        this.autovis = new AutoVis();\n        this.autovis.container(container);\n        this.autovis.load(spec);\n        this.autovis.generate();\n    }\n\n    render() {\n        let height = 640, width = 640;\n        if (this.props.spec.chart) {\n            let { size, type } = this.props.spec.chart;\n            if (type === 'vegalite') {\n                let vega_w = this.props.spec.chart.width,\n                    vega_h = this.props.spec.chart.height;\n                height = vega_h * 0.5\n                width = vega_w * 0.5\n            } else {\n                switch (size) {\n                    case 'wide':\n                        height = 220;\n                        width = 560;\n                        break;\n                    case 'middle':\n                        height = 200;\n                        width = 360;\n                        break;\n                    case 'small':\n                        height = 150;\n                        width = 235;\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n\n        }\n        //console.log(\"render\", width, height);\n        const { id } = this.props.spec.chart ? this.props.spec.chart : { id: \"demo-chart\" };\n        return (\n            // <div id='frame'\n            //     style={{\n            //         // marginLeft: 60,\n            //         // marginTop: 60,\n            //         height: height,\n            //         width: width,\n            //         borderStyle: 'solid',\n            //         borderWidth: 1,\n            //         borderColor: 'red'\n            //     }}\n            // >\n            //     <div id={id ? `vischart_${id}` : 'demo-chart'} style={{ height: height, width: width }} />\n            // </div>\n            <div id={id ? `vischart_${id}` : 'demo-chart'} style={{ height: \"640\", width: \"640\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }} />\n        )\n    }\n}\n","import React from 'react';\nimport ChartType from '@/constant/ChartType';\nimport getSupportedChartTypes from './getSupportedChartTypes';\nimport Chart from './Chart';\nimport { isValid, customizeFact } from './helper';\nimport _ from 'lodash';\n\nexport const facts2charts = (facts, shema, chartDiversity = 0) => {\n    for (let i = 0; i < facts.length; i++) {\n        let supportedChartTypes = getSupportedChartTypes(shema, facts[i]);\n        let choiceCount = parseInt((supportedChartTypes.length + 1) * chartDiversity);\n        let choicedChartTypes = supportedChartTypes.slice(0, choiceCount + 1);\n        facts[i].chart = choicedChartTypes[Math.floor(Math.random() * choicedChartTypes.length)].chart;\n    }\n    return facts\n}\nexport const getChoice = (length) => {\n    let choice = Math.round(Math.random() * (length - 1));\n    return choice;\n}\n\n\nexport const getFactChartType = (shema, fact, choice = 0) => {\n    let supportedChartTypes = getSupportedChartTypes(fact, shema);\n    if (supportedChartTypes.length === 0) return null;\n    return supportedChartTypes[getChoice(supportedChartTypes.length)].chart;\n}\n\nconst getvischartype = (chart) => {\n    let chartType = chart;\n    switch (chart) {\n        case ChartType.AREA_CHART:\n            chartType = \"areachart\";\n            break;\n        case ChartType.BUBBLE_CHART:\n            chartType = \"bubblechart\";\n            break;\n        case ChartType.COLOR_FILLING_MAP:\n            chartType = \"filledmap\";\n            break;\n        case ChartType.BUBBLE_MAP:\n            chartType = \"bubblemap\";\n            break;\n        case ChartType.HALF_RING_CHART:\n            chartType = \"donutchart\";\n            break;\n        case ChartType.HORIZONTAL_BAR_CHART:\n            chartType = \"horizentalbarchart\";\n            break;\n\n        case ChartType.VERTICAL_BAR_CHART:\n        case ChartType.STACKED_BAR_CHART:\n        case ChartType.VERTICAL_DIFFERENCE_BAR_CHART:\n        case ChartType.ISOTYPE_BAR_CHART:\n        case ChartType.VERTICAL_DIFFERENCE_ARROW_CHART:\n            chartType = \"verticalbarchart\"\n            break;\n        case ChartType.LINE_CHART:\n        case ChartType.STACKED_LINE_CHART:\n            chartType = \"linechart\";\n            break;\n        case ChartType.PROPORTION_ISOTYPE_CHART:\n        case ChartType.PIE_CHART:\n            chartType = \"piechart\";\n            break;\n        case ChartType.PROGRESS_BAR_CHART:\n            chartType = \"progresschart\";\n            break;\n        case ChartType.RING_CHART:\n            chartType = \"donutchart\";\n            break;\n        case ChartType.SCATTER_PLOT:\n            chartType = \"scatterplot\";\n            break;\n        case ChartType.TEXT_CHART:\n            chartType = \"textchart\";\n            break;\n        case ChartType.TREE_MAP:\n            chartType = \"treemap\";\n            break;\n        default:\n            break;\n    }\n    return chartType;\n}\n\nexport const fact2chart = function (specData, containerId, fact, data, size, vegalite) {\n    if (!fact.chart || fact.chart === \"\") {\n        fact.chart = getFactChartType(specData.schema, fact);//针对生成页面的chart\n    }\n\n    let chart = fact.chart;\n\n    if (chart === ChartType.ISOTYPE_BAR_CHART) {\n        fact.chart = ChartType.VERTICAL_BAR_CHART;\n    }\n    fact = customizeFact(fact);//important\n\n    if (!fact.chart || !isValid(fact)) {\n        console.log(\"no valid\", fact)\n        return null;\n    }\n\n    let specChart = {\n        id: containerId,\n        size: size,\n        type: getvischartype(chart),\n        style: \"business\",\n        duration: 0,\n        showSuggestion: false,//显示图表Unsupported,\n        ...vegalite //add vegalite spec\n    }\n\n    specData = {\n        ...specData,\n        values: data,\n    }\n    let specNew = {\n        data: specData,\n        fact: fact,\n        chart: specChart,\n    }\n    //console.log(\"specNew\", fact.chart, specNew);\n\n    return <Chart spec={_.cloneDeep(specNew)} />\n}\n","const templates = [\n    {\n        'id': 0,\n        'template': 'The Pearson correlation between the {{measure1}} and the {{measure2}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the Pearson correlation coefficient between the {{measure1}} and the {{measure2}} is {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, the {{measure1}} is correlated with the {{measure2}} and the Person correlation is {{parameter}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, there are {{parameter}} {{groupby}}s: {{no.1}}, {{no.2}}, {{no.3}}, and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the data are grouped into {{parameter}} {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}, among which {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The data contain {{parameter}} {{groupby}}s when {{subspace}}, which are {{no.1}}, {{no.2}}, {{no.3}}. {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The difference between {{focus1}} and {{focus2}} regarding to their {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{focus1}} and {{focus2}}\\'s difference on the {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'A comparison between {{focus1}} and {{focus2}} on their {{agg}} {{measure}} shows the difference is {{parameter}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'Given {{subspace}}, the {{focus}} value of the {{agg}} {{measure}} is {{parameter[1]}} when the {{groupby}} is {{parameter[0]}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{focus}} {{agg}} {{measure}} value over {{groupby}}s is {{parameter[1]}} when the {{groupby}} is {{parameter[0]}} given {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'Among all {{groupby}}s, {{parameter[0]}} has the {{focus}} {{agg}} {{measure}} value, which is {{parameter[1]}}, when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{agg}} {{measure}} of {{focus}} is an outlier when compared with that of other {{groupby}}s when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{focus}}\\'s {{agg}} {{measure}} is anomalously different from other {{groupby}}s\\' {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'Among various {{groupby}}s, the {{agg}} {{measure}} of {{focus}} is an anomaly when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{focus}} accounts for {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{focus}} makes up {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{focus}}\\'s {{agg}} {{measure}} takes {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'In the {{agg}} {{measure}} ranking of different {{groupby}}s,  the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}}, when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The ranking list of the {{groupby}}s ordered by their {{agg}} {{measure}} when {{subspace}}, in which the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When sorting the {{groupby}}s in order based on their {{agg}} {{measure}}, the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The trend of the {{agg}} {{measure}} over {{groupby}}s is {{parameter}} when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{agg}} {{measure}} over {{groupby}}s shows a/an {{parameter}} trend when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{agg}} {{measure}} over {{groupby}}s is {{parameter}} when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the value of the {{agg}} {{measure}} is {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{agg}} {{measure}} value is {{parameter}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","import FactType from '../../constant/FactType';\nimport association from './association';\nimport categorization from './categorization';\nimport difference from './difference';\nimport distribution from './distribution';\nimport extreme from './extreme';\nimport outlier from './outlier';\nimport proportion from './proportion';\nimport rank from './rank';\nimport trend from './trend';\nimport value from './value';\n\nconst templateCount = 3;\n\nconst pickFactTemplate = function(type, id=-1) {\n    // pick randomly when id == -1\n    let templates = []\n    switch (type) {\n        case FactType.ASSOCIATION:\n            templates = association;\n            break;\n\n        case FactType.CATEGORIZATION:\n            templates = categorization;\n            break;\n\n        case FactType.DIFFERENCE:\n            templates = difference;\n            break;\n\n        case FactType.DISTRIBUTION:\n            templates = distribution;\n            break;\n\n        case FactType.EXTREME:\n            templates = extreme;\n            break;\n\n        case FactType.OUTLIER:\n            templates = outlier;\n            break;\n\n        case FactType.PROPORTION:\n            templates = proportion;\n            break;\n\n        case FactType.RANK:\n            templates = rank;\n            break;\n\n        case FactType.TREND:\n            templates = trend;\n            break;\n\n        case FactType.VALUE:\n            templates = value;\n            break;\n    \n        default:\n            break;\n    }\n    if (id === -1) {\n        id = Math.floor(Math.random() * 10)%templateCount\n    }\n    let sentence = '';\n    try {\n        sentence = templates[id].template;\n    }\n    catch(error) {\n        console.error(error);\n        console.log('wrong id:'+id)\n    }\n    return sentence;\n}\n\nexport default pickFactTemplate;","export default {\n    SUM: 'sum',\n    MAX: 'max',\n    MIN: 'min',\n    AVG: 'avg',\n    COUNT: 'count',\n    // NONE: 'none'\n}","import pickFactTemplate from './fact-templates';\nimport pickRelationTemplate from './relation-templates';\nimport FactType from '@/constant/FactType'\nimport { isValid } from '@/tool/fact2vis/helper'\nimport AggregationType from '@/constant/AggregationType'\nimport _ from 'lodash'\n\nconst plur = require('plur');\nconst convertAggregation = function (aggType) {\n    switch (aggType) {\n        case AggregationType.SUM:\n            return 'total'\n\n        case AggregationType.MAX:\n            return 'maximum'\n\n        case AggregationType.MIN:\n            return 'minimum'\n\n        case AggregationType.AVG:\n            return 'average'\n\n        case AggregationType.COUNT:\n            return 'count'\n\n        case AggregationType.NONE:\n            return ''\n\n        default:\n            return ''\n    }\n}\n\nconst convertMeasure = function (measure) {\n    if (measure.aggregate === \"count\") return \"\"\n    else return measure.field.toLowerCase();\n}\n\nconst convertGroupby = function (groupby, param = 'single') {\n    let gb = groupby[0]\n\n    if (param === 'single')\n        return gb.toLowerCase()\n    else if (param === 'plural') {\n        if (gb.indexOf(' of ') !== -1) {\n            let gbWords = gb.split(\" \")\n            let gbWordIndex = gbWords.indexOf(\"of\") - 1\n            if (gbWordIndex > -1) {\n                let plurWord = plur(gbWords[gbWordIndex], 2)\n                return gb.replace(gbWords[gbWordIndex], plurWord)\n            }\n        } else\n            return plur(gb, 2).toLowerCase()\n    }\n}\n\n// for value/difference/categorization\nexport const formatNum = function (num) {\n    num = (num || 0).toString();\n    let number = 0,\n        floatNum = '',\n        intNum = '';\n    if (num.indexOf('.') > 0) {\n        num = num.toFixed(2)\n        number = num.indexOf('.');\n        floatNum = num.substr(number);\n        intNum = num.substring(0, number);\n    } else {\n        intNum = num;\n    }\n    let result = [],\n        counter = 0;\n    intNum = intNum.split('');\n\n    for (let i = intNum.length - 1; i >= 0; i--) {\n        counter++;\n        result.unshift(intNum[i]);\n        if (!(counter % 3) && i !== 0) { result.unshift(','); }\n    }\n    return result.join('') + floatNum || '';\n}\n\nconst genFactSubspace = function (fact, template) {\n    let subspace = '';\n    if (fact.subspace.length) {\n        fact.subspace.map((key, i) => { return subspace += `${i === 0 ? ' ' : ' and '}the ${key.field} is ${key.value}` })\n        template = template.replace(\"{{subspace}}\", subspace);\n    } else {\n        template = template.replace(\", when {{subspace}}\", '');\n        template = template.replace(\" when {{subspace}}\", '');\n        template = template.replace(\" in case of {{subspace}}\", '');\n        template = template.replace(\" given {{subspace}}\", '');\n        template = template.replace(\"When {{subspace}}, \", '');\n        template = template.replace(\"Given {{subspace}}, \", '');\n        template = template.replace(\"In case of {{subspace}}, \", '');\n    }\n    return template\n}\n\nexport const genFactSentence = function (_fact) {\n    if (!isValid(_fact))\n        return ''\n    let fact = _.cloneDeep(_fact)\n    let template = pickFactTemplate(fact.type);\n    let aggregate = AggregationType.NONE;\n    if (fact.measure.length > 0) {\n        aggregate = fact.measure[0].aggregate;\n    }\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            template = template.replace(\"{{measure1}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure2}}\", convertMeasure(fact.measure[1]));\n            template = template.replace(\"{{agg1}}\", convertAggregation(fact.measure[0].aggregate));\n            template = template.replace(\"{{agg2}}\", convertAggregation(fact.measure[1].aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter !== '') {\n                template = template.replace(\"{{parameter}}\", formatNum(Number.parseFloat(fact.parameter).toFixed(3)));\n            }\n            break;\n\n        case FactType.CATEGORIZATION:\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter.length) {\n                template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                let parameterList = ''\n                fact.parameter.forEach((d, i) => {\n                    parameterList += `${i === 0 ? '' : ','} ${d}`\n                });\n                template = template.replace(\"{{no.1}}, {{no.2}}, {{no.3}}\", parameterList);\n                // template = template.replace(\"{{no.1}}\", fact.parameter[0]);\n                // template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                // if (fact.parameter.length === 3) {\n                //     template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                // } else if (fact.parameter.length > 3) {\n                //     template = template.replace(\"{{no.3}}\", fact.parameter[2] + ', etc');\n                // } else if (fact.parameter.length === 2) {\n                //     template = template.replace(\", {{no.3}}\", '');\n                // }\n            }\n            if (fact.focus.length) {\n                if (template.indexOf(\". {{focus}}\") > -1) {\n                    let focusValue = fact.focus[0].value.slice(0, 1).toUpperCase() + fact.focus[0].value.slice(1)\n                    template = template.replace(\"{{focus}}\", focusValue);\n                } else {\n                    template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                }\n            } else {\n                template = template.replace(\", and {{focus}} needs to pay attention\", \"\");\n                template = template.replace(\", among which {{focus}} needs to pay attention\", \"\");\n                template = template.replace(\". {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.DIFFERENCE:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            if (fact.focus.length >= 2) {\n                template = template.replace(\"{{focus1}}\", fact.focus[0].value);\n                template = template.replace(\"{{focus2}}\", fact.focus[1].value);\n            }\n            template = genFactSubspace(fact, template)\n            if (fact.parameter !== '') template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n            break;\n\n        case FactType.DISTRIBUTION:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) {\n                template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            } else {\n                template = template.replace(\" and {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.EXTREME:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) {\n                if (fact.focus[0].extremeFocus !== undefined && fact.focus[0].extremeValue !== undefined) {\n                    if (fact.focus[0].extremeFocus === 'min') { template = template.replace(\"{{focus}}\", 'minimum'); }\n                    else { template = template.replace(\"{{focus}}\", 'maximum'); }\n                    template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                    template = template.replace(\"{{parameter[1]}}\", formatNum(Math.round(fact.parameter[1] * 100) / 100));\n\n                } else if (fact.parameter.length) {\n                    if (fact.parameter[0] === 'min') { template = template.replace(\"{{focus}}\", 'minimum'); }\n                    else { template = template.replace(\"{{focus}}\", 'maximum'); }\n                    template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                    template = template.replace(\"{{parameter[1]}}\", formatNum(fact.parameter[1]));\n                }\n            }\n            break;\n\n        case FactType.OUTLIER:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            break;\n\n        case FactType.PROPORTION:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            if (fact.parameter) template = template.replace(\"{{parameter}}\", fact.parameter);\n            break;\n\n        case FactType.RANK:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter.length >= 3) {\n                template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                template = template.replace(\"{{no.1}}\", fact.parameter[0]);\n                template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                if (fact.parameter.length === 3) {\n                    template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                } else if (fact.parameter.length > 3) {\n                    template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                } else if (fact.parameter.length === 2) {\n                    template = template.replace(\", {{no.3}}\", '');\n                }\n            } else {\n                template = ''\n            }\n            break;\n\n        case FactType.TREND:\n        \n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter) {\n                template = template.replace(\"{{parameter}}\", fact.parameter);\n                if (fact.parameter === 'increasing') {\n                    template = template.replace(\"a/an\", 'an');\n                } else {\n                    template = template.replace(\"a/an\", 'a');\n                }\n            }\n            if (fact.focus.length) {\n                template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            } else {\n                template = template.replace(\" and the value of {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.VALUE:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            if (fact.parameter !== '') template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n            break;\n\n        default:\n            break;\n    }\n    template = template.slice(0, 1).toUpperCase() + template.slice(1)\n    return template;\n}\n\n\nexport const genStoryText = function (facts, relations) {\n    let template;\n    let storyText = '';\n    let pairLength = parseInt(facts.length / 2)\n    //console.log(\"relations\", facts, relations)\n    for (let i = 0; i < pairLength; i++) {\n        if (facts[i]) {\n            template = pickRelationTemplate(relations[i * 2 + 1])\n            // template = template.replace(\"{{Sentence A}}\", facts[i * 2].script());\n            // template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].script());\n            template = template.replace(\"{{Sentence A}}\", facts[i * 2].generatedScript);\n            template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].generatedScript);\n            storyText += template + ' '\n        }\n    }\n    if (facts.length % 2) {\n        //storyText += facts[facts.length - 1].script()\n        storyText += facts[facts.length - 1].generatedScript\n    }\n    //console.log(\"storyText\", storyText)\n    return storyText\n}\n\nexport const genSubtitle = function (fact) {\n    let title;\n    if (!isValid(fact))\n        return ''\n\n    title = 'The ' + fact.type\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            title += ' of ' + fact.measure[0].field + ' and ' + fact.measure[1].field\n            break;\n        case FactType.CATEGORIZATION:\n            // title += ' of ' + fact.groupby[0]\n            title = fact.groupby[0]\n            break;\n\n        case FactType.DIFFERENCE:\n            title += ' between ' + fact.focus[0].value + ' and ' + fact.focus[1].value\n            break;\n        case FactType.DISTRIBUTION:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.EXTREME:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.OUTLIER:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.PROPORTION:\n            title += ' of ' + fact.focus[0].value\n            break;\n        case FactType.RANK:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.TREND:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.VALUE:\n            title = 'The ' + convertAggregation(fact.measure[0].aggregate) + ' ' + fact.measure[0].field\n            break;\n        default:\n            break;\n    }\n    if (fact.subspace.length) {\n        let subspace = '';\n        fact.subspace.map((key, i) => { return subspace += ` in ${key.value}` })\n        title += subspace;\n    }\n\n    return title;\n}\n\nexport const genTitle = function (fileName) {\n    let title;\n    switch (fileName) {\n        case 'CarSales.csv':\n            title = 'Car Sales'\n            break;\n\n        case 'nCoV2020.csv':\n            title = 'COVID-19'\n            break;\n\n        case 'deadstartup.csv':\n            title = 'Startup Failures'\n            break;\n\n        default:\n            if (fileName.indexOf('.') > 0) {\n                let number = fileName.indexOf('.');\n                // let csv = fileName.substr(number);\n                title = fileName.substring(0, number);\n            } else {\n                title = fileName\n            }\n            break;\n    }\n    return title\n}","import FactType from '@/constant/FactType'\nimport { isValid } from './fact2vis/helper'\nimport { formatNum } from '../sentencer/index'\n\nexport const genTitle = function (fileName) {\n    let title;\n    switch (fileName) {\n        case 'CarSales.csv':\n            title = 'Car Sales'\n            break;\n\n        case 'nCoV2020.csv':\n            title = 'COVID-19'\n            break;\n\n        case 'deadstartup.csv':\n            title = 'Startup Failures'\n            break;\n\n        default:\n            if (fileName.indexOf('.') > 0) {\n                let number = fileName.indexOf('.');\n                // let csv = fileName.substr(number);\n                title = fileName.substring(0, number);\n            } else {\n                title = fileName\n            }\n            break;\n    }\n    return title\n}\nconst isEndWithS = (letter) => {\n    if (letter === 's') return true\n    return false\n}\n\nconst hightlightItem = function (script, parameter) {\n    if (script.indexOf(parameter) === -1) return script\n    let srtEndIndex = script.indexOf(parameter) + parameter.length;\n\n    if (isEndWithS(script.substring(srtEndIndex, srtEndIndex + 1))) {\n        srtEndIndex = srtEndIndex + 1 //include s \n    }\n    let srtStartIndex = script.indexOf(parameter);\n    let newScript = script.substring(0, srtEndIndex) + \"</i></span>\" + script.substring(srtEndIndex);\n    newScript = newScript.substring(0, srtStartIndex) + '<span class=\"hightlight\"><i>'+ newScript.substring(srtStartIndex);\n    return newScript\n}\n\nexport const hightlight = function (fact) {\n    if (!isValid(fact))\n        return ''\n    // console.log(\"fact.parameter\", fact);\n    // if (!fact.parameter)\n    //     return fact.generatedScript\n\n    let script = fact.generatedScript\n    // script = hightlightItem(fact.generatedScript, fact.type)\n    // if (fact.breakdown && fact.breakdown[0]) {\n    //     script = hightlightItem(script, fact.breakdown[0].field)\n    // }\n    // if (fact.measure && fact.measure[0]) {\n    //     script = hightlightItem(script, fact.measure[0].field)\n    // }\n\n    // if (fact.subspace && fact.subspace[0]) {\n    //     script = hightlightItem(script, fact.subspace[0].field)\n    // }\n\n    let parameter\n    let newScript\n\n    switch (fact.type) {\n        // TODO: NO template parameter\n        case FactType.ASSOCIATION:\n            newScript = script\n            break;\n\n        case FactType.RANK:\n            let parameter1 = fact.parameter[0];\n            let parameter2 = fact.parameter[1];\n            let parameter3 = fact.parameter[2];\n            newScript = hightlightItem(script, parameter1)\n            if (parameter2) newScript = hightlightItem(newScript, parameter2)\n            if (parameter2 && parameter3) newScript = hightlightItem(newScript, parameter3)\n            break;\n\n        case FactType.VALUE:\n            newScript = hightlightItem(script, fact.measure[0].field.toLowerCase())\n            newScript = hightlightItem(newScript, formatNum(fact.parameter))\n            break;\n\n        case FactType.DIFFERENCE:\n            newScript = hightlightItem(script, fact.measure[0].field.toLowerCase())\n            newScript = hightlightItem(newScript, formatNum(fact.parameter))\n            break;\n        // case FactType.DIFFERENCE:\n        //     parameter = formatNum(fact.parameter);\n        //     newScript = hightlightItem(script, parameter)\n        //  \n        case FactType.RANK:\n            newScript = hightlightItem(script, 'decreasing')\n            break;\n\n        // TODO: NO template parameter\n        case FactType.OUTLIER:\n            newScript = script\n            break;\n        case FactType.EXTREME:\n        case FactType.OUTLIER:\n            newScript = hightlightItem(script, 'maximum')\n            if (fact.parameter[1]) newScript = hightlightItem(newScript, formatNum(fact.parameter[1]))\n            break;\n\n        case FactType.DISTRIBUTION:\n            newScript = script\n            break;\n\n        case FactType.CATEGORIZATION:\n            parameter = fact.parameter.length.toString();\n            newScript = hightlightItem(script, parameter)\n            break;\n\n        default:\n            parameter = fact.parameter;\n            newScript = hightlightItem(script, parameter)\n            break;\n    }\n    return newScript\n}\n\nexport const genSubtitle = function (fact) {\n    let title;\n    if (!isValid(fact))\n        return ''\n\n    title = 'The ' + fact.type\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            title += ' of ' + fact.measure[0].field + ' and ' + fact.measure[1].field\n            break;\n        case FactType.CATEGORIZATION:\n            title += ' of ' + fact.groupby[0]\n            break;\n\n        case FactType.DIFFERENCE:\n            title += ' between ' + fact.focus[0].value + ' and ' + fact.focus[1].value\n            break;\n        case FactType.DISTRIBUTION:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.EXTREME:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.OUTLIER:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.PROPORTION:\n            title += ' of ' + fact.focus[0].value\n            break;\n        case FactType.RANK:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.TREND:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.VALUE:\n            title += ' of ' + fact.focus[0].value\n            break;\n        default:\n            break;\n    }\n    if (fact.subspace.length) {\n        let subspace = '';\n        fact.subspace.map((key, i) => { return subspace += ` in ${key.value}` })\n        title += subspace;\n    }\n\n    return title;\n}","import React, { Component } from 'react'\nimport { fact2chart } from '@/tool/fact2vis/fact2vis'\nimport { genFactSentence } from '@/sentencer/index'\nimport { hightlight } from '@/tool/helper'\nimport * as d3 from 'd3'\nimport _ from 'lodash';\nimport './AnsweredFacts.less'\n\n\nlet testLayout = [1, 2, 3, 4, 5]\nconst defaultNum = testLayout[4]\n\nconst visSmall = {\n    // width: '235',\n    width: '200',\n    height: '150'\n}\n\nlet visNodes = new Map()\nlet captionNodes = new Map()\nconst maxNum = 5;\nlet renderLayout = null\nlet debounceTimer = null\nexport default class AnsweredFacts extends Component {\n\n    layoutNode = React.createRef()\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            renderNum: defaultNum,\n            count: maxNum,\n            clientWidth: 0,\n            clientHeight: 0,\n            facts: this.props.facts\n        }\n        this.visBox = React.createRef()\n        this.TreemapSize = new Array(this.props.columnNum).fill({\n            preWidth: 0,\n            preHeight: 0\n        })\n    }\n    componentDidMount() {\n        this.updateTreeMapLayout()\n        this.onResize()\n    }\n\n    componentDidUpdate() {\n        this.updateTreeMapLayout()\n    }\n\n    onResize = () => {\n        window.addEventListener('resize', () => {\n            if (debounceTimer) clearTimeout(debounceTimer)\n            setTimeout(() => {\n                this.updateTreeMapLayout()\n            }, 300)\n        })\n    }\n\n    updateTreeMapLayout = () => {\n        //updateTreeMapLayout    \n        if (this.layoutNode.current) {\n            const { clientWidth, clientHeight } = this.layoutNode.current\n            const { QAID } = this.props\n            let { preWidth, preHeight } = this.TreemapSize[QAID]\n\n            if ((clientWidth !== 0 && preWidth !== clientWidth) || (preHeight !== clientHeight && clientHeight !== 0)) {\n                this.forceUpdate()\n                this.updateTreemapSize(QAID, clientWidth, clientHeight) //update cache\n            }\n        }\n        this.batchUpdateVis()\n        this.svgTransformer()\n    }\n\n    updateTreemapSize = (id, newWidth, newHeight) => {\n        this.TreemapSize[id].preWidth = newWidth\n        this.TreemapSize[id].preHeight = newHeight\n    }\n    batchUpdateVis = () => {\n        let { facts } = this.props\n        facts.map((fact, index) => {\n            if (!visNodes.get(fact.id) || !captionNodes.get(fact.id)) return fact\n\n            let visNode = visNodes.get(fact.id).current\n            let captionNode = captionNodes.get(fact.id).current\n            let visWidth = 0, visHeight = 0\n            let captionH = 0;\n\n            if (captionNode) {\n                captionH = captionNode.clientHeight\n            }\n            if (renderLayout && renderLayout[index]) {\n                let { x0, x1, y0, y1 } = renderLayout[index]\n                visWidth = x1 - x0\n                visHeight = y1 - y0 - captionH\n            }\n            if (visWidth === 0 || visHeight === 0) return fact\n\n            if (visNode) {\n                this.svgTransformer(visNode, visWidth, visHeight)\n            }\n            this.updateAVis(fact, visWidth, visHeight, captionH)\n            return fact\n        })\n    }\n\n    svgTransformer = (visNode, visWidth, visHeight) => {\n        if (visNode) {\n            // let scaleX = visWidth / 640,\n            //     scaleY = visHeight / 640;\n            let scale = Math.min(visWidth, visHeight) / 640\n            let marginRotio = 0.9\n            // console.log(_node, scaleX, scaleY);\n            let visChart = visNode.children && visNode.children[0]\n            //visChart && visChart.setAttribute(\"style\", `transform:scale(${scaleX * marginRotio},${scaleY * marginRotio})`)\n            if (visChart) {\n                visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio})`)\n                visChart.onmouseenter = () => {\n                    const { isEdit } = this.props\n                    visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio});border:${isEdit ? '1px dashed grey' : ''}`)\n                }\n                visChart.onmouseleave = () => {\n                    visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio})`)\n                }\n            }\n        }\n    }\n\n    _isValidate = (visWidth, visHeight) => {\n        if ((visWidth && visWidth < visSmall.width) || (visHeight && visHeight < visSmall.height)) {\n            return false\n        }\n        return true\n    }\n    _renderedFacts = (facts) => {\n        const { renderNum, count } = this.state\n        return facts.slice(0, renderNum >= count ? count : renderNum)\n    }\n\n    updateAVis = (cachedFact, visWidth, visHeight, visCaptionH) => {\n        let { width, height, captionH } = cachedFact //get by cache\n        //console.log(\"updateAVis\", cachedFact.id, width, visWidth, height, visHeight);\n\n        if (width !== visWidth || height !== visHeight || captionH !== visCaptionH) {\n            const { facts } = this.props\n            let theFact = facts[facts.findIndex(d => d.id === cachedFact.id)]\n            theFact.width = visWidth\n            theFact.height = visHeight\n            theFact.captionH = visCaptionH\n            //console.log(cachedFact.id, visWidth, visHeight, visCaptionH);\n\n            this.setState({\n                facts\n            })\n        }\n    }\n\n    weightAdapter = (data, columnNum) => {\n        let innerNum = data.children.length\n        let weightTable = []\n        switch (columnNum) {\n            case 1:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [3, 1.2, 0.8]\n                }\n                break;\n            case 2:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [4, 3]\n                } else if (innerNum === 3) {\n                    weightTable = [6, 3, 2]\n                }\n                break;\n            case 3:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [3, 1.2, 0.8]\n                }\n                break;\n            case 4:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [4, 3, 2]\n                }\n                break;\n            default:\n                break;\n        }\n        return {\n            \"children\": data.children.map((fact, index) => {\n                return {\n                    ...fact,\n                    significance: weightTable[index]\n                }\n            })\n        }\n    }\n\n    change = (event) => {\n        this.setState({\n            renderNum: event.target.value\n        })\n    }\n\n    getTreemap = (width, height, data) => {\n        let treemap = d3.treemap()\n            .tile(d3.treemapResquarify.ratio(1))\n            .size([width, height])\n            .padding(3)\n            .round(true)\n            (d3.hierarchy(data)\n                .sum(d => d.significance)\n            )\n        return treemap\n    }\n\n    sort = (data) => {\n        return data.sort((a, b) => b.significance - a.significance)\n    }\n\n    getSize = () => {\n        return \"large\"\n    }\n\n    setRef = (id) => {\n        visNodes.set(id, React.createRef())\n        return visNodes.get(id)\n    }\n    setCaptionRef = (id) => {\n        captionNodes.set(id, React.createRef())\n        return captionNodes.get(id)\n    }\n    endEdit = (visId, fact, index) => {\n        let captionNode = captionNodes.get(visId).current\n        const { cachedQA } = this.props\n        let QAId = parseInt(fact.id.split('QA')[0])\n        cachedQA[QAId].facts[index].script = captionNode.innerHTML\n        this.props.saveCachedDecomposedQA(cachedQA)\n    }\n\n    deleteCard = (fact, index) => {\n        let { cachedQA } = this.props\n        let newCachedQA = _.cloneDeep(cachedQA)\n        let parentId = parseInt(fact.id.split('QA')[0])\n        newCachedQA[parentId] && newCachedQA[parentId].facts.splice(index, 1)\n        if (newCachedQA[parentId] && newCachedQA[parentId].facts.length === 0) {\n            newCachedQA.splice(parentId, 1)\n        }\n        this.props.saveCachedDecomposedQA(newCachedQA)\n    }\n\n    render() {\n\n        let { facts, data, schema, columnNum, isEdit, QAID } = this.props\n        let { preWidth, preHeight } = this.TreemapSize[QAID] ? this.TreemapSize[QAID] : { preWidth: 0, preHeight: 0 }\n\n        let renderData = {\n            children: this._renderedFacts(this.sort(facts))\n        }\n\n        renderLayout = this.getTreemap(preWidth, preHeight, this.weightAdapter(renderData, columnNum)).leaves()\n\n        const LayoutView = ({ index, fact, x, y, width, height }) => {\n\n            let vegalite = {\n                // type: \"vegalite\",\n                // height: fact.height - 100,\n                // width: fact.width - 100,\n                height: 640,\n                width: 640,\n            }\n\n            let script = fact.script ? fact.script : genFactSentence(fact) || \" \"\n            fact.generatedScript = script\n\n            return (\n                <div style={{ position: 'absolute', left: x, top: y, width: width, height: height }}>\n                    <div className='chart-card'>\n                        {\n                            isEdit && <div className='delete' onClick={() => this.deleteCard(fact, index)}></div>\n                        }\n                        <div className='wrapper'>\n                            <div className='vis-box' style={{ height: `calc(100% - ${fact.captionH}px)` }}>\n                                <div className='bound-box' id={fact.id} ref={this.setRef(fact.id)}>\n                                    {\n                                        fact2chart({ schema }, fact.id, fact, data, this.getSize(), { ...vegalite })\n                                    }\n                                </div>\n                            </div>\n                            <div className='caption' contentEditable={isEdit} suppressContentEditableWarning ref={this.setCaptionRef(fact.id, index)} onBlur={() => this.endEdit(fact.id, fact, index)}\n                                //title={script}\n                                dangerouslySetInnerHTML={{ __html: hightlight(fact) }}\n                            ></div>\n                        </div>\n                    </div>\n                </div >)\n        }\n\n\n        return (\n            <div className='inner-auto-layout' ref={this.layoutNode} >\n                {\n                    renderLayout && renderLayout.map((layout, key) => {\n                        return <LayoutView\n                            key={key}\n                            index={key}\n                            fact={layout.data}\n                            x={layout.x0}\n                            y={layout.y0}\n                            width={layout.x1 - layout.x0}\n                            height={layout.y1 - layout.y0}\n                        />\n                    })\n                }\n            </div >\n        )\n    }\n}","import React, { PureComponent } from 'react'\nimport './ErrorView.less'\n\nexport default class ErrorView extends PureComponent {\n\n    render() {\n        const { initDone, intl } = this.props\n        return (\n            <div className='ErrorView'>\n                <div />\n                <p>{initDone && intl.get('empty')}</p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport AnsweredFacts from '../Layout/ChartCard/AnsweredFacts'\nimport ErrorView from '@/components/ErrorView/ErrorView'\nimport uuidv4 from 'uuid/v4';\nimport _ from 'lodash'\nimport './layout.less'\n\n// const defaultNum = 1\n// const defaultSubNum = 5\n\nlet subTitleNodes = new Map()\n\nexport default class LayoutView extends Component {\n    titleRef = React.createRef();\n    // state = {\n    //     num: this.props.decomposedQA.length,\n    //     subNum: defaultSubNum\n    // }\n    // change = (event) => {\n    //     this.setState({\n    //         num: event.target.value\n    //     })\n    // }\n    // subchange = (event) => {\n    //     this.setState({\n    //         subNum: event.target.value\n    //     })\n    // }\n\n    setFactId = (facts, index) => {\n        let _facts = _.cloneDeep(facts).map(fact => {\n            return {\n                ...fact,\n                id: `${index}QA${uuidv4()}`\n            }\n        })\n        return _facts\n    }\n\n    fullscreen = () => {\n        let element = document.documentElement;\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {   // 兼容火狐\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {    // 兼容谷歌\n            element.webkitRequestFullscreen();\n        } else if (element.msRequestFullscreen) {   // 兼容IE\n            element.msRequestFullscreen();\n        }\n    }\n    //re-order the array so the \"cards\" read left-right\n    reorder = (arr, columns) => {\n        const cols = columns;\n        const out = [];\n        let col = 0;\n        while (col < cols) {\n            for (let i = 0; i < arr.length; i += cols) {\n                let _val = arr[i + col];\n                if (_val !== undefined)\n                    out.push(_val);\n            }\n            col++;\n        }\n        return out\n    }\n    endEdit = (index) => {\n        let _nodes = subTitleNodes.get(index).current\n        if (_nodes) {\n            let { cachedQA } = this.props\n            cachedQA[index].question = _nodes.innerHTML\n            this.props.saveCachedDecomposedQA(cachedQA)\n        }\n    }\n    setSubTitleRef = (index) => {\n        subTitleNodes.set(index, React.createRef())\n        return subTitleNodes.get(index)\n    }\n\n    endTitleEdit = () => {\n        let _nodes = this.titleRef.current\n        if (_nodes) {\n            let newtTitle = _nodes.innerHTML\n            if (newtTitle !== this.props.editedTitle) {\n                this.props.editTitle(newtTitle)\n            }\n        }\n    }\n    export = () => {\n        window.print()\n    }\n    getTitle = () => {\n        const { askedQuestion, editedTitle } = this.props\n        let titleValue = editedTitle ? editedTitle : askedQuestion\n        return titleValue.slice(0, 1).toUpperCase() + titleValue.slice(1)\n    }\n    render() {\n        const { initDone, intl, isEdit, decomposedQA, loading } = this.props\n        if (!decomposedQA) return null\n        // const { num, subNum } = this.state\n        // decomposedQA = decomposedQA.slice(0, num).map(QA => {\n        //     return {\n        //         ...QA,\n        //         facts: QA.facts.slice(0, subNum)\n        //     }\n        // })\n\n        const TitleView = () => {\n            return <div className='title'>\n                <h1 contentEditable={isEdit}\n                    title={this.getTitle()}\n                    suppressContentEditableWarning\n                    onBlur={() => this.endTitleEdit()}\n                    ref={this.titleRef}>{`${this.getTitle() || (initDone && intl.get(\"inputHint\"))}`}</h1>\n                <div className='fullscreen_icon' onClick={this.fullscreen}></div>\n                <div className='export_icon' onClick={this.export}></div>\n            </div>\n        }\n\n        const SubTitleView = ({ index, subQustion, isEdit }) => {\n            let newStr = subQustion.slice(0, 1).toUpperCase() + subQustion.slice(1)\n            return <div className='sub-title-box'>\n                <div className='right-box'>\n                    <div className={newStr === this.getTitle() ? 'right-top hightlight' : 'right-top default'}></div>\n                </div>\n                <div className='sub-title' style={{ borderColor: newStr === this.getTitle() ? '#F19C0F' : '#A1AEB9' }}>\n                    <div className={newStr === this.getTitle() ? 'index hightlight' : 'index default'}>{index + 1}</div>\n                    <h1 contentEditable={isEdit}\n                        suppressContentEditableWarning\n                        title={`${newStr}`}\n                        onBlur={() => this.endEdit(index)} ref={this.setSubTitleRef(index)}>{`${newStr}`}</h1>\n                </div>\n                {/* <div className='divider'></div> */}\n            </div >\n        }\n        // console.log(\"decomposedQA\", decomposedQA);\n        let columns = decomposedQA.length === 4 ? 2 : decomposedQA.length\n        return (\n            <div className='large-size-screen'>\n                <TitleView {...this.props} />\n                {/* <div className='test'>\n                    View\n                    <select onChange={this.change} defaultValue={defaultNum}>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                    </select>\n                </div>\n                <div className='sub_test'>\n                    subView\n                    <select onChange={this.subchange} defaultValue={defaultSubNum}>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                        <option value='5'>5</option>\n                    </select>\n                </div> */}\n                <div className='auto-layout' style={{ columnCount: columns }}>\n                    <div className='dec1'></div>\n                    <div className='dec2'></div>\n                    {\n                        decomposedQA.length > 0 ? this.reorder(decomposedQA, columns).map((QA, index) => {\n                            return (\n                                <div className='subView' key={QA.id} style={{ height: decomposedQA.length === 4 ? \"calc(50% - 15px)\" : \"100%\", width: \"100%\" }}>\n                                    <div className='d1'></div>\n                                    <div className='d2'></div>\n                                    {\n                                        decomposedQA.length > 1 && <SubTitleView index={QA.id} subQustion={QA.question} isEdit={isEdit} />\n                                    }\n                                    <AnsweredFacts QAID={index} facts={this.setFactId(QA.facts, index)} columnNum={decomposedQA.length} {...this.props} />\n                                </div>\n                            )\n                        })\n                            :\n                            !loading && <ErrorView initDone={initDone, intl} intl={intl} />\n                    }\n                </div>\n            </div >\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Spin } from 'antd';\nimport LayoutView from './Layout/layout'\nimport { getFactChartType } from '@/tool/fact2vis/fact2vis';\n// import BlankView from './blank'\n// import demoResponse from '../assets/json/demoResponse'\nimport * as api from '@/axios/api'\nimport './dashboard.less'\n\n\nexport default class Dashboard extends Component {\n\n    state = {\n        question: this.props.question,\n        decomposedQA: [],\n        loading: false,\n        isUpdateLayout: this.props.isUpdateLayout\n    }\n\n    componentDidMount() {\n        // this.setState({\n        //     decomposedQA: this.addParams(demoResponse.story),\n        // })\n        const { cachedQA, question } = this.props\n        if (cachedQA) {\n            this.setState({\n                decomposedQA: cachedQA\n            })\n        } else {\n            this.getData(question)\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.question !== this.state.question) {\n            this.setState({\n                question: nextProps.question\n            })\n            this.getData(nextProps.question)\n        } else {\n            const { cachedQA } = nextProps\n            if (!cachedQA) return null\n            this.setState({\n                decomposedQA: cachedQA\n            })\n        }\n    }\n\n    getData = async (question) => {\n        const { fileName } = this.props\n        let data = {\n            file_name: fileName,\n            question,\n            model: ''\n        }\n        this.setState({\n            loading: true\n        })\n        this.props.updateQuestion(question)\n        let response = await api.generate(data)\n        if (!response.data || response.data === 'talk-generator error') {\n            this.setState({\n                loading: false,\n                decomposedQA: []\n            })\n            return\n        }\n        let decomposedQA = this.addParams(response.data.story)\n        this.setState({\n            loading: false,\n            decomposedQA\n        })\n        this.props.saveCachedDecomposedQA(decomposedQA)\n    }\n\n    constructGroupBy = (breakdown) => {\n        return breakdown.map(d => d.field)\n    }\n    getFakeScript = (subQuestion, index) => {\n        let script = ''\n        //carsales\n        if (subQuestion === 'in which category has the highest sales and which the lowest ') {\n            script = 'in which category has the highest sales and which the lowest '\n        } else if (subQuestion === 'sales has an overall value of sales over year ') {\n            script = 'sales has an overall value of sales over year '\n        } else if (subQuestion === 'sales have an overall value of sales ') {\n            script = 'sales have an overall value of sales '\n        }\n\n        let caption;\n        if (subQuestion === 'Does any brand sell a lot but has a decreasing trend') {\n            caption = [\"caption1\", \"caption2\", \"caption3\"]\n            script = caption[index]\n        } else if (subQuestion === 'which brand has the highest sales and which brand has the lowest sales ') {\n            caption = [\"caption1\", \"caption2\", \"caption3\"]\n            script = caption[index]\n        } else if (subQuestion === 'which brand has an increasing trend of sales over brand ') {\n            caption = [\"caption1\", \"caption2\", \"caption3\"]\n            script = caption[index]\n        }\n        return script\n    }\n    getFakeFocus = (subQuestion, index, focus) => {\n        if (subQuestion === 'which brand has the highest sales and which brand has the lowest sales ') {\n            focus[0][\"value\"] = 'Ford'\n        }\n        if (subQuestion === 'which brand has the highest sales and which has the lowest ') {\n            focus[0][\"value\"] = 'Ford'\n        }\n        \n        if (subQuestion === 'in which category has the highest sales and which the lowest ') {\n            focus[0][\"value\"] = 'SUV'\n        }\n        return focus\n    }\n    addParams = (story) => {\n        return story.map((d, id) => {\n            return {\n                question: d.question,\n                id,\n                facts: d.facts.map(fact => {\n                    if (!fact.chart || fact.chart === \"\") {\n                        fact.groupby = this.constructGroupBy(fact.breakdown)\n                        fact.chart = getFactChartType(this.props.schema, fact);\n                    }\n                    return {\n                        ...fact,\n                        groupby: fact.breakdown[0] ? [fact.breakdown[0].field] : [],\n                        //script: this.getFakeScript(d.question, id),\n                        focus: this.getFakeFocus(d.question, id, fact.focus)\n                    }\n                })\n            }\n        })\n    }\n    render() {\n        const { decomposedQA, question, loading } = this.state\n        const { initDone, intl } = this.props\n\n        return (\n            <div className='Dashboard spin-center'>\n                {\n                    loading && <Spin tip={initDone && intl.get(\"Coverting\")} ></Spin>\n                }\n                <LayoutView\n                    loading={loading}\n                    askedQuestion={question}\n                    decomposedQA={decomposedQA}\n                    {...this.props} />\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}