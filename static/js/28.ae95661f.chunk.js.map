{"version":3,"sources":["../node_modules/plur/index.js","../node_modules/irregular-plurals/index.js","sentencer/fact-templates/association.js","sentencer/fact-templates/categorization.js","sentencer/fact-templates/difference.js","sentencer/fact-templates/distribution.js","sentencer/fact-templates/extreme.js","sentencer/fact-templates/outlier.js","sentencer/fact-templates/proportion.js","sentencer/fact-templates/rank.js","sentencer/fact-templates/trend.js","sentencer/fact-templates/value.js","sentencer/fact-templates/index.js","constant/AggregationType.js","sentencer/index.js","tool/helper.js","pages/EditPage/Dashboard/Layout/ChartCard/AnsweredFacts.js","components/ErrorView/ErrorView.js","pages/EditPage/Dashboard/Layout/layout.js"],"names":["irregularPlurals","require","module","exports","word","plural","count","has","toLowerCase","get","firstLetter","charAt","toUpperCase","slice","replace","match","Math","abs","Object","defineProperty","Map","entries","templates","pickFactTemplate","type","id","FactType","ASSOCIATION","association","CATEGORIZATION","categorization","DIFFERENCE","difference","DISTRIBUTION","distribution","EXTREME","extreme","OUTLIER","outlier","PROPORTION","proportion","RANK","rank","TREND","trend","VALUE","value","floor","random","sentence","template","error","console","log","SUM","MAX","MIN","AVG","COUNT","plur","convertAggregation","aggType","AggregationType","NONE","convertMeasure","measure","aggregate","field","convertGroupby","groupby","param","gb","indexOf","gbWords","split","gbWordIndex","plurWord","formatNum","num","number","floatNum","intNum","toString","toFixed","substr","substring","result","counter","i","length","unshift","join","genFactSubspace","fact","subspace","map","key","hightlightItem","script","parameter","srtEndIndex","srtStartIndex","newScript","hightlight","isValid","generatedScript","parameter1","parameter2","parameter3","visNodes","captionNodes","AnsweredFacts","props","renderLayout","computeSizeAndRenderCharts","newFacts","_","cloneDeep","state","facts","index","captionNode","current","visWidth","visHeight","captionH","clientHeight","x0","x1","y0","y1","width","height","preContainerSize","containerSize","setState","renderCharts","setTimeout","batchUpdateSvg","visNode","updateSvg","visH","scale","min","visChart","children","setAttribute","onmouseenter","isEdit","onmouseleave","_renderedFacts","renderNum","weightAdapter","data","columnNum","innerNum","weightTable","significance","change","event","target","getTreemap","d3","tile","ratio","size","padding","round","sum","d","sort","a","b","setRef","set","React","createRef","setCaptionRef","endEdit","visId","cachedQA","QAID","newCachedQA","innerHTML","saveCachedDecomposedQA","deleteCard","parentId","splice","clientWidth","this","nextProps","newContainerW","newContainerH","isUpdateLayout","cachedContainerSize","schema","renderData","leaves","className","layout","_fact","Number","parseFloat","parameterList","forEach","focus","focusValue","undefined","extremeFocus","extremeValue","genFactSentence","style","position","left","top","onClick","ref","CalliopeChart","contentEditable","suppressContentEditableWarning","onBlur","dangerouslySetInnerHTML","__html","Component","ErrorView","initDone","intl","PureComponent","subTitleNodes","LayoutView","titleRef","debounceTimer","containerNodes","onResize","window","addEventListener","clearTimeout","forceUpdate","setFactId","uuidv4","fullscreen","element","document","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","reorder","arr","columns","cols","out","col","_val","push","_nodes","question","setSubTitleRef","setContainerRef","e","endTitleEdit","newtTitle","editedTitle","editTitle","export","print","getTitle","askedQuestion","titleValue","isCanGetSize","preContainerNodes","decomposedQA","loading","TitleView","title","SubTitleView","subQustion","newStr","borderColor","columnCount","QA"],"mappings":"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","file":"static/js/28.ae95661f.chunk.js","sourcesContent":["'use strict';\nconst irregularPlurals = require('irregular-plurals');\n\nmodule.exports = (word, plural, count) => {\n\tif (typeof plural === 'number') {\n\t\tcount = plural;\n\t}\n\n\tif (irregularPlurals.has(word.toLowerCase())) {\n\t\tplural = irregularPlurals.get(word.toLowerCase());\n\n\t\tconst firstLetter = word.charAt(0);\n\t\tconst isFirstLetterUpperCase = firstLetter === firstLetter.toUpperCase();\n\t\tif (isFirstLetterUpperCase) {\n\t\t\tplural = firstLetter.toUpperCase() + plural.slice(1);\n\t\t}\n\n\t\tconst isWholeWordUpperCase = word === word.toUpperCase();\n\t\tif (isWholeWordUpperCase) {\n\t\t\tplural = plural.toUpperCase();\n\t\t}\n\t} else if (typeof plural !== 'string') {\n\t\tplural = (word.replace(/(?:s|x|z|ch|sh)$/i, '$&e').replace(/([^aeiou])y$/i, '$1ie') + 's')\n\t\t\t.replace(/i?e?s$/i, match => {\n\t\t\t\tconst isTailLowerCase = word.slice(-1) === word.slice(-1).toLowerCase();\n\t\t\t\treturn isTailLowerCase ? match.toLowerCase() : match.toUpperCase();\n\t\t\t});\n\t}\n\n\treturn Math.abs(count) === 1 ? word : plural;\n};\n","'use strict';\nconst irregularPlurals = require('./irregular-plurals.json');\n\n// Ensure nobody can modify each others Map\nObject.defineProperty(module, 'exports', {\n\tget() {\n\t\treturn new Map(Object.entries(irregularPlurals));\n\t}\n});\n","const templates = [\n    {\n        'id': 0,\n        'template': 'The Pearson correlation between the {{measure1}} and the {{measure2}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the Pearson correlation coefficient between the {{measure1}} and the {{measure2}} is {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, the {{measure1}} is correlated with the {{measure2}} and the Person correlation is {{parameter}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, there are {{parameter}} {{groupby}}s: {{no.1}}, {{no.2}}, {{no.3}}, and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the data are grouped into {{parameter}} {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}, among which {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The data contain {{parameter}} {{groupby}}s when {{subspace}}, which are {{no.1}}, {{no.2}}, {{no.3}}. {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The difference between {{focus1}} and {{focus2}} regarding to their {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{focus1}} and {{focus2}}\\'s difference on the {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'A comparison between {{focus1}} and {{focus2}} on their {{agg}} {{measure}} shows the difference is {{parameter}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The distribution of the {{agg}} {{measure}} over different {{groupby}}s shows an overview of the data when {{subspace}} and {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'Given {{subspace}}, the {{focus}} value of the {{agg}} {{measure}} is {{parameter[1]}} when the {{groupby}} is {{parameter[0]}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{focus}} {{agg}} {{measure}} value over {{groupby}}s is {{parameter[1]}} when the {{groupby}} is {{parameter[0]}} given {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'Among all {{groupby}}s, {{parameter[0]}} has the {{focus}} {{agg}} {{measure}} value, which is {{parameter[1]}}, when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{agg}} {{measure}} of {{focus}} is an outlier when compared with that of other {{groupby}}s when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{focus}}\\'s {{agg}} {{measure}} is anomalously different from other {{groupby}}s\\' {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'Among various {{groupby}}s, the {{agg}} {{measure}} of {{focus}} is an anomaly when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{focus}} accounts for {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{focus}} makes up {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{focus}}\\'s {{agg}} {{measure}} takes {{parameter}} of the {{agg}} {{measure}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'In the {{agg}} {{measure}} ranking of different {{groupby}}s,  the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}}, when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'The ranking list of the {{groupby}}s ordered by their {{agg}} {{measure}} when {{subspace}}, in which the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When sorting the {{groupby}}s in order based on their {{agg}} {{measure}}, the top three {{groupby}}s are {{no.1}}, {{no.2}}, {{no.3}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The trend of the {{agg}} {{measure}} over {{groupby}}s is {{parameter}} when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 1,\n        'template': 'The {{agg}} {{measure}} over {{groupby}}s shows a/an {{parameter}} trend when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{agg}} {{measure}} over {{groupby}}s is {{parameter}} when {{subspace}} and the value of {{focus}} needs to pay attention.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'The {{agg}} {{measure}} is {{parameter}} when {{subspace}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, the value of the {{agg}} {{measure}} is {{parameter}}.',\n    },\n    {\n        'id': 2,\n        'template': 'The {{agg}} {{measure}} value is {{parameter}} when {{subspace}}.',\n    },\n]\n\nexport default templates;","import FactType from '../../constant/FactType';\nimport association from './association';\nimport categorization from './categorization';\nimport difference from './difference';\nimport distribution from './distribution';\nimport extreme from './extreme';\nimport outlier from './outlier';\nimport proportion from './proportion';\nimport rank from './rank';\nimport trend from './trend';\nimport value from './value';\n\nconst templateCount = 3;\n\nconst pickFactTemplate = function(type, id=-1) {\n    // pick randomly when id == -1\n    let templates = []\n    switch (type) {\n        case FactType.ASSOCIATION:\n            templates = association;\n            break;\n\n        case FactType.CATEGORIZATION:\n            templates = categorization;\n            break;\n\n        case FactType.DIFFERENCE:\n            templates = difference;\n            break;\n\n        case FactType.DISTRIBUTION:\n            templates = distribution;\n            break;\n\n        case FactType.EXTREME:\n            templates = extreme;\n            break;\n\n        case FactType.OUTLIER:\n            templates = outlier;\n            break;\n\n        case FactType.PROPORTION:\n            templates = proportion;\n            break;\n\n        case FactType.RANK:\n            templates = rank;\n            break;\n\n        case FactType.TREND:\n            templates = trend;\n            break;\n\n        case FactType.VALUE:\n            templates = value;\n            break;\n    \n        default:\n            break;\n    }\n    if (id === -1) {\n        id = Math.floor(Math.random() * 10)%templateCount\n    }\n    let sentence = '';\n    try {\n        sentence = templates[id].template;\n    }\n    catch(error) {\n        console.error(error);\n        console.log('wrong id:'+id)\n    }\n    return sentence;\n}\n\nexport default pickFactTemplate;","export default {\n    SUM: 'sum',\n    MAX: 'max',\n    MIN: 'min',\n    AVG: 'avg',\n    COUNT: 'count',\n    // NONE: 'none'\n}","import pickFactTemplate from './fact-templates';\nimport pickRelationTemplate from './relation-templates';\nimport FactType from '@/constant/FactType'\nimport { isValid } from '@/tool/fact2vis/helper'\nimport AggregationType from '@/constant/AggregationType'\nimport _ from 'lodash'\n\nconst plur = require('plur');\nconst convertAggregation = function (aggType) {\n    switch (aggType) {\n        case AggregationType.SUM:\n            return 'total'\n\n        case AggregationType.MAX:\n            return 'maximum'\n\n        case AggregationType.MIN:\n            return 'minimum'\n\n        case AggregationType.AVG:\n            return 'average'\n\n        case AggregationType.COUNT:\n            return 'count'\n\n        case AggregationType.NONE:\n            return ''\n\n        default:\n            return ''\n    }\n}\n\nconst convertMeasure = function (measure) {\n    if (measure.aggregate === \"count\") return \"\"\n    else return measure.field.toLowerCase();\n}\n\nconst convertGroupby = function (groupby, param = 'single') {\n    let gb = groupby[0]\n\n    if (param === 'single')\n        return gb.toLowerCase()\n    else if (param === 'plural') {\n        if (gb.indexOf(' of ') !== -1) {\n            let gbWords = gb.split(\" \")\n            let gbWordIndex = gbWords.indexOf(\"of\") - 1\n            if (gbWordIndex > -1) {\n                let plurWord = plur(gbWords[gbWordIndex], 2)\n                return gb.replace(gbWords[gbWordIndex], plurWord)\n            }\n        } else\n            return plur(gb, 2).toLowerCase()\n    }\n}\n\n// for value/difference/categorization\nexport const formatNum = function (num) {\n    num = (num || 0).toString();\n    let number = 0,\n        floatNum = '',\n        intNum = '';\n    if (num.indexOf('.') > 0) {\n        num = num.toFixed(2)\n        number = num.indexOf('.');\n        floatNum = num.substr(number);\n        intNum = num.substring(0, number);\n    } else {\n        intNum = num;\n    }\n    let result = [],\n        counter = 0;\n    intNum = intNum.split('');\n\n    for (let i = intNum.length - 1; i >= 0; i--) {\n        counter++;\n        result.unshift(intNum[i]);\n        if (!(counter % 3) && i !== 0) { result.unshift(','); }\n    }\n    return result.join('') + floatNum || '';\n}\n\nconst genFactSubspace = function (fact, template) {\n    let subspace = '';\n    if (fact.subspace.length) {\n        fact.subspace.map((key, i) => { return subspace += `${i === 0 ? ' ' : ' and '}the ${key.field} is ${key.value}` })\n        template = template.replace(\"{{subspace}}\", subspace);\n    } else {\n        template = template.replace(\", when {{subspace}}\", '');\n        template = template.replace(\" when {{subspace}}\", '');\n        template = template.replace(\" in case of {{subspace}}\", '');\n        template = template.replace(\" given {{subspace}}\", '');\n        template = template.replace(\"When {{subspace}}, \", '');\n        template = template.replace(\"Given {{subspace}}, \", '');\n        template = template.replace(\"In case of {{subspace}}, \", '');\n    }\n    return template\n}\n\nexport const genFactSentence = function (_fact) {\n    if (!isValid(_fact))\n        return ''\n    let fact = _.cloneDeep(_fact)\n    let template = pickFactTemplate(fact.type);\n    let aggregate = AggregationType.NONE;\n    if (fact.measure.length > 0) {\n        aggregate = fact.measure[0].aggregate;\n    }\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            template = template.replace(\"{{measure1}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure2}}\", convertMeasure(fact.measure[1]));\n            template = template.replace(\"{{agg1}}\", convertAggregation(fact.measure[0].aggregate));\n            template = template.replace(\"{{agg2}}\", convertAggregation(fact.measure[1].aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter !== '') {\n                template = template.replace(\"{{parameter}}\", formatNum(Number.parseFloat(fact.parameter).toFixed(3)));\n            }\n            break;\n\n        case FactType.CATEGORIZATION:\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter.length) {\n                template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                let parameterList = ''\n                fact.parameter.forEach((d, i) => {\n                    parameterList += `${i === 0 ? '' : ','} ${d}`\n                });\n                template = template.replace(\"{{no.1}}, {{no.2}}, {{no.3}}\", parameterList);\n                // template = template.replace(\"{{no.1}}\", fact.parameter[0]);\n                // template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                // if (fact.parameter.length === 3) {\n                //     template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                // } else if (fact.parameter.length > 3) {\n                //     template = template.replace(\"{{no.3}}\", fact.parameter[2] + ', etc');\n                // } else if (fact.parameter.length === 2) {\n                //     template = template.replace(\", {{no.3}}\", '');\n                // }\n            }\n            if (fact.focus.length) {\n                if (template.indexOf(\". {{focus}}\") > -1) {\n                    let focusValue = fact.focus[0].value.slice(0, 1).toUpperCase() + fact.focus[0].value.slice(1)\n                    template = template.replace(\"{{focus}}\", focusValue);\n                } else {\n                    template = template.replace(\"{{focus}}\", fact.focus[0].value);\n                }\n            } else {\n                template = template.replace(\", and {{focus}} needs to pay attention\", \"\");\n                template = template.replace(\", among which {{focus}} needs to pay attention\", \"\");\n                template = template.replace(\". {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.DIFFERENCE:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            if (fact.focus.length >= 2) {\n                template = template.replace(\"{{focus1}}\", fact.focus[0].value);\n                template = template.replace(\"{{focus2}}\", fact.focus[1].value);\n            }\n            template = genFactSubspace(fact, template)\n            if (fact.parameter !== '') template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n            break;\n\n        case FactType.DISTRIBUTION:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) {\n                template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            } else {\n                template = template.replace(\" and {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.EXTREME:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = template.replace(\"{{groupby}}\", convertGroupby(fact.groupby));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) {\n                if (fact.focus[0].extremeFocus !== undefined && fact.focus[0].extremeValue !== undefined) {\n                    if (fact.focus[0].extremeFocus === 'min') { template = template.replace(\"{{focus}}\", 'minimum'); }\n                    else { template = template.replace(\"{{focus}}\", 'maximum'); }\n                    template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                    template = template.replace(\"{{parameter[1]}}\", formatNum(Math.round(fact.parameter[1] * 100) / 100));\n\n                } else if (fact.parameter.length) {\n                    if (fact.parameter[0] === 'min') { template = template.replace(\"{{focus}}\", 'minimum'); }\n                    else { template = template.replace(\"{{focus}}\", 'maximum'); }\n                    template = template.replace(\"{{parameter[0]}}\", fact.focus[0].value);\n                    template = template.replace(\"{{parameter[1]}}\", formatNum(fact.parameter[1]));\n                }\n            }\n            break;\n\n        case FactType.OUTLIER:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            break;\n\n        case FactType.PROPORTION:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            if (fact.parameter) template = template.replace(\"{{parameter}}\", fact.parameter);\n            break;\n\n        case FactType.RANK:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter.length >= 3) {\n                template = template.replace(\"{{parameter}}\", formatNum(fact.parameter.length));\n                template = template.replace(\"{{no.1}}\", fact.parameter[0]);\n                template = template.replace(\"{{no.2}}\", fact.parameter[1]);\n                if (fact.parameter.length === 3) {\n                    template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                } else if (fact.parameter.length > 3) {\n                    template = template.replace(\"{{no.3}}\", fact.parameter[2]);\n                } else if (fact.parameter.length === 2) {\n                    template = template.replace(\", {{no.3}}\", '');\n                }\n            } else {\n                template = ''\n            }\n            break;\n\n        case FactType.TREND:\n        \n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = template.replace(\"{{groupby}}s\", convertGroupby(fact.groupby, 'plural'));\n            template = genFactSubspace(fact, template)\n            if (fact.parameter) {\n                template = template.replace(\"{{parameter}}\", fact.parameter);\n                if (fact.parameter === 'increasing') {\n                    template = template.replace(\"a/an\", 'an');\n                } else {\n                    template = template.replace(\"a/an\", 'a');\n                }\n            }\n            if (fact.focus.length) {\n                template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            } else {\n                template = template.replace(\" and the value of {{focus}} needs to pay attention\", \"\");\n            }\n            break;\n\n        case FactType.VALUE:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate));\n            template = genFactSubspace(fact, template)\n            if (fact.focus.length) template = template.replace(\"{{focus}}\", fact.focus[0].value);\n            if (fact.parameter !== '') template = template.replace(\"{{parameter}}\", formatNum(fact.parameter));\n            break;\n\n        default:\n            break;\n    }\n    template = template.slice(0, 1).toUpperCase() + template.slice(1)\n    return template;\n}\n\n\nexport const genStoryText = function (facts, relations) {\n    let template;\n    let storyText = '';\n    let pairLength = parseInt(facts.length / 2)\n    //console.log(\"relations\", facts, relations)\n    for (let i = 0; i < pairLength; i++) {\n        if (facts[i]) {\n            template = pickRelationTemplate(relations[i * 2 + 1])\n            // template = template.replace(\"{{Sentence A}}\", facts[i * 2].script());\n            // template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].script());\n            template = template.replace(\"{{Sentence A}}\", facts[i * 2].generatedScript);\n            template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].generatedScript);\n            storyText += template + ' '\n        }\n    }\n    if (facts.length % 2) {\n        //storyText += facts[facts.length - 1].script()\n        storyText += facts[facts.length - 1].generatedScript\n    }\n    //console.log(\"storyText\", storyText)\n    return storyText\n}\n\nexport const genSubtitle = function (fact) {\n    let title;\n    if (!isValid(fact))\n        return ''\n\n    title = 'The ' + fact.type\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            title += ' of ' + fact.measure[0].field + ' and ' + fact.measure[1].field\n            break;\n        case FactType.CATEGORIZATION:\n            // title += ' of ' + fact.groupby[0]\n            title = fact.groupby[0]\n            break;\n\n        case FactType.DIFFERENCE:\n            title += ' between ' + fact.focus[0].value + ' and ' + fact.focus[1].value\n            break;\n        case FactType.DISTRIBUTION:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.EXTREME:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.OUTLIER:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.PROPORTION:\n            title += ' of ' + fact.focus[0].value\n            break;\n        case FactType.RANK:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.TREND:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.VALUE:\n            title = 'The ' + convertAggregation(fact.measure[0].aggregate) + ' ' + fact.measure[0].field\n            break;\n        default:\n            break;\n    }\n    if (fact.subspace.length) {\n        let subspace = '';\n        fact.subspace.map((key, i) => { return subspace += ` in ${key.value}` })\n        title += subspace;\n    }\n\n    return title;\n}\n\nexport const genTitle = function (fileName) {\n    let title;\n    switch (fileName) {\n        case 'CarSales.csv':\n            title = 'Car Sales'\n            break;\n\n        case 'nCoV2020.csv':\n            title = 'COVID-19'\n            break;\n\n        case 'deadstartup.csv':\n            title = 'Startup Failures'\n            break;\n\n        default:\n            if (fileName.indexOf('.') > 0) {\n                let number = fileName.indexOf('.');\n                // let csv = fileName.substr(number);\n                title = fileName.substring(0, number);\n            } else {\n                title = fileName\n            }\n            break;\n    }\n    return title\n}","import FactType from '@/constant/FactType'\nimport { isValid } from './fact2vis/helper'\nimport { formatNum } from '../sentencer/index'\n\nexport const genTitle = function (fileName) {\n    let title;\n    switch (fileName) {\n        case 'CarSales.csv':\n            title = 'Car Sales'\n            break;\n\n        case 'nCoV2020.csv':\n            title = 'COVID-19'\n            break;\n\n        case 'deadstartup.csv':\n            title = 'Startup Failures'\n            break;\n\n        default:\n            if (fileName.indexOf('.') > 0) {\n                let number = fileName.indexOf('.');\n                // let csv = fileName.substr(number);\n                title = fileName.substring(0, number);\n            } else {\n                title = fileName\n            }\n            break;\n    }\n    return title\n}\nconst isEndWithS = (letter) => {\n    if (letter === 's') return true\n    return false\n}\n\nconst hightlightItem = function (script, parameter) {\n    if (script.indexOf(parameter) === -1) return script\n    let srtEndIndex = script.indexOf(parameter) + parameter.length;\n\n    if (isEndWithS(script.substring(srtEndIndex, srtEndIndex + 1))) {\n        srtEndIndex = srtEndIndex + 1 //include s \n    }\n    let srtStartIndex = script.indexOf(parameter);\n    let newScript = script.substring(0, srtEndIndex) + \"</i></span>\" + script.substring(srtEndIndex);\n    newScript = newScript.substring(0, srtStartIndex) + '<span class=\"hightlight\"><i>'+ newScript.substring(srtStartIndex);\n    return newScript\n}\n\nexport const hightlight = function (fact) {\n    if (!isValid(fact))\n        return ''\n    // console.log(\"fact.parameter\", fact);\n    // if (!fact.parameter)\n    //     return fact.generatedScript\n\n    let script = fact.generatedScript\n    // script = hightlightItem(fact.generatedScript, fact.type)\n    // if (fact.breakdown && fact.breakdown[0]) {\n    //     script = hightlightItem(script, fact.breakdown[0].field)\n    // }\n    // if (fact.measure && fact.measure[0]) {\n    //     script = hightlightItem(script, fact.measure[0].field)\n    // }\n\n    // if (fact.subspace && fact.subspace[0]) {\n    //     script = hightlightItem(script, fact.subspace[0].field)\n    // }\n\n    let parameter\n    let newScript\n\n    switch (fact.type) {\n        // TODO: NO template parameter\n        case FactType.ASSOCIATION:\n            newScript = script\n            break;\n\n        case FactType.RANK:\n            let parameter1 = fact.parameter[0];\n            let parameter2 = fact.parameter[1];\n            let parameter3 = fact.parameter[2];\n            newScript = hightlightItem(script, parameter1)\n            if (parameter2) newScript = hightlightItem(newScript, parameter2)\n            if (parameter2 && parameter3) newScript = hightlightItem(newScript, parameter3)\n            break;\n\n        case FactType.VALUE:\n            newScript = hightlightItem(script, fact.measure[0].field.toLowerCase())\n            newScript = hightlightItem(newScript, formatNum(fact.parameter))\n            break;\n\n        case FactType.DIFFERENCE:\n            newScript = hightlightItem(script, fact.measure[0].field.toLowerCase())\n            newScript = hightlightItem(newScript, formatNum(fact.parameter))\n            break;\n        // case FactType.DIFFERENCE:\n        //     parameter = formatNum(fact.parameter);\n        //     newScript = hightlightItem(script, parameter)\n        //  \n        case FactType.RANK:\n            newScript = hightlightItem(script, 'decreasing')\n            break;\n\n        // TODO: NO template parameter\n        case FactType.OUTLIER:\n            newScript = script\n            break;\n        case FactType.EXTREME:\n        case FactType.OUTLIER:\n            newScript = hightlightItem(script, 'maximum')\n            if (fact.parameter[1]) newScript = hightlightItem(newScript, formatNum(fact.parameter[1]))\n            break;\n\n        case FactType.DISTRIBUTION:\n            newScript = script\n            break;\n\n        case FactType.CATEGORIZATION:\n            parameter = fact.parameter.length.toString();\n            newScript = hightlightItem(script, parameter)\n            break;\n\n        default:\n            parameter = fact.parameter;\n            newScript = hightlightItem(script, parameter)\n            break;\n    }\n    return newScript\n}\n\nexport const genSubtitle = function (fact) {\n    let title;\n    if (!isValid(fact))\n        return ''\n\n    title = 'The ' + fact.type\n    switch (fact.type) {\n        case FactType.ASSOCIATION:\n            title += ' of ' + fact.measure[0].field + ' and ' + fact.measure[1].field\n            break;\n        case FactType.CATEGORIZATION:\n            title += ' of ' + fact.groupby[0]\n            break;\n\n        case FactType.DIFFERENCE:\n            title += ' between ' + fact.focus[0].value + ' and ' + fact.focus[1].value\n            break;\n        case FactType.DISTRIBUTION:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.EXTREME:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.OUTLIER:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.PROPORTION:\n            title += ' of ' + fact.focus[0].value\n            break;\n        case FactType.RANK:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.TREND:\n            title += ' of ' + fact.measure[0].field\n            break;\n        case FactType.VALUE:\n            title += ' of ' + fact.focus[0].value\n            break;\n        default:\n            break;\n    }\n    if (fact.subspace.length) {\n        let subspace = '';\n        fact.subspace.map((key, i) => { return subspace += ` in ${key.value}` })\n        title += subspace;\n    }\n\n    return title;\n}","import React, { Component } from 'react'\nimport { genFactSentence } from '@/sentencer/index'\nimport CalliopeChart from './CalliopeChart'\nimport { hightlight } from '@/tool/helper'\nimport * as d3 from 'd3'\nimport _ from 'lodash';\nimport './AnsweredFacts.less'\n\n\nlet testLayout = [1, 2, 3, 4, 5]\nconst defaultNum = testLayout[4]\n\nlet visNodes = new Map()\nlet captionNodes = new Map()\nconst maxNum = 5;\n\nexport default class AnsweredFacts extends Component {\n\n    renderLayout = null\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            renderNum: defaultNum,\n            count: maxNum,\n            clientWidth: 0,\n            clientHeight: 0,\n            facts: this.props.facts,\n            containerSize: this.props.containerSize\n        }\n    }\n\n    componentDidMount() {\n        this.computeSizeAndRenderCharts()\n    }\n    componentWillReceiveProps(nextProps) {\n        let newContainerW = nextProps.containerSize.width,\n            newContainerH = nextProps.containerSize.height\n\n        let { width, height } = this.state.containerSize\n        //console.log(\"componentWillReceiveProps\", nextProps.containerSize, this.state.containerSize);\n        //update container size\n        if (newContainerW !== width || newContainerH !== height) {\n            this.setState({\n                containerSize: {\n                    width: newContainerW,\n                    height: newContainerH\n                }\n            })\n        }\n        //update facts \n        if (nextProps.isUpdateLayout) {\n            this.setState({\n                facts: nextProps.facts\n            }, () => {\n                this.computeSizeAndRenderCharts()\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        //屏幕尺寸改变 需要更新\n        let { width, height } = this.state.containerSize\n\n        let cachedContainerSize = this.state.facts[0].preContainerSize\n        if (cachedContainerSize) {\n            if (cachedContainerSize.width !== width || cachedContainerSize.height !== height) {\n                let facts = _.cloneDeep(this.state.facts)\n                facts[0].preContainerSize = this.state.containerSize//update containerSize size \n                this.setState({\n                    facts\n                }, () => {\n                    this.computeSizeAndRenderCharts()\n                })\n            }\n        }\n\n        //启动编辑后触发的更新\n        if (this.props.isEdit) {\n            this.renderCharts()\n        }\n    }\n\n    /*\n     *\n     fact.width 记录的是计算的chart的宽度；fact.height记录的是计算的chart的高度\n     批量一次更新后，先生成calliope-chart的dom,\n     然后做缩放\n     */\n    computeSizeAndRenderCharts = () => {\n        let facts = _.cloneDeep(this.state.facts)\n        let newFacts = facts.map((fact, index) => {\n            if (!captionNodes.get(fact.id)) return fact\n            let captionNode = captionNodes.get(fact.id).current\n            let visWidth = 0, visHeight = 0\n            let captionH = 0;\n\n            if (captionNode) {\n                captionH = captionNode.clientHeight\n            }\n            if (this.renderLayout && this.renderLayout[index]) {\n                let { x0, x1, y0, y1 } = this.renderLayout[index]\n                visWidth = x1 - x0\n                visHeight = y1 - y0 - captionH\n            }\n\n            if (visWidth === 0 || visHeight === 0) return fact\n            fact.width = visWidth\n            fact.height = visHeight\n            fact.captionH = captionH\n            //preContainerSize 只记在第一个数组里就可以了\n            if (index === 0) {\n                fact.preContainerSize = this.props.containerSize\n            }\n            return fact\n        })\n\n        this.setState({\n            facts: newFacts\n        }, () => {\n            this.renderCharts()\n        })\n    }\n    //由于calliope-chart异步返回,因此做了1000ms的延迟才可以获取visChart\n    renderCharts = () => {\n        setTimeout(() => {\n            this.batchUpdateSvg()\n        }, 1000)\n    }\n\n    batchUpdateSvg = () => {\n        let facts = _.cloneDeep(this.state.facts)\n        // console.log(\"newFacts\", facts);\n        facts.map(fact => {\n            if (!visNodes.get(fact.id)) return fact\n            let visNode = visNodes.get(fact.id).current\n            if (visNode) {\n                //console.log(\"visNodes\", visNode, visNodes.get(fact.id));\n                this.updateSvg(visNode, fact.width, fact.height)\n            }\n            return fact\n        })\n    }\n\n\n    /*更新:\n         可见状态\n         设置缩放\n     */\n    updateSvg = (visNode, visWidth, visHeight) => {\n        if (visNode) {\n            let h_Margin = 15\n            let visH = visHeight - h_Margin\n            // let scaleX = visWidth / 640,\n            //     scaleY = visHeight / 640;\n            let scale = Math.min(visWidth, visH) / 640\n            let marginRotio = 0.9\n            let visChart = visNode.children && visNode.children[0]\n            //console.log(\"updateSvg visNode\", visNode, visWidth, visHeight,scale);\n            if (visChart) {\n                visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio});visibility:\"visible\"`)\n                visChart.onmouseenter = () => {\n                    visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio});border:${this.props.isEdit ? '1px dashed grey' : ' '} `)\n                }\n                visChart.onmouseleave = () => {\n                    visChart.setAttribute(\"style\", `transform:scale(${scale * marginRotio})`)\n                }\n            }\n        }\n    }\n\n\n    _renderedFacts = (facts) => {\n        const { renderNum, count } = this.state\n        return facts.slice(0, renderNum >= count ? count : renderNum)\n    }\n\n\n\n    weightAdapter = (data, columnNum) => {\n        let innerNum = data.children.length\n        let weightTable = []\n        switch (columnNum) {\n            case 1:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [3, 1.2, 0.8]\n                }\n                break;\n            case 2:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [4, 3]\n                } else if (innerNum === 3) {\n                    weightTable = [6, 3, 2]\n                }\n                break;\n            case 3:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [3, 1.2, 0.8]\n                }\n                break;\n            case 4:\n                weightTable = [1]\n                if (innerNum === 2) {\n                    weightTable = [3, 2]\n                } else if (innerNum === 3) {\n                    weightTable = [4, 3, 2]\n                }\n                break;\n            default:\n                break;\n        }\n        return {\n            \"children\": data.children.map((fact, index) => {\n                return {\n                    ...fact,\n                    significance: weightTable[index]\n                }\n            })\n        }\n    }\n\n    change = (event) => {\n        this.setState({\n            renderNum: event.target.value\n        })\n    }\n\n    getTreemap = (width, height, data) => {\n        let treemap = d3.treemap()\n            .tile(d3.treemapResquarify.ratio(1))\n            .size([width, height])\n            .padding(3)\n            .round(true)\n            (d3.hierarchy(data)\n                .sum(d => d.significance)\n            )\n        return treemap\n    }\n\n    sort = (data) => {\n        return data.sort((a, b) => b.significance - a.significance)\n    }\n\n    setRef = (id) => {\n        visNodes.set(id, React.createRef())\n        return visNodes.get(id)\n    }\n    setCaptionRef = (id) => {\n        captionNodes.set(id, React.createRef())\n        return captionNodes.get(id)\n    }\n    endEdit = (visId, index) => {\n        let captionNode = captionNodes.get(visId).current\n        let { cachedQA, QAID } = this.props\n        let newCachedQA = _.cloneDeep(cachedQA)\n        newCachedQA[QAID].facts[index].script = captionNode.innerHTML\n        this.props.saveCachedDecomposedQA(newCachedQA)\n    }\n\n    deleteCard = (index) => {\n        let { cachedQA, QAID } = this.props\n        let newCachedQA = _.cloneDeep(cachedQA)\n        let parentId = QAID\n        newCachedQA[parentId] && newCachedQA[parentId].facts.splice(index, 1)\n        if (newCachedQA[parentId] && newCachedQA[parentId].facts.length === 0) {\n            newCachedQA.splice(parentId, 1)\n        }\n        this.props.saveCachedDecomposedQA(newCachedQA)\n    }\n\n    render() {\n\n        let { columnNum, isEdit, QAID, schema, data } = this.props\n        let { containerSize } = this.state\n        let { facts } = this.state\n        let renderData = {\n            children: this._renderedFacts(this.sort(facts))\n        }\n        let { width, height } = containerSize//屏幕尺寸改变后改变的参数\n        this.renderLayout = this.getTreemap(width, height, this.weightAdapter(renderData, columnNum)).leaves()\n        //console.log(\"facts render\", this.props.QAID, facts, this.props.facts, this.renderLayout);\n\n        return (\n            <div className='inner-auto-layout' >\n                {\n                    this.renderLayout && this.renderLayout.map((layout, index) => {\n                        const fact = layout.data\n                        const { x0, x1, y0, y1 } = layout\n\n                        let script = fact.script ? fact.script : genFactSentence(fact) || \" \"\n                        fact.generatedScript = script\n                        // console.log(\"render////\", QAID, index, fact, layout);\n                        return <div style={{ position: 'absolute', left: x0, top: y0, width: x1 - x0, height: y1 - y0 }}>\n                            <div className='chart-card'>\n                                {\n                                    isEdit && <div className='delete' onClick={() => this.deleteCard(index)}></div>\n                                }\n                                <div className='wrapper'>\n                                    <div className='vis-box' style={{ height: `calc(100% - ${fact.captionH}px)` }}>\n                                        <div className='bound-box' id={fact.id} ref={this.setRef(fact.id)}\n                                            //style={{ width: fact.width, height: fact.height, backgroundColor: \"red\" }}\n                                        >\n                                            <CalliopeChart schema={schema} fact={fact} data={data} />\n                                        </div>\n                                    </div>\n                                    <div className='caption' contentEditable={isEdit} suppressContentEditableWarning ref={this.setCaptionRef(fact.id, index)} onBlur={() => this.endEdit(fact.id, index)}\n                                        //title={script}\n                                        dangerouslySetInnerHTML={{ __html: hightlight(fact) }}\n                                    ></div>\n                                </div>\n                            </div>\n                        </div >\n                    })\n                }\n            </div >\n        )\n    }\n}","import React, { PureComponent } from 'react'\nimport './ErrorView.less'\n\nexport default class ErrorView extends PureComponent {\n\n    render() {\n        const { initDone, intl } = this.props\n        return (\n            <div className='ErrorView'>\n                <div />\n                <p>{initDone && intl.get('empty')}</p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport AnsweredFacts from '../Layout/ChartCard/AnsweredFacts'\nimport ErrorView from '@/components/ErrorView/ErrorView'\nimport uuidv4 from 'uuid/v4';\nimport _ from 'lodash'\nimport './layout.less'\n\n// const defaultNum = 1\n// const defaultSubNum = 5\n\nlet subTitleNodes = new Map()\n\nexport default class LayoutView extends Component {\n    titleRef = React.createRef();\n    debounceTimer = null\n    containerNodes = {\n        width: 0,\n        height: 0\n    }\n    // state = {\n    //     num: this.props.decomposedQA.length,\n    //     subNum: defaultSubNum\n    // }\n    // change = (event) => {\n    //     this.setState({\n    //         num: event.target.value\n    //     })\n    // }\n    // subchange = (event) => {\n    //     this.setState({\n    //         subNum: event.target.value\n    //     })\n    // }\n\n    componentDidMount() {\n        this.onResize()\n    }\n    componentDidUpdate() {\n        if (this.preContainerNodes && this.containerNodes) {\n            if (this.preContainerNodes.width !== this.containerNodes.width || this.preContainerNodes.height !== this.containerNodes.height) {\n                this.forceUpdate()\n            }\n        }\n    }\n    onResize = () => {\n        window.addEventListener('resize', () => {\n            if (this.debounceTimer) clearTimeout(debounceTimer)\n            setTimeout(() => {\n                this.forceUpdate()\n            }, 1000)\n        })\n    }\n    setFactId = (facts, index) => {\n        let _facts = _.cloneDeep(facts).map(fact => {\n            return {\n                ...fact,\n                id: `${index}QA${uuidv4()}`\n            }\n        })\n        return _facts\n    }\n\n    fullscreen = () => {\n        let element = document.documentElement;\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {   // 兼容火狐\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {    // 兼容谷歌\n            element.webkitRequestFullscreen();\n        } else if (element.msRequestFullscreen) {   // 兼容IE\n            element.msRequestFullscreen();\n        }\n    }\n    //re-order the array so the \"cards\" read left-right\n    reorder = (arr, columns) => {\n        const cols = columns;\n        const out = [];\n        let col = 0;\n        while (col < cols) {\n            for (let i = 0; i < arr.length; i += cols) {\n                let _val = arr[i + col];\n                if (_val !== undefined)\n                    out.push(_val);\n            }\n            col++;\n        }\n        return out\n    }\n    endEdit = (index) => {\n        let _nodes = subTitleNodes.get(index).current\n        if (_nodes) {\n            let { cachedQA } = this.props\n         if( cachedQA[index] )\n          {\n            cachedQA[index].question = _nodes.innerHTML\n          }\n            this.props.saveCachedDecomposedQA(cachedQA)\n        }\n    }\n    setSubTitleRef = (index) => {\n        subTitleNodes.set(index, React.createRef())\n        return subTitleNodes.get(index)\n    }\n    setContainerRef = (e) => {\n        if (e) {\n            let subTitleH = 55\n            this.containerNodes = { width: e.clientWidth, height: e.clientHeight - subTitleH }\n        }\n    }\n\n    endTitleEdit = () => {\n        let _nodes = this.titleRef.current\n        if (_nodes) {\n            let newtTitle = _nodes.innerHTML\n            if (newtTitle !== this.props.editedTitle) {\n                this.props.editTitle(newtTitle)\n            }\n        }\n    }\n    export = () => {\n        window.print()\n    }\n    getTitle = () => {\n        const { askedQuestion, editedTitle } = this.props\n        let titleValue = editedTitle ? editedTitle : askedQuestion\n        return titleValue.slice(0, 1).toUpperCase() + titleValue.slice(1)\n    }\n\n    isCanGetSize = () => {\n        this.preContainerNodes = {\n            width: 0,\n            height: 0\n        }\n        if (this.containerNodes) {\n            if (this.containerNodes.width !== 0 && this.containerNodes.height !== 0) {\n                this.preContainerNodes = _.cloneDeep(this.containerNodes)\n                return true\n            }\n\n        }\n        return false\n    }\n    render() {\n        const { initDone, intl, isEdit, decomposedQA, loading, isUpdateLayout } = this.props\n        if (!decomposedQA) return null\n        // const { num, subNum } = this.state\n        // decomposedQA = decomposedQA.slice(0, num).map(QA => {\n        //     return {\n        //         ...QA,\n        //         facts: QA.facts.slice(0, subNum)\n        //     }\n        // })\n\n        const TitleView = () => {\n            return <div className='title'>\n                <h1 contentEditable={isEdit}\n                    title={this.getTitle()}\n                    suppressContentEditableWarning\n                    onBlur={() => this.endTitleEdit()}\n                    ref={this.titleRef}>{`${this.getTitle() || (initDone && intl.get(\"inputHint\"))}`}</h1>\n                <div className='fullscreen_icon' onClick={this.fullscreen}></div>\n                <div className='export_icon' onClick={this.export}></div>\n            </div>\n        }\n\n        const SubTitleView = ({ index, subQustion, isEdit }) => {     \n            let newStr = subQustion.slice(0, 1).toUpperCase() + subQustion.slice(1)\n            return <div className='sub-title-box'>\n                <div className='right-box'>\n                    <div className={newStr === this.getTitle() ? 'right-top hightlight' : 'right-top default'}></div>\n                </div>\n                <div className='sub-title' style={{ borderColor: newStr === this.getTitle() ? '#F19C0F' : '#A1AEB9' }}>\n                    <div className={newStr === this.getTitle() ? 'index hightlight' : 'index default'}>{index + 1}</div>\n                    <h1 contentEditable={isEdit}\n                        suppressContentEditableWarning\n                        title={`${newStr}`}\n                        onBlur={() => this.endEdit(index)} ref={this.setSubTitleRef(index)}>{`${newStr}`}</h1>\n                </div>\n            </div >\n        }\n\n        let columns = decomposedQA.length === 4 ? 2 : decomposedQA.length\n        return (\n            <div className='large-size-screen'>\n                <TitleView {...this.props} />\n                {/* <div className='test'>\n                    View\n                    <select onChange={this.change} defaultValue={defaultNum}>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                    </select>\n                </div>\n                <div className='sub_test'>\n                    subView\n                    <select onChange={this.subchange} defaultValue={defaultSubNum}>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                        <option value='5'>5</option>\n                    </select>\n                </div> */}\n                <div className='auto-layout' style={{ columnCount: columns }}>\n                    <div className='dec1'></div>\n                    <div className='dec2'></div>\n                    {\n                        decomposedQA.length > 0 ? this.reorder(decomposedQA, columns).map((QA, index) => {\n                            return (\n                                <div className='subView' key={QA.id} style={{ height: decomposedQA.length === 4 ? \"calc(50% - 15px)\" : \"100%\", width: \"100%\" }} ref={(e) => this.setContainerRef(e)}>\n                                    <div className='d1'></div>\n                                    <div className='d2'></div>\n                                    {\n                                        decomposedQA.length > 1 && <SubTitleView  index={QA.id} subQustion={QA.question} isEdit={isEdit} />\n                                    }\n                                    {\n                                        this.isCanGetSize() ? <AnsweredFacts QAID={index} containerSize={this.containerNodes} facts={this.setFactId(QA.facts, index)} columnNum={decomposedQA.length} isUpdateLayout={isUpdateLayout} {...this.props} />\n                                            : null\n                                    }\n                                </div>\n                            )\n                        })\n                            :\n                            !loading && <ErrorView initDone={initDone, intl} intl={intl} />\n                    }\n                </div>\n            </div >\n        )\n    }\n}"],"sourceRoot":""}