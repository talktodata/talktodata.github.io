{"version":3,"sources":["../node_modules/antd/es/_util/reactNode.js","axios/config.js","constant/ChartType.js","axios/api.js","../node_modules/antd/es/_util/type.js","pages/DataPage/questionList/index.js","../node_modules/reselect/es/index.js","tool/distance.js","tool/hcluster.js","tool/factAggRule.js","tool/factAggregation.js","tool/tree.js","selector/story.js","selector/user.js","action/questionAction.js","pages/DataPage/questionList/QuestionList.js"],"names":["isValidElement","React","cloneElement","element","props","replacement","replaceElement","uploadPrefix","generationUrlPrefix","config","url","uploadData","share","fetch","factScoring","generate","candidateQuestions","JUXTAPOSITION","AREA_CHART","VERTICAL_BAR_CHART","VERTICAL_DIFFERENCE_BAR_CHART","VERTICAL_DIFFERENCE_ARROW_CHART","HORIZONTAL_BAR_CHART","PROGRESS_BAR_CHART","STACKED_BAR_CHART","ISOTYPE_BAR_CHART","PROPORTION_ISOTYPE_CHART","COLOR_FILLING_MAP","BUBBLE_CHART","TEXT_CHART","LINE_CHART","STACKED_LINE_CHART","RING_CHART","HALF_RING_CHART","PIE_CHART","SCATTER_PLOT","TREE_MAP","BUBBLE_MAP","formData","a","Promise","reslove","reject","axios","method","data","then","response","status","catch","error","getQuestions","generatePDF","param","tuple","_len","arguments","length","args","Array","_key","connect","state","schema","fileName","columName","dispatch","updateQuestion","question","questionAction","QuestionList","defaultEqualityCheck","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","i","getDependencies","funcs","dependencies","isArray","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","memoizeOptions","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","factSimilarity","f1","f2","s2","s3","s1","type","m1","measure","x","field","m2","m_intersection","filter","value","includes","m_longer","s4","subspace1fields","subspace","subspace2fields","subspace_intersection","subspace_longer","s5","g1","groupby","g2","g_intersection","g_longer","focus1","focus","focus2","focus_intersection","focus_longer","factDistance","HierarchicalClustering","distance","linkage","threshold","this","Infinity","prototype","cluster","items","snapshotPeriod","snapshotCb","clusters","dists","mins","index","key","size","j","dist","merged","mergeClosest","forEach","minKey","min","c1","c2","left","right","splice","ci","key1","key2","factAggRules","storyAggregation","original_facts","aggregationLevel","facts","slice","aggregated","aggregatedFact","doubleNodes","getLeafNodes","tree","nodes","leftLeafNodes","rightLeafNodes","snapshot","snapshotCallback","hcluster","sort","aggregationCount","parseInt","aggFacts","aggFact","firstIndex","secondIndex","factAggregation","rule","compoundFact","_","cloneDeep","compoundType","compoundChart","ChartType","score","chart","eqSet","Set","as","bs","has","story","title","relations","maxStoryLength","resultCoverage","rewardWeight","generateProgress","originFacts","storyParameter","information","chartDiversity","timeLimit","operateState","user","isLogin","isClosePannel","getUserInfo","Cookies","get","JSON","parse","username","uid","ActionType","UPDATE_QUESTION","saveCachedDecomposedQA","QA","SAVE_CACHED_QA","cachedQA","questions","isLoading","getQuestion","setState","file_name","column_name","api","history","nextProps","intl","initDone","className","tip","q","id","time","style","animationDuration","onClick","Component"],"mappings":"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","file":"static/js/17.d7f3e5e2.chunk.js","sourcesContent":["import * as React from 'react';\nvar isValidElement = React.isValidElement;\nexport { isValidElement };\nexport function replaceElement(element, replacement, props) {\n  if (!isValidElement(element)) return replacement;\n  return /*#__PURE__*/React.cloneElement(element, typeof props === 'function' ? props(element.props || {}) : props);\n}\nexport function cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}","//let calliopeService = 'calliope-service.idvxlab.com:8004';\nlet calliopeService = 'talk-api.idvxlab.com:8006';\n\nlet uploadPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeService}` : 'http://localhost:6028';//todo \n//let uploadPrefix = `https://${calliopeService}`\nlet generationUrlPrefix = process.env.NODE_ENV === 'production' ? `https://${calliopeService}` : 'http://localhost:6030';\n//let generationUrlPrefix = `https://${calliopeService}`\n\n\nconst config = {\n    url: {\n        //upload\n        uploadPrefix: uploadPrefix,\n        uploadData: `${uploadPrefix}/upload`,\n        share: `${uploadPrefix}/share`,\n        fetch: `${uploadPrefix}/data/share`,\n        //story generation\n        factScoring: `${generationUrlPrefix}/fact`,\n        generate: `${generationUrlPrefix}/generate`,\n        candidateQuestions: `https://${calliopeService}/column2questions`,\n    }\n}\nexport default config","export default {\n    JUXTAPOSITION: 'juxtaposition',\n    AREA_CHART: 'Area Chart',\n    VERTICAL_BAR_CHART: 'Vertical Bar Chart',\n    VERTICAL_DIFFERENCE_BAR_CHART: 'Vertical Difference Bar Chart',\n    VERTICAL_DIFFERENCE_ARROW_CHART: 'Vertical Difference Arrow Chart',\n    HORIZONTAL_BAR_CHART: 'Horizontal Bar Chart',\n    PROGRESS_BAR_CHART: 'Progress Bar Chart',\n    STACKED_BAR_CHART: 'Stacked Bar Chart',\n    ISOTYPE_BAR_CHART: 'Isotype Bar Chart',\n    PROPORTION_ISOTYPE_CHART: 'Proportion Isotype Chart',\n    COLOR_FILLING_MAP: 'Color Filling Map',\n    BUBBLE_CHART: 'Bubble Chart',\n    TEXT_CHART: 'Text Chart',\n    LINE_CHART: 'Line Chart',\n    STACKED_LINE_CHART: 'Stacked Line Chart',\n    RING_CHART: 'Ring Chart',\n    HALF_RING_CHART: 'Half Ring Chart',\n    PIE_CHART: 'Pie Chart',\n    SCATTER_PLOT: 'Scatter Plot',\n    TREE_MAP: 'Treemap',\n    BUBBLE_MAP: 'Bubblemap'\n}","import config from '@/axios/config';\nimport axios from 'axios';\n\nexport async function uploadData(formData) {\n    return new Promise((reslove, reject) => {\n        axios({\n            method: \"post\",\n            url: `${config.url.uploadData}`,\n            config: {\n                \"headers\": {\n                    'Content-Type': 'multipart/form-data' //application/json; charset=utf-8\n                },\n            },\n            data: formData\n        }).then((response) => {\n            if (response.status >= 400) {\n                reject();\n            } else if (response.status === 200 || response.status === 201 || response.status === 204) {\n                reslove(response.data);\n            } else {\n                reject();\n            }\n        }).catch(error => {\n            reject();\n            //  message.error('error message');\n        })\n    })\n}\n\n\nexport function generate(data) {\n    return axios({\n        method: \"post\",\n        url: `${config.url.generate}`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        },\n        data: data\n    })\n}\n\nexport function getQuestions(data) {\n    return axios({\n        method: \"post\",\n        url: `${config.url.candidateQuestions}`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        },\n        data: data\n    })\n}\nexport function factScoring(filename, fact, method) {\n    return axios({\n        \"method\": \"POST\",\n        \"url\": config.url.factScoring,\n        \"headers\": {\n            \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        \"data\": {\n            \"file_name\": filename,\n            \"fact\": fact,\n            \"method\": method,\n        }\n    })\n}\n\nexport async function shareStory(jsonstring) {\n    return new Promise((reslove, reject) => {\n        axios({\n            method: \"post\",\n            url: `${config.url.share}`,\n            config: {\n                \"headers\": {\n                    'Content-Type': 'application/json; charset=utf-8'\n                },\n            },\n            data: {\n                \"share_json\": jsonstring\n            }\n        }).then((response) => {\n            if (response.status >= 400) {\n                reject();\n            } else if (response.status === 200 || response.status === 201 || response.status === 204) {\n                reslove(response.data);\n            } else {\n                reject();\n            }\n        }).catch(error => {\n            reject();\n            //  message.error('error message');\n        })\n    })\n}\n\nexport async function fetchStory(id) {\n    return axios({\n        method: \"get\",\n        \"url\": `${config.url.fetch}/${id}.json`,\n        config: {\n            \"headers\": {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n        }\n    })\n}\n/*****\n *技术栈：\n ssr(后端渲染)，koa(koa-views)：模板渲染，渲染出要生成pdf的页面)\n node.js 生成pdf插件 puppeteer：将渲染的页面生成PDF\n koa-send：将生成的PDF返回给前端页面下载 \n * \n data是后端用于渲染页面的数据\n */\nexport function generatePDF(data) {\n    return axios({\n        method: 'post',\n        url: `/generatePDF`,\n        param: {},\n        data: data\n    })\n}\n","// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport var tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\nexport var tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};","import { connect } from 'react-redux';\nimport { fileName, schema, data } from '@/selector/story';\nimport { columName } from '@/selector/user';\nimport QuestionList from './QuestionList';\nimport * as questionAction from '@/action/questionAction';\n\nconst mapStateToProps = (state) => ({\n    schema: schema(state),\n    fileName: fileName(state),\n    columName: columName(state),\n    data: data(state)\n})\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateQuestion: (question) => dispatch(questionAction.updateQuestion(question)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionList);\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","export const euclidean = function(v1, v2) {\n    var total = 0;\n    for (var i = 0; i < v1.length; i++) {\n       total += Math.pow(v2[i] - v1[i], 2);      \n    }\n    return Math.sqrt(total);\n}\n\nexport const manhattan = function(v1, v2) {\n   var total = 0;\n   for (var i = 0; i < v1.length ; i++) {\n      total += Math.abs(v2[i] - v1[i]);      \n   }\n   return total;\n}\n\nexport const factSimilarity = function(f1, f2) {\n   // 1. fact\n   let s1 = f1.type === f2.type ? 1 : 0;\n\n   // 2. measure\n   let s2\n   let m1 = f1.measure.map(x=>x.field);\n   let m2 = f2.measure.map(x=>x.field);\n   if (m1.length === 0 && m2.length === 0) {\n      s2 = 1 // no measure\n   } else {\n      let m_intersection = m1.filter(value => m2.includes(value));\n      let m_longer = m1.length > m2.length ? m1 : m2;\n      s2 = m_intersection.length / m_longer.length;\n   }\n\n   // 3. subspace\n   let s3\n   let subspace1fields = f1.subspace.map(x=>x.field);\n   let subspace2fields = f2.subspace.map(x=>x.field);\n   if (subspace1fields.length === 0 && subspace2fields.length === 0) {\n      s3 = 1 // subspace is whole data\n   } else {\n      let subspace_intersection = subspace1fields.filter(value => subspace2fields.includes(value));\n      let subspace_longer = subspace1fields.length > subspace2fields.length ? subspace1fields : subspace2fields;\n      s3 = subspace_intersection.length / subspace_longer.length;\n   }\n\n   // 4. groupby\n   let s4;\n   let g1 = f1.groupby;\n   let g2 = f2.groupby;\n   if (g1.length === 0 && g2.length === 0) {\n      s4 = 1;\n   } else {\n      let g_intersection = g1.filter(value => g2.includes(value));\n      let g_longer = g1.length > g2.length ? g1 : g2;\n      s4 = g_intersection.length / g_longer.length;\n   }\n   \n   // 5. focus\n   let s5;\n   let focus1 = f1.focus.map(x=>x.value);\n   let focus2 = f2.focus.map(x=>x.value);\n   if (focus1.length === 0 && focus2.length === 0) {\n      s5 = 0; // no focus\n   } else {\n      let focus_intersection = focus1.filter(value => focus2.includes(value))\n      let focus_longer = focus1.length > focus2.length ? focus1 : focus2\n      s5 = focus_intersection.length / focus_longer.length\n   }\n\n   let similarity = 0.2*s1 + 0.2*s2 + 0.2*s3 + 0.2*s4 + 0.2*s5;\n   return similarity;\n}\n\nexport const factDistance = function(f1, f2) {\n   return 1 - factSimilarity(f1, f2)\n}","// reference: https://github.com/harthur/clustering\nimport {factDistance} from './distance';\n\nconst HierarchicalClustering = function(distance, linkage, threshold) {\n    this.distance = distance;\n    this.linkage = linkage;\n    this.threshold = threshold === undefined ? Infinity : threshold;\n}\n\nHierarchicalClustering.prototype = {\n    cluster : function(items, snapshotPeriod, snapshotCb) {\n        this.clusters = [];\n        this.dists = [];  // distances between each pair of clusters\n        this.mins = []; // closest cluster for each cluster\n        this.index = []; // keep a hash of all clusters by key\n        \n        for (let i = 0; i < items.length; i++) {\n            let cluster = {\n                value: items[i],\n                key: i,\n                index: i,\n                size: 1\n            };\n            this.clusters[i] = cluster;\n            this.index[i] = cluster;\n            this.dists[i] = [];\n            this.mins[i] = 0;\n        }\n\n        for (let i = 0; i < this.clusters.length; i++) {\n            for (let j = 0; j <= i; j++) {\n                let dist = (i === j) ? Infinity : \n                this.distance(this.clusters[i].value, this.clusters[j].value);\n                this.dists[i][j] = dist;\n                this.dists[j][i] = dist;\n\n                if (dist < this.dists[i][this.mins[i]]) {\n                this.mins[i] = j;               \n                }\n            }\n        }\n\n        let merged = this.mergeClosest();\n        let i = 0;\n        while (merged) {\n            if (snapshotCb && (i++ % snapshotPeriod) === 0) {\n            snapshotCb(this.clusters);           \n            }\n            merged = this.mergeClosest();\n        }\n        \n        this.clusters.forEach(function(cluster) {\n            // clean up metadata used for clustering\n            delete cluster.key;\n            delete cluster.index;\n        });\n\n        return this.clusters;\n    },\n\n    mergeClosest: function() {\n        // find two closest clusters from cached mins\n        let minKey = 0, min = Infinity;\n        for (let i = 0; i < this.clusters.length; i++) {\n            let key = this.clusters[i].key,\n                dist = this.dists[key][this.mins[key]];\n            if (dist < min) {\n                minKey = key;\n                min = dist;\n            }\n        }\n        if (min >= this.threshold) {\n            return false;         \n        }\n\n        let c1 = this.index[minKey],\n            c2 = this.index[this.mins[minKey]];\n\n        // merge two closest clusters\n        let merged = {\n            left: c1,\n            right: c2,\n            key: c1.key,\n            size: c1.size + c2.size\n        };\n\n        this.clusters[c1.index] = merged;\n        this.clusters.splice(c2.index, 1);\n        this.index[c1.key] = merged;\n\n        // update distances with new merged cluster\n        for (let i = 0; i < this.clusters.length; i++) {\n            let ci = this.clusters[i];\n            let dist;\n            if (c1.key === ci.key) {\n                dist = Infinity;            \n            }\n            else if (this.linkage === \"single\") {\n                dist = this.dists[c1.key][ci.key];\n                if (this.dists[c1.key][ci.key] > this.dists[c2.key][ci.key]) {\n                dist = this.dists[c2.key][ci.key];\n                }\n            }\n            else if (this.linkage === \"complete\") {\n                dist = this.dists[c1.key][ci.key];\n                if (this.dists[c1.key][ci.key] < this.dists[c2.key][ci.key]) {\n                dist = this.dists[c2.key][ci.key];              \n                }\n            }\n            else if (this.linkage === \"average\") {\n                dist = (this.dists[c1.key][ci.key] * c1.size\n                    + this.dists[c2.key][ci.key] * c2.size) / (c1.size + c2.size);\n            }\n            else {\n                dist = this.distance(ci.value, c1.value);            \n            }\n\n            this.dists[c1.key][ci.key] = this.dists[ci.key][c1.key] = dist;\n        }\n\n        \n        // update cached mins\n        for (let i = 0; i < this.clusters.length; i++) {\n            let key1 = this.clusters[i].key;        \n            if (this.mins[key1] === c1.key || this.mins[key1] === c2.key) {\n                let min = key1;\n                for (let j = 0; j < this.clusters.length; j++) {\n                let key2 = this.clusters[j].key;\n                if (this.dists[key1][key2] < this.dists[key1][min]) {\n                    min = key2;                  \n                }\n                }\n                this.mins[key1] = min;\n            }\n            this.clusters[i].index = i;\n        }\n        \n        // clean up metadata used for clustering\n        delete c1.key; delete c2.key;\n        delete c1.index; delete c2.index;\n\n        return true;\n    }\n    }\n\nexport const hcluster = function(items, linkage, threshold, snapshot, snapshotCallback) {\n    linkage = linkage || \"average\";\n    let clusters = (new HierarchicalClustering(factDistance, linkage, threshold))\n                   .cluster(items, snapshot, snapshotCallback);\n       \n    if (threshold === undefined) {\n       return clusters[0]; // all clustered into one\n    }\n    return clusters;\n}","export const factAggRules = [\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Stacked Bar Chart\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"difference\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"Horizontal Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"rank\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"distribution\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"distribution\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"difference\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"difference\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"difference\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Horizontal Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"rank\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Horizontal Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"rank\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"rank\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"distribution\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"extreme\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"outlier\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"categorization\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"trend\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"value\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"Horizontal Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"rank\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"extreme\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme+outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"extreme\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Line Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"proportion\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"outlier\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme+outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"outlier\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Line Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"association\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"distribution\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"difference\",\n    \"Chart\": \"Vertical Bar Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"difference\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"rank\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"categorization\",\n    \"Chart\": \"Isotype Bar Chart\",\n    \"Measure\": \"trend\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"value\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"extreme\",\n    \"Chart\": \"Line Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"extreme\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"proportion\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"outlier\",\n    \"Chart\": \"Line Chart\",\n    \"Measure\": \"equal\",\n    \"Subspace\": \"equal\",\n    \"Groupby\": \"equal\",\n    \"Focus\": \"outlier\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"association\",\n    \"Chart\": \"juxtaposition\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  },\n  {\n    \"Fact Type 1\": \"trend\",\n    \"Fact Type 2\": \"trend\",\n    \"Chart\": \"Stacked Line Chart\",\n    \"Measure\": \"\",\n    \"Subspace\": \"\",\n    \"Groupby\": \"\",\n    \"Focus\": \"\",\n    \n  }\n]","import _ from 'lodash';\nimport {hcluster} from './hcluster';\nimport {getLeafNodes} from './tree';\nimport {factSimilarity} from './distance';\nimport {factAggRules} from './factAggRule';\nimport ChartType from '../constant/ChartType';\n\nexport const storyAggregation = function(original_facts, aggregationLevel) {\n    let facts = original_facts.slice();\n    for (let index = 0; index < facts.length; index++) {\n        facts[index].index = index;\n        facts[index].aggregated = false;\n        facts[index].aggregatedFact = null;\n    }\n    // Step 1. construct a hierachical cluster tree\n    let htree = hcluster(facts);\n    // Step 2. get all single leaf and double leaves\n    let nodes = getLeafNodes(htree);\n    // Step 3. filter double leaves\n    let doubleNodes = nodes.filter(x=>x.length>1);\n    // Step 4. rank according to fact similarity\n    doubleNodes.sort(function(a, b){return factSimilarity(b[0], b[1]) - factSimilarity(a[0], a[1])});\n    let aggregationCount = parseInt((doubleNodes.length+1) * aggregationLevel)\n    let aggFacts = doubleNodes.slice(0, aggregationCount);\n    for (const aggFact of aggFacts) {\n        let firstIndex = aggFact[0].index < aggFact[1].index? aggFact[0].index:aggFact[1].index;\n        let secondIndex = aggFact[0].index > aggFact[1].index? aggFact[0].index:aggFact[1].index;\n        facts[firstIndex] = factAggregation(facts[firstIndex], facts[secondIndex])\n        facts[secondIndex].aggregated = true;\n        facts[secondIndex].aggregatedFact = null;\n    }\n    return facts;\n}\n\nexport const factAggregation = function(f1, f2) {\n    let rule = factAggRules.filter(x=>(x['Fact Type 1']===f1.type&&x['Fact Type 2']===f2.type))[0]\n    let compoundFact = _.cloneDeep(f1);\n    compoundFact.aggregated = true;\n    compoundFact.aggregatedFact = _.cloneDeep(f2)\n    compoundFact.compoundType = [f1.type, f2.type];\n    compoundFact.compoundChart = ChartType.JUXTAPOSITION;\n    compoundFact.score += compoundFact.aggregatedFact.score;\n    // Step 1. check rule is juxtaposition or not\n    if (rule.chart === ChartType.JUXTAPOSITION) {\n        return compoundFact;\n    }\n    // Step 2. process stacked chart\n    if (rule.chart === ChartType.STACKED_BAR_CHART) {\n        compoundFact.compoundChart = ChartType.STACKED_BAR_CHART;\n        return compoundFact;\n    }\n    if (rule.chart === ChartType.STACKED_LINE_CHART) {\n        compoundFact.compoundChart = ChartType.STACKED_LINE_CHART;\n        return compoundFact;\n    }\n\n    // Step 3. check equal rule\n    if (rule['Measure'] === \"equal\") {\n        let measure1 = new Set(f1.measure.map(x=>x[\"field\"]));\n        let measure2 = new Set(f2.measure.map(x=>x[\"field\"]));\n        if (!eqSet(measure1, measure2)) {\n            return compoundFact;\n        }\n    }\n    if (rule['Subspace'] === \"equal\") {\n        let subspace1 = new Set(f1.subspace.map(x=>x[\"field\"]+\"++\"+x[\"value\"]));\n        let subspace2 = new Set(f2.subspace.map(x=>x[\"field\"]+\"++\"+x[\"value\"]));\n        if (!eqSet(subspace1, subspace2)) {\n            return compoundFact;\n        }\n    }\n    if (rule['Groupby'] === \"equal\") {\n        let groupby1 = new Set(f1.groupby);\n        let groupby2 = new Set(f2.groupby);\n        if (!eqSet(groupby1, groupby2)) {\n            return compoundFact;\n        }\n    }\n    if (rule['Focus'] === \"equal\") {\n        let focus1 = new Set(f1.focus.map(x=>x[\"field\"]+\"++\"+x[\"value\"]));\n        let focus2 = new Set(f2.focus.map(x=>x[\"field\"]+\"++\"+x[\"value\"]));\n        if (!eqSet(focus1, focus2)) {\n            return compoundFact;\n        }\n    }\n    // Step 4. fill fact\n    compoundFact.compoundChart = rule['Chart'];\n    if (rule['Measure'] !== \"equal\" && rule['Measure'] !== \"\") {\n        if (f1.type === rule['Measure']) {\n            compoundFact.measure = f1.measure;\n        } else {\n            compoundFact.measure = f2.measure;\n        }\n    }\n    if (rule['Subspace'] !== \"equal\" && rule['Subspace'] !== \"\") {\n        if (f1.type === rule['Subspace']) {\n            compoundFact.subspace = f1.subspace;\n        } else {\n            compoundFact.subspace = f2.subspace;\n        }\n    }\n    if (rule['Groupby'] !== \"equal\" && rule['Groupby'] !== \"\") {\n        if (f1.type === rule['Groupby']) {\n            compoundFact.groupby = f1.groupby;\n        } else {\n            compoundFact.groupby = f2.groupby;\n        }\n    }\n    if (rule['Focus'] !== \"equal\" && rule['Focus'] !== \"\") {\n        if (f1.type === rule['Focus']) {\n            compoundFact.focus = f1.focus;\n        } else {\n            compoundFact.focus = f2.focus;\n        }\n    }\n    \n    return compoundFact;\n}\n\nfunction eqSet(as, bs) {\n    if (as.size !== bs.size) return false;\n    for (var a of as) if (!bs.has(a)) return false;\n    return true;\n}","export const getLeafNodes = (tree) => {\n    let nodes = []\n    if (!tree) {\n        return nodes\n    }\n    if (tree.size > 2) {\n        let leftLeafNodes = getLeafNodes(tree.left);\n        let rightLeafNodes = getLeafNodes(tree.right);\n        nodes.push(...leftLeafNodes);\n        nodes.push(...rightLeafNodes);\n    } else if (tree.size === 2) {\n        nodes.push([tree.left.value, tree.right.value]);\n    } else {\n        nodes.push([tree.value]);\n    }\n    return nodes;\n}","import { createSelector } from 'reselect';\nimport { storyAggregation } from '../tool/factAggregation';\n\n// data\nexport const fileName = state => state.story.fileName;\nexport const title = state => state.story.title;\nexport const data = state => state.story.data;\nexport const schema = state => state.story.schema;\n// story\nconst originFacts = state => state.story.facts;\nexport const relations = state => state.story.relations;\nexport const method = state => state.story.method;\nexport const maxStoryLength = state => state.story.maxStoryLength;\nexport const chartDiversity = state => state.story.chartDiversity;\nexport const information = state => state.story.information;\nexport const timeLimit = state => state.story.timeLimit;\nexport const resultCoverage = state => state.story.resultCoverage;\nexport const aggregationLevel = state => state.story.aggregationLevel;\nexport const rewardWeight = state => state.story.rewardWeight;\nexport const historyStory = state => state.story.historyStory;\nexport const generateProgress = state => state.story.generateProgress;\n\n\nexport const facts = createSelector(\n    originFacts,\n    aggregationLevel,\n    function (originFacts, aggregationLevel) {\n        return storyAggregation(originFacts, aggregationLevel)\n    }\n)\n\n\nexport const storyParameter = createSelector(\n    maxStoryLength,\n    information,\n    chartDiversity,\n    timeLimit,\n    function (maxStoryLength, information, chartDiversity, timeLimit) {\n        return {\n            maxStoryLength: maxStoryLength,\n            information: information,\n            chartDiversity: chartDiversity,\n            timeLimit: timeLimit,\n        }\n    }\n)\n\n","//import { createSelector } from 'reselect';\nimport Cookies from 'js-cookie';\nexport const schema = state => state.story.schema;\nexport const operateState = state => state.user.operateState;\nexport const isLogin = state => state.user.isLogin;\nexport const convertType = state => state.user.convertType;\nexport const currentLocale = state => state.user.currentLocale;\nexport const isClosePannel = state => state.user.isClosePannel;\nexport const columName = state => state.user.columName;\n\n\n\nexport const getUserInfo = state => {\n    return Cookies.get(\"userInfo\") && JSON.parse(Cookies.get(\"userInfo\")) ? JSON.parse(Cookies.get(\"userInfo\")) : {\n        username: \"\",\n        uid: -1\n    }\n}\n\n\n","import ActionType from './type';\n\nexport const updateQuestion = (question) => ({\n    type: ActionType.UPDATE_QUESTION,\n    question\n})\n\nexport const saveCachedDecomposedQA = (QA) => ({\n    type: ActionType.SAVE_CACHED_QA,\n    cachedQA:QA\n})","import React, { Component } from 'react'\nimport { Spin } from 'antd';\nimport * as api from '@/axios/api'\n\nimport './QuestionList.less'\n\n\nexport default class QuestionList extends Component {\n\n    state = {\n        questions: [],\n        isLoading: false\n    }\n\n    componentWillMount() {\n        if (this.props.columName === '' && this.props.data.length === 0) return\n        this.getQuestion(this.props.columName)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.columName !== this.props.columName) {\n            this.getQuestion(nextProps.columName)\n        }\n    }\n    getQuestion = async (columName) => {\n        const { fileName, schema } = this.props\n\n        this.setState({\n            isLoading: true\n        })\n\n        let data = {\n            file_name: fileName,\n            column_name: columName || ' ',\n        }\n        let response = await api.getQuestions(data)\n\n        this.setState({\n            isLoading: false,\n            questions: response.data.length > 0 ? response.data : []\n        })\n    }\n    generate = (question) => {\n        this.props.updateQuestion(question)\n        this.props.history.push('/edit')\n    }\n    render() {\n        const { intl, initDone } = this.props;\n        let { questions, isLoading } = this.state\n\n        return (\n            <>\n                <div className=\"Question\">{initDone && intl.get('qa')}</div>\n                <div className=\"QuestArray\">\n                    {\n                        isLoading ? <Spin tip={initDone && intl.get(\"Loading\")} ></Spin>\n                            :\n                            questions.map((q, id) => {\n                                const time = 0.2 + 0.1 * id;\n                                return <p key={id} className={`p-${id}`} style={{ animationDuration: `${time}s` }} onClick={() => this.generate(q)} >{q}</p>\n                            })\n                    }\n                </div>\n            </>\n        )\n    }\n}"],"sourceRoot":""}